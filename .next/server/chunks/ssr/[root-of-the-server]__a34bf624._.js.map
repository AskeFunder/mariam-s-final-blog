{"version":3,"sources":["turbopack:///[project]/Desktop/Vue/Ionic/mariam-s-final-blog/node_modules/next-sanity/dist/studio/client-component/index.js/__nextjs-internal-proxy.mjs","turbopack:///[project]/Desktop/Vue/Ionic/mariam-s-final-blog/node_modules/next-sanity/src/studio/client-component/NextStudioLazy.tsx","turbopack:///[project]/Desktop/Vue/Ionic/mariam-s-final-blog/sanity.config.ts/__nextjs-internal-proxy.mjs","turbopack:///[project]/Desktop/Vue/Ionic/mariam-s-final-blog/node_modules/next-sanity/src/studio/NextStudioLayout.tsx","turbopack:///[project]/Desktop/Vue/Ionic/mariam-s-final-blog/node_modules/next-sanity/src/studio/head.tsx","turbopack:///[project]/Desktop/Vue/Ionic/mariam-s-final-blog/src/app/studio/[[...tool]]/page.tsx","turbopack:///[project]/Desktop/Vue/Ionic/mariam-s-final-blog/node_modules/next-sanity/src/studio/NextStudioWithBridge.tsx","turbopack:///[project]/Desktop/Vue/Ionic/mariam-s-final-blog/node_modules/next-sanity/src/studio/NextStudioNoScript.tsx"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport const NextStudio = registerClientReference(\n    function() { throw new Error(\"Attempted to call NextStudio() from the server but NextStudio is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/Desktop/Vue/Ionic/mariam-s-final-blog/node_modules/next-sanity/dist/studio/client-component/index.js\",\n    \"NextStudio\",\n);\n","/**\n *\n * If pages router supported `next/dynamic` imports (it wants `next/dynamic.js`),\n * or if turbopack in app router allowed `next/dynamic.js` (it doesn't yet)\n * we could use `dynamic(() => import('...), {ssr: false})` here.\n * Since we can't, we need to use a lazy import and Suspense ourself.\n */\n\nimport {lazy, Suspense} from 'react'\n\nimport type {NextStudioProps} from './NextStudio'\n\nconst NextStudioClientComponent = lazy(() => import('./NextStudio'))\n\nexport function NextStudioLazyClientComponent(props: NextStudioProps): React.ReactNode {\n  return (\n    <Suspense fallback={null}>\n      <NextStudioClientComponent {...props} />\n    </Suspense>\n  )\n}\n","// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/Desktop/Vue/Ionic/mariam-s-final-blog/sanity.config.ts from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/Desktop/Vue/Ionic/mariam-s-final-blog/sanity.config.ts\",\n    \"default\",\n);\n","/** @public */\nexport interface NextStudioLayoutProps {\n  children: React.ReactNode\n}\n\nconst style = {\n  height: '100vh',\n  maxHeight: '100dvh',\n  overscrollBehavior: 'none',\n  WebkitFontSmoothing: 'antialiased',\n  overflow: 'auto',\n} satisfies React.CSSProperties\n\n/** @public */\nexport const NextStudioLayout = ({children}: NextStudioLayoutProps): React.JSX.Element => {\n  return (\n    <div id=\"sanity\" data-ui=\"NextStudioLayout\" style={style}>\n      {children}\n    </div>\n  )\n}\n","import type {Metadata, Viewport} from 'next'\n\n/**\n * In router segments (`/app/studio/[[...index]]/page.tsx`):\n * ```tsx\n * // If you don't want to change any defaults you can just re-export the viewport config directly:\n * export {viewport} from 'next-sanity/studio'\n *\n * // To customize the viewport config, spread it on the export:\n * import {viewport as studioViewport} from 'next-sanity/studio'\n * import type { Viewport } from 'next'\n *\n * export const viewport: Viewport = {\n *   ...studioViewport,\n *   // Overrides the viewport to resize behavior\n *   interactiveWidget: 'resizes-content'\n * })\n * ```\n * @public\n */\nexport const viewport = {\n  width: 'device-width' as const,\n  initialScale: 1 as const,\n  // Studio implements display cutouts CSS (The iPhone Notch â„¢ ) and needs `viewport-fit=covered` for it to work correctly\n  viewportFit: 'cover',\n} satisfies Viewport\n\n/**\n * In router segments (`/app/studio/[[...index]]/page.tsx`):\n * ```tsx\n * // If you don't want to change any defaults you can just re-export the metadata directly:\n * export {metadata} from 'next-sanity/studio'\n *\n * // To customize the metadata, spread it on the export:\n * import {metadata as studioMetadata} from 'next-sanity/studio'\n * import type { Metadata } from 'next'\n *\n * export const metadata: Metadata = {\n *   ...studioMetadata,\n *   // Set another title\n *   title: 'My Studio',\n * })\n * ```\n * @public\n */\nexport const metadata = {\n  referrer: 'same-origin' as const,\n  robots: 'noindex' as const,\n} satisfies Metadata\n","/**\r\n * This route is responsible for the built-in authoring environment using Sanity Studio.\r\n * All routes under your studio path is handled by this file using Next.js' catch-all routes:\r\n * https://nextjs.org/docs/routing/dynamic-routes#catch-all-routes\r\n *\r\n * You can learn more about the next-sanity package here:\r\n * https://github.com/sanity-io/next-sanity\r\n */\r\n\r\nimport { NextStudio } from 'next-sanity/studio'\r\nimport config from '../../../../sanity.config'\r\n\r\nexport const dynamic = 'force-static'\r\n\r\nexport { metadata, viewport } from 'next-sanity/studio'\r\n\r\nexport default function StudioPage() {\r\n  return <NextStudio config={config} />\r\n}\r\n","import {NextStudio, type NextStudioProps} from 'next-sanity/studio/client-component'\nimport {preloadModule} from 'react-dom'\n\n/**\n * Loads the bridge script the same way Sanity Studio does:\n * https://github.com/sanity-io/sanity/blob/bd5b1acb5015baaddd8d96c2abd1eaf579b3c904/packages/sanity/src/_internal/cli/server/renderDocument.tsx#L124-L139\n */\n\nconst bridgeScript = 'https://core.sanity-cdn.com/bridge.js'\n\nexport function NextStudioWithBridge(props: NextStudioProps): React.JSX.Element {\n  preloadModule(bridgeScript, {as: 'script'})\n\n  return (\n    <>\n      <script src={bridgeScript} async type=\"module\" data-sanity-core />\n      <NextStudio {...props} />\n    </>\n  )\n}\n","const styles: Record<'outer' | 'inner', React.CSSProperties> = {\n  outer: {\n    position: 'absolute',\n    top: 0,\n    right: 0,\n    left: 0,\n    bottom: 0,\n    background: '#fff',\n    zIndex: 1,\n  },\n  inner: {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    textAlign: 'center',\n    fontFamily: 'helvetica, arial, sans-serif',\n  },\n}\n\n/** @internal */\nexport const NextStudioNoScript = (): React.JSX.Element => (\n  <noscript>\n    <div style={styles.outer}>\n      <div style={styles.inner}>\n        <h1>JavaScript disabled</h1>\n        <p>\n          Please <a href=\"https://www.enable-javascript.com/\">enable JavaScript</a> in your browser\n          and reload the page to proceed.\n        </p>\n      </div>\n    </div>\n  </noscript>\n)\n"],"names":["styles: Record<'outer' | 'inner', React.CSSProperties>"],"mappings":"mQAEO,IAAM,EAAa,CAAA,EAAA,AAD1B,EAAA,CAAA,CAAA,OAC0B,uBAAA,AAAuB,EAC7C,WAAa,MAAM,AAAI,MAAM,kOAAoO,EACjQ,qIACA,gEAHG,IAAM,EAAa,CAAA,EAD1B,AAC0B,EAD1B,CAAA,CAAA,OAC0B,uBAAA,AAAuB,EAC7C,WAAa,MAAM,AAAI,MAAM,kOAAoO,EACjQ,iHACA,6HEHW,CAAA,EADf,AACe,EADf,CAAA,CAAA,OACe,uBAAA,AAAuB,EAClC,WAAa,MAAU,AAAJ,MAAU,wTAA0T,EACvV,uFACA,gEAHW,CAAA,EADf,AACe,EADf,CAAA,CAAA,OACe,uBAAA,AAAuB,EAClC,WAAa,MAAU,AAAJ,MAAU,oSAAsS,EACnU,mEACA,qQEeJ,IAAa,EAAW,CACtB,MAAO,4BACO,EAEd,YAAa,SAqBF,EAAW,CACtB,SAAU,cACV,OAAQ,UACT,CExCK,EAAe,wCAErB,SAAgB,EAAqB,CAAA,EAGnC,AAH8E,MAC9E,CAAA,AAGE,EAHF,EAAA,aAAA,EAAc,EAAc,CAAC,GAAI,QAAA,CAAS,CAAC,CAGzC,CAAA,EAAA,EAAA,IAAA,EAAA,EAAA,QAAA,CAAA,CAAA,SAAA,CACE,CAAA,EAAA,EAAA,GAAA,EAAC,SAAA,KAAY,SAAc,OAAW,6BAAS,IAC/C,CAAA,EAAA,EAAA,GAAA,EAAC,EAAA,UAAA,CAAA,CAAW,GAAI,CAAA,CAAA,CAAS,CAAA,CAAA,CACxB,CDPP,IAAA,EAAA,EAAA,CAAA,CAAA,OAEO,IAAM,EAAU,eAIR,SAAS,IACtB,MAAO,CAAA,EAAA,EAAA,GAAA,EAAC,EAAA,CAAW,OAAQ,EAAA,OAAM,EACnC","ignoreList":[0,2,3,4,6,7]}