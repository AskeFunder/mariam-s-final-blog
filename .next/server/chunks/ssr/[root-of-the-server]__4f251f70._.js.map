{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 106, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Aske/Desktop/Vue/Ionic/mariam-s-final-blog/src/sanity/env.ts"],"sourcesContent":["export const apiVersion =\r\n  process.env.NEXT_PUBLIC_SANITY_API_VERSION || '2025-09-28'\r\n\r\nexport const dataset = assertValue(\r\n  process.env.NEXT_PUBLIC_SANITY_DATASET,\r\n  'Missing environment variable: NEXT_PUBLIC_SANITY_DATASET'\r\n)\r\n\r\nexport const projectId = assertValue(\r\n  process.env.NEXT_PUBLIC_SANITY_PROJECT_ID,\r\n  'Missing environment variable: NEXT_PUBLIC_SANITY_PROJECT_ID'\r\n)\r\n\r\nfunction assertValue<T>(v: T | undefined, errorMessage: string): T {\r\n  if (v === undefined) {\r\n    throw new Error(errorMessage)\r\n  }\r\n\r\n  return v\r\n}\r\n"],"names":[],"mappings":";;;;;;;;AAAO,MAAM,aACX,kDAA8C;AAEzC,MAAM,UAAU,4DAErB;AAGK,MAAM,YAAY,0DAEvB;AAGF,SAAS,YAAe,CAAgB,EAAE,YAAoB;IAC5D,IAAI,MAAM,WAAW;QACnB,MAAM,IAAI,MAAM;IAClB;IAEA,OAAO;AACT","debugId":null}},
    {"offset": {"line": 127, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Aske/Desktop/Vue/Ionic/mariam-s-final-blog/src/sanity/schemaTypes/article.ts"],"sourcesContent":["// src/sanity/schemaTypes/article.ts\r\nimport { defineType, defineField, defineArrayMember } from 'sanity'\r\n\r\nexport default defineType({\r\n  name: 'article',\r\n  title: 'Article',\r\n  type: 'document',\r\n  fields: [\r\n    defineField({\r\n      name: 'title',\r\n      type: 'string',\r\n      validation: r => r.required(),\r\n    }),\r\n    defineField({\r\n      name: 'slug',\r\n      type: 'slug',\r\n      options: { source: 'title', maxLength: 96 },\r\n      validation: r => r.required(),\r\n    }),\r\n    defineField({\r\n      name: 'date',\r\n      type: 'datetime',\r\n      initialValue: () => new Date().toISOString(),\r\n    }),\r\n    defineField({\r\n      name: 'category',\r\n      type: 'string',\r\n      options: {\r\n        list: [\r\n          { title: 'Brief', value: 'brief' },\r\n          { title: 'Notes on art', value: 'notes-on-art' },\r\n        ],\r\n        layout: 'radio',\r\n      },\r\n      validation: r => r.required(),\r\n    }),\r\n\r\n    // Optional: cover used for cards/hero fallback\r\n    defineField({\r\n      name: 'coverMedia',\r\n      title: 'Cover media',\r\n      type: 'image',\r\n      options: { hotspot: true },\r\n      fields: [\r\n        defineField({ name: 'alt', type: 'string', title: 'Alt text' }),\r\n        defineField({ name: 'caption', type: 'string', title: 'Caption' }),\r\n      ],\r\n    }),\r\n\r\n    // Main rich content (text + images in any order)\r\n    defineField({\r\n      name: 'body',\r\n      title: 'Body',\r\n      type: 'array',\r\n      of: [\r\n        // Text blocks\r\n        defineArrayMember({\r\n          type: 'block',\r\n          styles: [\r\n            { title: 'Normal', value: 'normal' },\r\n            { title: 'H2', value: 'h2' },\r\n            { title: 'H3', value: 'h3' },\r\n            { title: 'Quote', value: 'blockquote' },\r\n          ],\r\n          lists: [\r\n            { title: 'Bullet', value: 'bullet' },\r\n            { title: 'Numbered', value: 'number' },\r\n          ],\r\n          marks: {\r\n            annotations: [\r\n              {\r\n                name: 'link',\r\n                type: 'object',\r\n                title: 'Link',\r\n                fields: [\r\n                  defineField({\r\n                    name: 'href',\r\n                    type: 'url',\r\n                    validation: r => r.required(),\r\n                  }),\r\n                  defineField({ name: 'newTab', type: 'boolean', initialValue: true }),\r\n                ],\r\n              },\r\n            ],\r\n          },\r\n        }),\r\n\r\n        // Image blocks with layout/align controls\r\n        defineArrayMember({\r\n          type: 'image',\r\n          options: { hotspot: true },\r\n          fields: [\r\n            defineField({ name: 'alt', type: 'string', title: 'Alt text' }),\r\n            defineField({ name: 'caption', type: 'string', title: 'Caption' }),\r\n            defineField({\r\n              name: 'layout',\r\n              type: 'string',\r\n              title: 'Layout',\r\n              options: {\r\n                list: [\r\n                  { title: 'Small', value: 's' },\r\n                  { title: 'Medium', value: 'm' },   // default (prose width)\r\n                  { title: 'Wide', value: 'l' },     // wider than prose\r\n                  { title: 'Full-bleed', value: 'full' }, // edge-to-edge\r\n                ],\r\n                layout: 'radio',\r\n              },\r\n              initialValue: 'm',\r\n            }),\r\n            defineField({\r\n              name: 'align',\r\n              type: 'string',\r\n              title: 'Align (optional)',\r\n              options: {\r\n                list: [\r\n                  { title: 'Center', value: 'center' },\r\n                  { title: 'Left (wrap text)', value: 'left' },\r\n                  { title: 'Right (wrap text)', value: 'right' },\r\n                ],\r\n                layout: 'radio',\r\n              },\r\n              initialValue: 'center',\r\n            }),\r\n            defineField({\r\n              name: 'useAsHero',\r\n              type: 'boolean',\r\n              title: 'Use as hero',\r\n              description: 'If checked, this image can be used as the page hero.',\r\n            }),\r\n          ],\r\n        }),\r\n      ],\r\n    }),\r\n\r\n    // Optional extras\r\n    defineField({\r\n      name: 'gallery',\r\n      title: 'Gallery',\r\n      type: 'array',\r\n      of: [\r\n        defineArrayMember({\r\n          type: 'image',\r\n          options: { hotspot: true },\r\n          fields: [\r\n            defineField({ name: 'alt', type: 'string', title: 'Alt text' }),\r\n            defineField({ name: 'caption', type: 'string', title: 'Caption' }),\r\n          ],\r\n        }),\r\n        defineArrayMember({ type: 'file' }),\r\n      ],\r\n    }),\r\n\r\n    defineField({ name: 'credits', type: 'text' }),\r\n    defineField({ name: 'seo', type: 'seo' }),\r\n  ],\r\n\r\n  preview: {\r\n    select: {\r\n      title: 'title',\r\n      media: 'coverMedia',\r\n      subtitle: 'category',\r\n    },\r\n    prepare({ title, media, subtitle }) {\r\n      return { title, media, subtitle }\r\n    },\r\n  },\r\n})\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 390, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Aske/Desktop/Vue/Ionic/mariam-s-final-blog/src/sanity/schemaTypes/portfolioItem.ts"],"sourcesContent":["import { defineType, defineField } from 'sanity'\r\n\r\nexport default defineType({\r\n  name: 'portfolioItem',\r\n  title: 'Portfolio Item',\r\n  type: 'document',\r\n  fields: [\r\n    defineField({ name: 'title', type: 'string', validation: r => r.required() }),\r\n    defineField({ name: 'slug', type: 'slug', options: { source: 'title' }, validation: r => r.required() }),\r\n    defineField({ name: 'date', type: 'date' }),\r\n    defineField({ name: 'heroMedia', type: 'image', options: { hotspot: true } }),\r\n    defineField({\r\n      name: 'body',\r\n      type: 'array',\r\n      of: [{ type: 'block' }, { type: 'image', options: { hotspot: true } }],\r\n    }),\r\n    defineField({ name: 'pressLinks', type: 'array', of: [{ type: 'url' }] }),\r\n    defineField({ name: 'tags', type: 'array', of: [{ type: 'string' }] }),\r\n    defineField({ name: 'seo', type: 'seo' }),\r\n  ],\r\n})\r\n"],"names":[],"mappings":";;;;AAAA;;uCAEe,IAAA,2NAAU,EAAC;IACxB,MAAM;IACN,OAAO;IACP,MAAM;IACN,QAAQ;QACN,IAAA,4NAAW,EAAC;YAAE,MAAM;YAAS,MAAM;YAAU,YAAY,CAAA,IAAK,EAAE,QAAQ;QAAG;QAC3E,IAAA,4NAAW,EAAC;YAAE,MAAM;YAAQ,MAAM;YAAQ,SAAS;gBAAE,QAAQ;YAAQ;YAAG,YAAY,CAAA,IAAK,EAAE,QAAQ;QAAG;QACtG,IAAA,4NAAW,EAAC;YAAE,MAAM;YAAQ,MAAM;QAAO;QACzC,IAAA,4NAAW,EAAC;YAAE,MAAM;YAAa,MAAM;YAAS,SAAS;gBAAE,SAAS;YAAK;QAAE;QAC3E,IAAA,4NAAW,EAAC;YACV,MAAM;YACN,MAAM;YACN,IAAI;gBAAC;oBAAE,MAAM;gBAAQ;gBAAG;oBAAE,MAAM;oBAAS,SAAS;wBAAE,SAAS;oBAAK;gBAAE;aAAE;QACxE;QACA,IAAA,4NAAW,EAAC;YAAE,MAAM;YAAc,MAAM;YAAS,IAAI;gBAAC;oBAAE,MAAM;gBAAM;aAAE;QAAC;QACvE,IAAA,4NAAW,EAAC;YAAE,MAAM;YAAQ,MAAM;YAAS,IAAI;gBAAC;oBAAE,MAAM;gBAAS;aAAE;QAAC;QACpE,IAAA,4NAAW,EAAC;YAAE,MAAM;YAAO,MAAM;QAAM;KACxC;AACH","debugId":null}},
    {"offset": {"line": 468, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Aske/Desktop/Vue/Ionic/mariam-s-final-blog/src/sanity/schemaTypes/page.ts"],"sourcesContent":["import { defineType, defineField } from 'sanity'\r\n\r\nexport default defineType({\r\n  name: 'page',\r\n  title: 'Page',\r\n  type: 'document',\r\n  fields: [\r\n    defineField({ name: 'title', type: 'string', validation: r => r.required() }),\r\n    defineField({ name: 'slug', type: 'slug', options: { source: 'title' }, validation: r => r.required() }),\r\n    defineField({\r\n      name: 'content',\r\n      type: 'array',\r\n      of: [{ type: 'block' }, { type: 'image', options: { hotspot: true } }],\r\n    }),\r\n  ],\r\n})\r\n"],"names":[],"mappings":";;;;AAAA;;uCAEe,IAAA,2NAAU,EAAC;IACxB,MAAM;IACN,OAAO;IACP,MAAM;IACN,QAAQ;QACN,IAAA,4NAAW,EAAC;YAAE,MAAM;YAAS,MAAM;YAAU,YAAY,CAAA,IAAK,EAAE,QAAQ;QAAG;QAC3E,IAAA,4NAAW,EAAC;YAAE,MAAM;YAAQ,MAAM;YAAQ,SAAS;gBAAE,QAAQ;YAAQ;YAAG,YAAY,CAAA,IAAK,EAAE,QAAQ;QAAG;QACtG,IAAA,4NAAW,EAAC;YACV,MAAM;YACN,MAAM;YACN,IAAI;gBAAC;oBAAE,MAAM;gBAAQ;gBAAG;oBAAE,MAAM;oBAAS,SAAS;wBAAE,SAAS;oBAAK;gBAAE;aAAE;QACxE;KACD;AACH","debugId":null}},
    {"offset": {"line": 513, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Aske/Desktop/Vue/Ionic/mariam-s-final-blog/src/sanity/schemaTypes/siteSettings.ts"],"sourcesContent":["import { defineType, defineField } from 'sanity'\r\n\r\nexport default defineType({\r\n  name: 'siteSettings',\r\n  title: 'Site Settings',\r\n  type: 'document',\r\n  fields: [\r\n    defineField({ name: 'siteTitle', type: 'string' }),\r\n    defineField({ name: 'description', type: 'text' }),\r\n    defineField({ name: 'socialLinks', type: 'array', of: [{ type: 'url' }] }),\r\n    defineField({ name: 'defaultOG', type: 'image' }),\r\n  ],\r\n})\r\n"],"names":[],"mappings":";;;;AAAA;;uCAEe,IAAA,2NAAU,EAAC;IACxB,MAAM;IACN,OAAO;IACP,MAAM;IACN,QAAQ;QACN,IAAA,4NAAW,EAAC;YAAE,MAAM;YAAa,MAAM;QAAS;QAChD,IAAA,4NAAW,EAAC;YAAE,MAAM;YAAe,MAAM;QAAO;QAChD,IAAA,4NAAW,EAAC;YAAE,MAAM;YAAe,MAAM;YAAS,IAAI;gBAAC;oBAAE,MAAM;gBAAM;aAAE;QAAC;QACxE,IAAA,4NAAW,EAAC;YAAE,MAAM;YAAa,MAAM;QAAQ;KAChD;AACH","debugId":null}},
    {"offset": {"line": 551, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Aske/Desktop/Vue/Ionic/mariam-s-final-blog/src/sanity/schemaTypes/seo.ts"],"sourcesContent":["import { defineType, defineField } from 'sanity'\r\n\r\nexport default defineType({\r\n  name: 'seo',\r\n  title: 'SEO',\r\n  type: 'object',\r\n  fields: [\r\n    defineField({ name: 'title', type: 'string' }),\r\n    defineField({ name: 'description', type: 'text' }),\r\n    defineField({ name: 'ogImage', type: 'image' }),\r\n  ],\r\n})\r\n"],"names":[],"mappings":";;;;AAAA;;uCAEe,IAAA,2NAAU,EAAC;IACxB,MAAM;IACN,OAAO;IACP,MAAM;IACN,QAAQ;QACN,IAAA,4NAAW,EAAC;YAAE,MAAM;YAAS,MAAM;QAAS;QAC5C,IAAA,4NAAW,EAAC;YAAE,MAAM;YAAe,MAAM;QAAO;QAChD,IAAA,4NAAW,EAAC;YAAE,MAAM;YAAW,MAAM;QAAQ;KAC9C;AACH","debugId":null}},
    {"offset": {"line": 580, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Aske/Desktop/Vue/Ionic/mariam-s-final-blog/src/sanity/schemaTypes/index.ts"],"sourcesContent":["// src/sanity/schemaTypes/index.ts\r\nimport article from './article'\r\nimport portfolioItem from './portfolioItem'\r\nimport page from './page'\r\nimport siteSettings from './siteSettings'\r\nimport seo from './seo'\r\n\r\nexport const schema = {\r\n  types: [article, portfolioItem, page, siteSettings, seo],\r\n}\r\n"],"names":[],"mappings":"AAAA,kCAAkC;;;;;AAClC;AACA;AACA;AACA;AACA;;;;;;AAEO,MAAM,SAAS;IACpB,OAAO;QAAC,6MAAO;QAAE,mNAAa;QAAE,0MAAI;QAAE,kNAAY;QAAE,yMAAG;KAAC;AAC1D","debugId":null}},
    {"offset": {"line": 608, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Aske/Desktop/Vue/Ionic/mariam-s-final-blog/src/sanity/structure.ts"],"sourcesContent":["import type {StructureResolver} from 'sanity/structure'\r\n\r\n// https://www.sanity.io/docs/structure-builder-cheat-sheet\r\nexport const structure: StructureResolver = (S) =>\r\n  S.list()\r\n    .title('Content')\r\n    .items(S.documentTypeListItems())\r\n"],"names":[],"mappings":";;;;AAGO,MAAM,YAA+B,CAAC,IAC3C,EAAE,IAAI,GACH,KAAK,CAAC,WACN,KAAK,CAAC,EAAE,qBAAqB","debugId":null}},
    {"offset": {"line": 617, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Aske/Desktop/Vue/Ionic/mariam-s-final-blog/sanity.config.ts"],"sourcesContent":["'use client'\r\n\r\n/**\r\n * This configuration is used to for the Sanity Studio that’s mounted on the `/app/studio/[[...tool]]/page.tsx` route\r\n */\r\n\r\nimport {visionTool} from '@sanity/vision'\r\nimport {defineConfig} from 'sanity'\r\nimport {structureTool} from 'sanity/structure'\r\n\r\n// Go to https://www.sanity.io/docs/api-versioning to learn how API versioning works\r\nimport {apiVersion, dataset, projectId} from './src/sanity/env'\r\nimport {schema} from './src/sanity/schemaTypes'\r\nimport {structure} from './src/sanity/structure'\r\n\r\nexport default defineConfig({\r\n  basePath: '/studio',\r\n  projectId,\r\n  dataset,\r\n  // Add and edit the content schema in the './sanity/schemaTypes' folder\r\n  schema,\r\n  plugins: [\r\n    structureTool({structure}),\r\n    // Vision is for querying with GROQ from inside the Studio\r\n    // https://www.sanity.io/docs/the-vision-plugin\r\n    visionTool({defaultApiVersion: apiVersion}),\r\n  ],\r\n})\r\n"],"names":[],"mappings":";;;;AAEA;;CAEC,GAED;AACA;AACA;AAEA,oFAAoF;AACpF;AACA;AACA;AAbA;;;;;;;uCAee,IAAA,kOAAY,EAAC;IAC1B,UAAU;IACV,WAAA,4LAAS;IACT,SAAA,0LAAO;IACP,uEAAuE;IACvE,QAAA,0MAAM;IACN,SAAS;QACP,IAAA,mOAAa,EAAC;YAAC,WAAA,kMAAS;QAAA;QACxB,0DAA0D;QAC1D,+CAA+C;QAC/C,IAAA,6OAAU,EAAC;YAAC,mBAAmB,6LAAU;QAAA;KAC1C;AACH","debugId":null}}]
}