{"version":3,"sources":["turbopack:///[project]/Desktop/Vue/Ionic/mariam-s-final-blog/node_modules/next/src/client/components/redirect-status-code.ts","turbopack:///[project]/Desktop/Vue/Ionic/mariam-s-final-blog/node_modules/next/src/client/components/redirect-error.ts","turbopack:///[project]/Desktop/Vue/Ionic/mariam-s-final-blog/node_modules/next/src/client/components/redirect.ts","turbopack:///[project]/Desktop/Vue/Ionic/mariam-s-final-blog/node_modules/next/src/client/components/http-access-fallback/http-access-fallback.ts","turbopack:///[project]/Desktop/Vue/Ionic/mariam-s-final-blog/node_modules/next/src/client/components/not-found.ts","turbopack:///[project]/Desktop/Vue/Ionic/mariam-s-final-blog/node_modules/next/src/client/components/forbidden.ts","turbopack:///[project]/Desktop/Vue/Ionic/mariam-s-final-blog/node_modules/next/src/client/components/unauthorized.ts","turbopack:///[project]/Desktop/Vue/Ionic/mariam-s-final-blog/node_modules/next/src/server/dynamic-rendering-utils.ts","turbopack:///[project]/Desktop/Vue/Ionic/mariam-s-final-blog/node_modules/next/src/server/lib/router-utils/is-postpone.ts","turbopack:///[project]/Desktop/Vue/Ionic/mariam-s-final-blog/node_modules/next/src/shared/lib/lazy-dynamic/bailout-to-csr.ts","turbopack:///[project]/Desktop/Vue/Ionic/mariam-s-final-blog/node_modules/next/src/client/components/is-next-router-error.ts","turbopack:///[project]/Desktop/Vue/Ionic/mariam-s-final-blog/node_modules/next/src/client/components/hooks-server-context.ts","turbopack:///[project]/Desktop/Vue/Ionic/mariam-s-final-blog/node_modules/next/src/client/components/static-generation-bailout.ts","turbopack:///[project]/Desktop/Vue/Ionic/mariam-s-final-blog/node_modules/next/src/lib/framework/boundary-constants.tsx","turbopack:///[project]/Desktop/Vue/Ionic/mariam-s-final-blog/node_modules/next/src/lib/scheduler.ts","turbopack:///[project]/Desktop/Vue/Ionic/mariam-s-final-blog/node_modules/next/src/shared/lib/invariant-error.ts","turbopack:///[project]/Desktop/Vue/Ionic/mariam-s-final-blog/node_modules/next/src/server/app-render/dynamic-rendering.ts","turbopack:///[project]/Desktop/Vue/Ionic/mariam-s-final-blog/node_modules/next/src/client/components/unstable-rethrow.server.ts","turbopack:///[project]/Desktop/Vue/Ionic/mariam-s-final-blog/node_modules/next/src/client/components/unstable-rethrow.ts","turbopack:///[project]/Desktop/Vue/Ionic/mariam-s-final-blog/node_modules/next/src/client/components/navigation.react-server.ts","turbopack:///[project]/Desktop/Vue/Ionic/mariam-s-final-blog/node_modules/next/dist/api/navigation.react-server.js","turbopack:///[project]/Desktop/Vue/Ionic/mariam-s-final-blog/node_modules/@portabletext/toolkit/src/asserters.ts","turbopack:///[project]/Desktop/Vue/Ionic/mariam-s-final-blog/node_modules/next/src/api/navigation.react-server.ts","turbopack:///[project]/Desktop/Vue/Ionic/mariam-s-final-blog/node_modules/@portabletext/react/src/components/list.tsx","turbopack:///[project]/Desktop/Vue/Ionic/mariam-s-final-blog/node_modules/@portabletext/react/src/components/marks.tsx","turbopack:///[project]/Desktop/Vue/Ionic/mariam-s-final-blog/node_modules/@portabletext/react/src/warnings.ts","turbopack:///[project]/Desktop/Vue/Ionic/mariam-s-final-blog/node_modules/@portabletext/react/src/components/unknown.tsx","turbopack:///[project]/Desktop/Vue/Ionic/mariam-s-final-blog/node_modules/@portabletext/toolkit/src/sortMarksByOccurences.ts","turbopack:///[project]/Desktop/Vue/Ionic/mariam-s-final-blog/node_modules/@portabletext/react/src/components/defaults.tsx","turbopack:///[project]/Desktop/Vue/Ionic/mariam-s-final-blog/node_modules/@portabletext/toolkit/src/buildMarksTree.ts","turbopack:///[project]/Desktop/Vue/Ionic/mariam-s-final-blog/node_modules/@portabletext/react/src/components/merge.ts","turbopack:///[project]/Desktop/Vue/Ionic/mariam-s-final-blog/node_modules/@portabletext/react/src/react-portable-text.tsx","turbopack:///[project]/Desktop/Vue/Ionic/mariam-s-final-blog/node_modules/@portabletext/toolkit/src/nestLists.ts","turbopack:///[project]/Desktop/Vue/Ionic/mariam-s-final-blog/node_modules/@portabletext/toolkit/src/spanToPlainText.ts","turbopack:///[project]/Desktop/Vue/Ionic/mariam-s-final-blog/node_modules/@portabletext/toolkit/src/toPlainText.ts","turbopack:///[project]/Desktop/Vue/Ionic/mariam-s-final-blog/node_modules/@portabletext/toolkit/src/types.ts"],"sourcesContent":["export enum RedirectStatusCode {\n  SeeOther = 303,\n  TemporaryRedirect = 307,\n  PermanentRedirect = 308,\n}\n","import { RedirectStatusCode } from './redirect-status-code'\n\nexport const REDIRECT_ERROR_CODE = 'NEXT_REDIRECT'\n\nexport enum RedirectType {\n  push = 'push',\n  replace = 'replace',\n}\n\nexport type RedirectError = Error & {\n  digest: `${typeof REDIRECT_ERROR_CODE};${RedirectType};${string};${RedirectStatusCode};`\n}\n\n/**\n * Checks an error to determine if it's an error generated by the\n * `redirect(url)` helper.\n *\n * @param error the error that may reference a redirect error\n * @returns true if the error is a redirect error\n */\nexport function isRedirectError(error: unknown): error is RedirectError {\n  if (\n    typeof error !== 'object' ||\n    error === null ||\n    !('digest' in error) ||\n    typeof error.digest !== 'string'\n  ) {\n    return false\n  }\n\n  const digest = error.digest.split(';')\n  const [errorCode, type] = digest\n  const destination = digest.slice(2, -2).join(';')\n  const status = digest.at(-2)\n\n  const statusCode = Number(status)\n\n  return (\n    errorCode === REDIRECT_ERROR_CODE &&\n    (type === 'replace' || type === 'push') &&\n    typeof destination === 'string' &&\n    !isNaN(statusCode) &&\n    statusCode in RedirectStatusCode\n  )\n}\n","import { RedirectStatusCode } from './redirect-status-code'\nimport {\n  RedirectType,\n  type RedirectError,\n  isRedirectError,\n  REDIRECT_ERROR_CODE,\n} from './redirect-error'\n\nconst actionAsyncStorage =\n  typeof window === 'undefined'\n    ? (\n        require('../../server/app-render/action-async-storage.external') as typeof import('../../server/app-render/action-async-storage.external')\n      ).actionAsyncStorage\n    : undefined\n\nexport function getRedirectError(\n  url: string,\n  type: RedirectType,\n  statusCode: RedirectStatusCode = RedirectStatusCode.TemporaryRedirect\n): RedirectError {\n  const error = new Error(REDIRECT_ERROR_CODE) as RedirectError\n  error.digest = `${REDIRECT_ERROR_CODE};${type};${url};${statusCode};`\n  return error\n}\n\n/**\n * This function allows you to redirect the user to another URL. It can be used in\n * [Server Components](https://nextjs.org/docs/app/building-your-application/rendering/server-components),\n * [Route Handlers](https://nextjs.org/docs/app/building-your-application/routing/route-handlers), and\n * [Server Actions](https://nextjs.org/docs/app/building-your-application/data-fetching/server-actions-and-mutations).\n *\n * - In a Server Component, this will insert a meta tag to redirect the user to the target page.\n * - In a Route Handler or Server Action, it will serve a 307/303 to the caller.\n * - In a Server Action, type defaults to 'push' and 'replace' elsewhere.\n *\n * Read more: [Next.js Docs: `redirect`](https://nextjs.org/docs/app/api-reference/functions/redirect)\n */\nexport function redirect(\n  /** The URL to redirect to */\n  url: string,\n  type?: RedirectType\n): never {\n  type ??= actionAsyncStorage?.getStore()?.isAction\n    ? RedirectType.push\n    : RedirectType.replace\n\n  throw getRedirectError(url, type, RedirectStatusCode.TemporaryRedirect)\n}\n\n/**\n * This function allows you to redirect the user to another URL. It can be used in\n * [Server Components](https://nextjs.org/docs/app/building-your-application/rendering/server-components),\n * [Route Handlers](https://nextjs.org/docs/app/building-your-application/routing/route-handlers), and\n * [Server Actions](https://nextjs.org/docs/app/building-your-application/data-fetching/server-actions-and-mutations).\n *\n * - In a Server Component, this will insert a meta tag to redirect the user to the target page.\n * - In a Route Handler or Server Action, it will serve a 308/303 to the caller.\n *\n * Read more: [Next.js Docs: `redirect`](https://nextjs.org/docs/app/api-reference/functions/redirect)\n */\nexport function permanentRedirect(\n  /** The URL to redirect to */\n  url: string,\n  type: RedirectType = RedirectType.replace\n): never {\n  throw getRedirectError(url, type, RedirectStatusCode.PermanentRedirect)\n}\n\n/**\n * Returns the encoded URL from the error if it's a RedirectError, null\n * otherwise. Note that this does not validate the URL returned.\n *\n * @param error the error that may be a redirect error\n * @return the url if the error was a redirect error\n */\nexport function getURLFromRedirectError(error: RedirectError): string\nexport function getURLFromRedirectError(error: unknown): string | null {\n  if (!isRedirectError(error)) return null\n\n  // Slices off the beginning of the digest that contains the code and the\n  // separating ';'.\n  return error.digest.split(';').slice(2, -2).join(';')\n}\n\nexport function getRedirectTypeFromError(error: RedirectError): RedirectType {\n  if (!isRedirectError(error)) {\n    throw new Error('Not a redirect error')\n  }\n\n  return error.digest.split(';', 2)[1] as RedirectType\n}\n\nexport function getRedirectStatusCodeFromError(error: RedirectError): number {\n  if (!isRedirectError(error)) {\n    throw new Error('Not a redirect error')\n  }\n\n  return Number(error.digest.split(';').at(-2))\n}\n","export const HTTPAccessErrorStatus = {\n  NOT_FOUND: 404,\n  FORBIDDEN: 403,\n  UNAUTHORIZED: 401,\n}\n\nconst ALLOWED_CODES = new Set(Object.values(HTTPAccessErrorStatus))\n\nexport const HTTP_ERROR_FALLBACK_ERROR_CODE = 'NEXT_HTTP_ERROR_FALLBACK'\n\nexport type HTTPAccessFallbackError = Error & {\n  digest: `${typeof HTTP_ERROR_FALLBACK_ERROR_CODE};${string}`\n}\n\n/**\n * Checks an error to determine if it's an error generated by\n * the HTTP navigation APIs `notFound()`, `forbidden()` or `unauthorized()`.\n *\n * @param error the error that may reference a HTTP access error\n * @returns true if the error is a HTTP access error\n */\nexport function isHTTPAccessFallbackError(\n  error: unknown\n): error is HTTPAccessFallbackError {\n  if (\n    typeof error !== 'object' ||\n    error === null ||\n    !('digest' in error) ||\n    typeof error.digest !== 'string'\n  ) {\n    return false\n  }\n  const [prefix, httpStatus] = error.digest.split(';')\n\n  return (\n    prefix === HTTP_ERROR_FALLBACK_ERROR_CODE &&\n    ALLOWED_CODES.has(Number(httpStatus))\n  )\n}\n\nexport function getAccessFallbackHTTPStatus(\n  error: HTTPAccessFallbackError\n): number {\n  const httpStatus = error.digest.split(';')[1]\n  return Number(httpStatus)\n}\n\nexport function getAccessFallbackErrorTypeByStatus(\n  status: number\n): 'not-found' | 'forbidden' | 'unauthorized' | undefined {\n  switch (status) {\n    case 401:\n      return 'unauthorized'\n    case 403:\n      return 'forbidden'\n    case 404:\n      return 'not-found'\n    default:\n      return\n  }\n}\n","import {\n  HTTP_ERROR_FALLBACK_ERROR_CODE,\n  type HTTPAccessFallbackError,\n} from './http-access-fallback/http-access-fallback'\n\n/**\n * This function allows you to render the [not-found.js file](https://nextjs.org/docs/app/api-reference/file-conventions/not-found)\n * within a route segment as well as inject a tag.\n *\n * `notFound()` can be used in\n * [Server Components](https://nextjs.org/docs/app/building-your-application/rendering/server-components),\n * [Route Handlers](https://nextjs.org/docs/app/building-your-application/routing/route-handlers), and\n * [Server Actions](https://nextjs.org/docs/app/building-your-application/data-fetching/server-actions-and-mutations).\n *\n * - In a Server Component, this will insert a `<meta name=\"robots\" content=\"noindex\" />` meta tag and set the status code to 404.\n * - In a Route Handler or Server Action, it will serve a 404 to the caller.\n *\n * Read more: [Next.js Docs: `notFound`](https://nextjs.org/docs/app/api-reference/functions/not-found)\n */\n\nconst DIGEST = `${HTTP_ERROR_FALLBACK_ERROR_CODE};404`\n\nexport function notFound(): never {\n  // eslint-disable-next-line no-throw-literal\n  const error = new Error(DIGEST) as HTTPAccessFallbackError\n  ;(error as HTTPAccessFallbackError).digest = DIGEST\n\n  throw error\n}\n","import {\n  HTTP_ERROR_FALLBACK_ERROR_CODE,\n  type HTTPAccessFallbackError,\n} from './http-access-fallback/http-access-fallback'\n\n// TODO: Add `forbidden` docs\n/**\n * @experimental\n * This function allows you to render the [forbidden.js file](https://nextjs.org/docs/app/api-reference/file-conventions/forbidden)\n * within a route segment as well as inject a tag.\n *\n * `forbidden()` can be used in\n * [Server Components](https://nextjs.org/docs/app/building-your-application/rendering/server-components),\n * [Route Handlers](https://nextjs.org/docs/app/building-your-application/routing/route-handlers), and\n * [Server Actions](https://nextjs.org/docs/app/building-your-application/data-fetching/server-actions-and-mutations).\n *\n * Read more: [Next.js Docs: `forbidden`](https://nextjs.org/docs/app/api-reference/functions/forbidden)\n */\n\nconst DIGEST = `${HTTP_ERROR_FALLBACK_ERROR_CODE};403`\n\nexport function forbidden(): never {\n  if (!process.env.__NEXT_EXPERIMENTAL_AUTH_INTERRUPTS) {\n    throw new Error(\n      `\\`forbidden()\\` is experimental and only allowed to be enabled when \\`experimental.authInterrupts\\` is enabled.`\n    )\n  }\n\n  // eslint-disable-next-line no-throw-literal\n  const error = new Error(DIGEST) as HTTPAccessFallbackError\n  ;(error as HTTPAccessFallbackError).digest = DIGEST\n  throw error\n}\n","import {\n  HTTP_ERROR_FALLBACK_ERROR_CODE,\n  type HTTPAccessFallbackError,\n} from './http-access-fallback/http-access-fallback'\n\n// TODO: Add `unauthorized` docs\n/**\n * @experimental\n * This function allows you to render the [unauthorized.js file](https://nextjs.org/docs/app/api-reference/file-conventions/unauthorized)\n * within a route segment as well as inject a tag.\n *\n * `unauthorized()` can be used in\n * [Server Components](https://nextjs.org/docs/app/building-your-application/rendering/server-components),\n * [Route Handlers](https://nextjs.org/docs/app/building-your-application/routing/route-handlers), and\n * [Server Actions](https://nextjs.org/docs/app/building-your-application/data-fetching/server-actions-and-mutations).\n *\n *\n * Read more: [Next.js Docs: `unauthorized`](https://nextjs.org/docs/app/api-reference/functions/unauthorized)\n */\n\nconst DIGEST = `${HTTP_ERROR_FALLBACK_ERROR_CODE};401`\n\nexport function unauthorized(): never {\n  if (!process.env.__NEXT_EXPERIMENTAL_AUTH_INTERRUPTS) {\n    throw new Error(\n      `\\`unauthorized()\\` is experimental and only allowed to be used when \\`experimental.authInterrupts\\` is enabled.`\n    )\n  }\n\n  // eslint-disable-next-line no-throw-literal\n  const error = new Error(DIGEST) as HTTPAccessFallbackError\n  ;(error as HTTPAccessFallbackError).digest = DIGEST\n  throw error\n}\n","export function isHangingPromiseRejectionError(\n  err: unknown\n): err is HangingPromiseRejectionError {\n  if (typeof err !== 'object' || err === null || !('digest' in err)) {\n    return false\n  }\n\n  return err.digest === HANGING_PROMISE_REJECTION\n}\n\nconst HANGING_PROMISE_REJECTION = 'HANGING_PROMISE_REJECTION'\n\nclass HangingPromiseRejectionError extends Error {\n  public readonly digest = HANGING_PROMISE_REJECTION\n\n  constructor(\n    public readonly route: string,\n    public readonly expression: string\n  ) {\n    super(\n      `During prerendering, ${expression} rejects when the prerender is complete. Typically these errors are handled by React but if you move ${expression} to a different context by using \\`setTimeout\\`, \\`after\\`, or similar functions you may observe this error and you should handle it in that context. This occurred at route \"${route}\".`\n    )\n  }\n}\n\ntype AbortListeners = Array<(err: unknown) => void>\nconst abortListenersBySignal = new WeakMap<AbortSignal, AbortListeners>()\n\n/**\n * This function constructs a promise that will never resolve. This is primarily\n * useful for cacheComponents where we use promise resolution timing to determine which\n * parts of a render can be included in a prerender.\n *\n * @internal\n */\nexport function makeHangingPromise<T>(\n  signal: AbortSignal,\n  route: string,\n  expression: string\n): Promise<T> {\n  if (signal.aborted) {\n    return Promise.reject(new HangingPromiseRejectionError(route, expression))\n  } else {\n    const hangingPromise = new Promise<T>((_, reject) => {\n      const boundRejection = reject.bind(\n        null,\n        new HangingPromiseRejectionError(route, expression)\n      )\n      let currentListeners = abortListenersBySignal.get(signal)\n      if (currentListeners) {\n        currentListeners.push(boundRejection)\n      } else {\n        const listeners = [boundRejection]\n        abortListenersBySignal.set(signal, listeners)\n        signal.addEventListener(\n          'abort',\n          () => {\n            for (let i = 0; i < listeners.length; i++) {\n              listeners[i]()\n            }\n          },\n          { once: true }\n        )\n      }\n    })\n    // We are fine if no one actually awaits this promise. We shouldn't consider this an unhandled rejection so\n    // we attach a noop catch handler here to suppress this warning. If you actually await somewhere or construct\n    // your own promise out of it you'll need to ensure you handle the error when it rejects.\n    hangingPromise.catch(ignoreReject)\n    return hangingPromise\n  }\n}\n\nfunction ignoreReject() {}\n\nexport function makeDevtoolsIOAwarePromise<T>(underlying: T): Promise<T> {\n  // in React DevTools if we resolve in a setTimeout we will observe\n  // the promise resolution as something that can suspend a boundary or root.\n  return new Promise<T>((resolve) => {\n    // Must use setTimeout to be considered IO React DevTools. setImmediate will not work.\n    setTimeout(() => {\n      resolve(underlying)\n    }, 0)\n  })\n}\n","const REACT_POSTPONE_TYPE: symbol = Symbol.for('react.postpone')\n\nexport function isPostpone(error: any): boolean {\n  return (\n    typeof error === 'object' &&\n    error !== null &&\n    error.$$typeof === REACT_POSTPONE_TYPE\n  )\n}\n","// This has to be a shared module which is shared between client component error boundary and dynamic component\nconst BAILOUT_TO_CSR = 'BAILOUT_TO_CLIENT_SIDE_RENDERING'\n\n/** An error that should be thrown when we want to bail out to client-side rendering. */\nexport class BailoutToCSRError extends Error {\n  public readonly digest = BAILOUT_TO_CSR\n\n  constructor(public readonly reason: string) {\n    super(`Bail out to client-side rendering: ${reason}`)\n  }\n}\n\n/** Checks if a passed argument is an error that is thrown if we want to bail out to client-side rendering. */\nexport function isBailoutToCSRError(err: unknown): err is BailoutToCSRError {\n  if (typeof err !== 'object' || err === null || !('digest' in err)) {\n    return false\n  }\n\n  return err.digest === BAILOUT_TO_CSR\n}\n","import {\n  isHTTPAccessFallbackError,\n  type HTTPAccessFallbackError,\n} from './http-access-fallback/http-access-fallback'\nimport { isRedirectError, type RedirectError } from './redirect-error'\n\n/**\n * Returns true if the error is a navigation signal error. These errors are\n * thrown by user code to perform navigation operations and interrupt the React\n * render.\n */\nexport function isNextRouterError(\n  error: unknown\n): error is RedirectError | HTTPAccessFallbackError {\n  return isRedirectError(error) || isHTTPAccessFallbackError(error)\n}\n","const DYNAMIC_ERROR_CODE = 'DYNAMIC_SERVER_USAGE'\n\nexport class DynamicServerError extends Error {\n  digest: typeof DYNAMIC_ERROR_CODE = DYNAMIC_ERROR_CODE\n\n  constructor(public readonly description: string) {\n    super(`Dynamic server usage: ${description}`)\n  }\n}\n\nexport function isDynamicServerError(err: unknown): err is DynamicServerError {\n  if (\n    typeof err !== 'object' ||\n    err === null ||\n    !('digest' in err) ||\n    typeof err.digest !== 'string'\n  ) {\n    return false\n  }\n\n  return err.digest === DYNAMIC_ERROR_CODE\n}\n","const NEXT_STATIC_GEN_BAILOUT = 'NEXT_STATIC_GEN_BAILOUT'\n\nexport class StaticGenBailoutError extends Error {\n  public readonly code = NEXT_STATIC_GEN_BAILOUT\n}\n\nexport function isStaticGenBailoutError(\n  error: unknown\n): error is StaticGenBailoutError {\n  if (typeof error !== 'object' || error === null || !('code' in error)) {\n    return false\n  }\n\n  return error.code === NEXT_STATIC_GEN_BAILOUT\n}\n","export const METADATA_BOUNDARY_NAME = '__next_metadata_boundary__'\nexport const VIEWPORT_BOUNDARY_NAME = '__next_viewport_boundary__'\nexport const OUTLET_BOUNDARY_NAME = '__next_outlet_boundary__'\nexport const ROOT_LAYOUT_BOUNDARY_NAME = '__next_root_layout_boundary__'\n","export type ScheduledFn<T = void> = () => T | PromiseLike<T>\nexport type SchedulerFn<T = void> = (cb: ScheduledFn<T>) => void\n\n/**\n * Schedules a function to be called on the next tick after the other promises\n * have been resolved.\n *\n * @param cb the function to schedule\n */\nexport const scheduleOnNextTick = (cb: ScheduledFn<void>) => {\n  // We use Promise.resolve().then() here so that the operation is scheduled at\n  // the end of the promise job queue, we then add it to the next process tick\n  // to ensure it's evaluated afterwards.\n  //\n  // This was inspired by the implementation of the DataLoader interface: https://github.com/graphql/dataloader/blob/d336bd15282664e0be4b4a657cb796f09bafbc6b/src/index.js#L213-L255\n  //\n  Promise.resolve().then(() => {\n    if (process.env.NEXT_RUNTIME === 'edge') {\n      setTimeout(cb, 0)\n    } else {\n      process.nextTick(cb)\n    }\n  })\n}\n\n/**\n * Schedules a function to be called using `setImmediate` or `setTimeout` if\n * `setImmediate` is not available (like in the Edge runtime).\n *\n * @param cb the function to schedule\n */\nexport const scheduleImmediate = (cb: ScheduledFn<void>): void => {\n  if (process.env.NEXT_RUNTIME === 'edge') {\n    setTimeout(cb, 0)\n  } else {\n    setImmediate(cb)\n  }\n}\n\n/**\n * returns a promise than resolves in a future task. There is no guarantee that the task it resolves in\n * will be the next task but if you await it you can at least be sure that the current task is over and\n * most usefully that the entire microtask queue of the current task has been emptied.\n */\nexport function atLeastOneTask() {\n  return new Promise<void>((resolve) => scheduleImmediate(resolve))\n}\n\n/**\n * This utility function is extracted to make it easier to find places where we are doing\n * specific timing tricks to try to schedule work after React has rendered. This is especially\n * important at the moment because Next.js uses the edge builds of React which use setTimeout to\n * schedule work when you might expect that something like setImmediate would do the trick.\n *\n * Long term we should switch to the node versions of React rendering when possible and then\n * update this to use setImmediate rather than setTimeout\n */\nexport function waitAtLeastOneReactRenderTask(): Promise<void> {\n  if (process.env.NEXT_RUNTIME === 'edge') {\n    return new Promise((r) => setTimeout(r, 0))\n  } else {\n    return new Promise((r) => setImmediate(r))\n  }\n}\n","export class InvariantError extends Error {\n  constructor(message: string, options?: ErrorOptions) {\n    super(\n      `Invariant: ${message.endsWith('.') ? message : message + '.'} This is a bug in Next.js.`,\n      options\n    )\n    this.name = 'InvariantError'\n  }\n}\n","/**\n * The functions provided by this module are used to communicate certain properties\n * about the currently running code so that Next.js can make decisions on how to handle\n * the current execution in different rendering modes such as pre-rendering, resuming, and SSR.\n *\n * Today Next.js treats all code as potentially static. Certain APIs may only make sense when dynamically rendering.\n * Traditionally this meant deopting the entire render to dynamic however with PPR we can now deopt parts\n * of a React tree as dynamic while still keeping other parts static. There are really two different kinds of\n * Dynamic indications.\n *\n * The first is simply an intention to be dynamic. unstable_noStore is an example of this where\n * the currently executing code simply declares that the current scope is dynamic but if you use it\n * inside unstable_cache it can still be cached. This type of indication can be removed if we ever\n * make the default dynamic to begin with because the only way you would ever be static is inside\n * a cache scope which this indication does not affect.\n *\n * The second is an indication that a dynamic data source was read. This is a stronger form of dynamic\n * because it means that it is inappropriate to cache this at all. using a dynamic data source inside\n * unstable_cache should error. If you want to use some dynamic data inside unstable_cache you should\n * read that data outside the cache and pass it in as an argument to the cached function.\n */\n\nimport type { WorkStore } from '../app-render/work-async-storage.external'\nimport type {\n  WorkUnitStore,\n  RequestStore,\n  PrerenderStoreLegacy,\n  PrerenderStoreModern,\n  PrerenderStoreModernRuntime,\n} from '../app-render/work-unit-async-storage.external'\n\n// Once postpone is in stable we should switch to importing the postpone export directly\nimport React from 'react'\n\nimport { DynamicServerError } from '../../client/components/hooks-server-context'\nimport { StaticGenBailoutError } from '../../client/components/static-generation-bailout'\nimport {\n  getRuntimeStagePromise,\n  workUnitAsyncStorage,\n} from './work-unit-async-storage.external'\nimport { workAsyncStorage } from '../app-render/work-async-storage.external'\nimport { makeHangingPromise } from '../dynamic-rendering-utils'\nimport {\n  METADATA_BOUNDARY_NAME,\n  VIEWPORT_BOUNDARY_NAME,\n  OUTLET_BOUNDARY_NAME,\n  ROOT_LAYOUT_BOUNDARY_NAME,\n} from '../../lib/framework/boundary-constants'\nimport { scheduleOnNextTick } from '../../lib/scheduler'\nimport { BailoutToCSRError } from '../../shared/lib/lazy-dynamic/bailout-to-csr'\nimport { InvariantError } from '../../shared/lib/invariant-error'\n\nconst hasPostpone = typeof React.unstable_postpone === 'function'\n\nexport type DynamicAccess = {\n  /**\n   * If debugging, this will contain the stack trace of where the dynamic access\n   * occurred. This is used to provide more information to the user about why\n   * their page is being rendered dynamically.\n   */\n  stack?: string\n\n  /**\n   * The expression that was accessed dynamically.\n   */\n  expression: string\n}\n\n// Stores dynamic reasons used during an RSC render.\nexport type DynamicTrackingState = {\n  /**\n   * When true, stack information will also be tracked during dynamic access.\n   */\n  readonly isDebugDynamicAccesses: boolean | undefined\n\n  /**\n   * The dynamic accesses that occurred during the render.\n   */\n  readonly dynamicAccesses: Array<DynamicAccess>\n\n  syncDynamicErrorWithStack: null | Error\n}\n\n// Stores dynamic reasons used during an SSR render.\nexport type DynamicValidationState = {\n  hasSuspenseAboveBody: boolean\n  hasDynamicMetadata: boolean\n  hasDynamicViewport: boolean\n  hasAllowedDynamic: boolean\n  dynamicErrors: Array<Error>\n}\n\nexport function createDynamicTrackingState(\n  isDebugDynamicAccesses: boolean | undefined\n): DynamicTrackingState {\n  return {\n    isDebugDynamicAccesses,\n    dynamicAccesses: [],\n    syncDynamicErrorWithStack: null,\n  }\n}\n\nexport function createDynamicValidationState(): DynamicValidationState {\n  return {\n    hasSuspenseAboveBody: false,\n    hasDynamicMetadata: false,\n    hasDynamicViewport: false,\n    hasAllowedDynamic: false,\n    dynamicErrors: [],\n  }\n}\n\nexport function getFirstDynamicReason(\n  trackingState: DynamicTrackingState\n): undefined | string {\n  return trackingState.dynamicAccesses[0]?.expression\n}\n\n/**\n * This function communicates that the current scope should be treated as dynamic.\n *\n * In most cases this function is a no-op but if called during\n * a PPR prerender it will postpone the current sub-tree and calling\n * it during a normal prerender will cause the entire prerender to abort\n */\nexport function markCurrentScopeAsDynamic(\n  store: WorkStore,\n  workUnitStore: undefined | Exclude<WorkUnitStore, PrerenderStoreModern>,\n  expression: string\n): void {\n  if (workUnitStore) {\n    switch (workUnitStore.type) {\n      case 'cache':\n      case 'unstable-cache':\n        // Inside cache scopes, marking a scope as dynamic has no effect,\n        // because the outer cache scope creates a cache boundary. This is\n        // subtly different from reading a dynamic data source, which is\n        // forbidden inside a cache scope.\n        return\n      case 'private-cache':\n        // A private cache scope is already dynamic by definition.\n        return\n      case 'prerender-legacy':\n      case 'prerender-ppr':\n      case 'request':\n        break\n      default:\n        workUnitStore satisfies never\n    }\n  }\n\n  // If we're forcing dynamic rendering or we're forcing static rendering, we\n  // don't need to do anything here because the entire page is already dynamic\n  // or it's static and it should not throw or postpone here.\n  if (store.forceDynamic || store.forceStatic) return\n\n  if (store.dynamicShouldError) {\n    throw new StaticGenBailoutError(\n      `Route ${store.route} with \\`dynamic = \"error\"\\` couldn't be rendered statically because it used \\`${expression}\\`. See more info here: https://nextjs.org/docs/app/building-your-application/rendering/static-and-dynamic#dynamic-rendering`\n    )\n  }\n\n  if (workUnitStore) {\n    switch (workUnitStore.type) {\n      case 'prerender-ppr':\n        return postponeWithTracking(\n          store.route,\n          expression,\n          workUnitStore.dynamicTracking\n        )\n      case 'prerender-legacy':\n        workUnitStore.revalidate = 0\n\n        // We aren't prerendering, but we are generating a static page. We need\n        // to bail out of static generation.\n        const err = new DynamicServerError(\n          `Route ${store.route} couldn't be rendered statically because it used ${expression}. See more info here: https://nextjs.org/docs/messages/dynamic-server-error`\n        )\n        store.dynamicUsageDescription = expression\n        store.dynamicUsageStack = err.stack\n\n        throw err\n      case 'request':\n        if (process.env.NODE_ENV !== 'production') {\n          workUnitStore.usedDynamic = true\n        }\n        break\n      default:\n        workUnitStore satisfies never\n    }\n  }\n}\n\n/**\n * This function is meant to be used when prerendering without cacheComponents or PPR.\n * When called during a build it will cause Next.js to consider the route as dynamic.\n *\n * @internal\n */\nexport function throwToInterruptStaticGeneration(\n  expression: string,\n  store: WorkStore,\n  prerenderStore: PrerenderStoreLegacy\n): never {\n  // We aren't prerendering but we are generating a static page. We need to bail out of static generation\n  const err = new DynamicServerError(\n    `Route ${store.route} couldn't be rendered statically because it used \\`${expression}\\`. See more info here: https://nextjs.org/docs/messages/dynamic-server-error`\n  )\n\n  prerenderStore.revalidate = 0\n\n  store.dynamicUsageDescription = expression\n  store.dynamicUsageStack = err.stack\n\n  throw err\n}\n\n/**\n * This function should be used to track whether something dynamic happened even when\n * we are in a dynamic render. This is useful for Dev where all renders are dynamic but\n * we still track whether dynamic APIs were accessed for helpful messaging\n *\n * @internal\n */\nexport function trackDynamicDataInDynamicRender(workUnitStore: WorkUnitStore) {\n  switch (workUnitStore.type) {\n    case 'cache':\n    case 'unstable-cache':\n      // Inside cache scopes, marking a scope as dynamic has no effect,\n      // because the outer cache scope creates a cache boundary. This is\n      // subtly different from reading a dynamic data source, which is\n      // forbidden inside a cache scope.\n      return\n    case 'private-cache':\n      // A private cache scope is already dynamic by definition.\n      return\n    case 'prerender':\n    case 'prerender-runtime':\n    case 'prerender-legacy':\n    case 'prerender-ppr':\n    case 'prerender-client':\n      break\n    case 'request':\n      if (process.env.NODE_ENV !== 'production') {\n        workUnitStore.usedDynamic = true\n      }\n      break\n    default:\n      workUnitStore satisfies never\n  }\n}\n\nfunction abortOnSynchronousDynamicDataAccess(\n  route: string,\n  expression: string,\n  prerenderStore: PrerenderStoreModern\n): void {\n  const reason = `Route ${route} needs to bail out of prerendering at this point because it used ${expression}.`\n\n  const error = createPrerenderInterruptedError(reason)\n\n  prerenderStore.controller.abort(error)\n\n  const dynamicTracking = prerenderStore.dynamicTracking\n  if (dynamicTracking) {\n    dynamicTracking.dynamicAccesses.push({\n      // When we aren't debugging, we don't need to create another error for the\n      // stack trace.\n      stack: dynamicTracking.isDebugDynamicAccesses\n        ? new Error().stack\n        : undefined,\n      expression,\n    })\n  }\n}\n\nexport function abortOnSynchronousPlatformIOAccess(\n  route: string,\n  expression: string,\n  errorWithStack: Error,\n  prerenderStore: PrerenderStoreModern\n): void {\n  const dynamicTracking = prerenderStore.dynamicTracking\n  abortOnSynchronousDynamicDataAccess(route, expression, prerenderStore)\n  // It is important that we set this tracking value after aborting. Aborts are executed\n  // synchronously except for the case where you abort during render itself. By setting this\n  // value late we can use it to determine if any of the aborted tasks are the task that\n  // called the sync IO expression in the first place.\n  if (dynamicTracking) {\n    if (dynamicTracking.syncDynamicErrorWithStack === null) {\n      dynamicTracking.syncDynamicErrorWithStack = errorWithStack\n    }\n  }\n}\n\nexport function trackSynchronousPlatformIOAccessInDev(\n  requestStore: RequestStore\n): void {\n  // We don't actually have a controller to abort but we do the semantic equivalent by\n  // advancing the request store out of prerender mode\n  requestStore.prerenderPhase = false\n}\n\n/**\n * use this function when prerendering with cacheComponents. If we are doing a\n * prospective prerender we don't actually abort because we want to discover\n * all caches for the shell. If this is the actual prerender we do abort.\n *\n * This function accepts a prerenderStore but the caller should ensure we're\n * actually running in cacheComponents mode.\n *\n * @internal\n */\nexport function abortAndThrowOnSynchronousRequestDataAccess(\n  route: string,\n  expression: string,\n  errorWithStack: Error,\n  prerenderStore: PrerenderStoreModern\n): never {\n  const prerenderSignal = prerenderStore.controller.signal\n  if (prerenderSignal.aborted === false) {\n    // TODO it would be better to move this aborted check into the callsite so we can avoid making\n    // the error object when it isn't relevant to the aborting of the prerender however\n    // since we need the throw semantics regardless of whether we abort it is easier to land\n    // this way. See how this was handled with `abortOnSynchronousPlatformIOAccess` for a closer\n    // to ideal implementation\n    abortOnSynchronousDynamicDataAccess(route, expression, prerenderStore)\n    // It is important that we set this tracking value after aborting. Aborts are executed\n    // synchronously except for the case where you abort during render itself. By setting this\n    // value late we can use it to determine if any of the aborted tasks are the task that\n    // called the sync IO expression in the first place.\n    const dynamicTracking = prerenderStore.dynamicTracking\n    if (dynamicTracking) {\n      if (dynamicTracking.syncDynamicErrorWithStack === null) {\n        dynamicTracking.syncDynamicErrorWithStack = errorWithStack\n      }\n    }\n  }\n  throw createPrerenderInterruptedError(\n    `Route ${route} needs to bail out of prerendering at this point because it used ${expression}.`\n  )\n}\n\n/**\n * Use this function when dynamically prerendering with dynamicIO.\n * We don't want to error, because it's better to return something\n * (and we've already aborted the render at the point where the sync dynamic error occured),\n * but we should log an error server-side.\n * @internal\n */\nexport function warnOnSyncDynamicError(dynamicTracking: DynamicTrackingState) {\n  if (dynamicTracking.syncDynamicErrorWithStack) {\n    // the server did something sync dynamic, likely\n    // leading to an early termination of the prerender.\n    console.error(dynamicTracking.syncDynamicErrorWithStack)\n  }\n}\n\n// For now these implementations are the same so we just reexport\nexport const trackSynchronousRequestDataAccessInDev =\n  trackSynchronousPlatformIOAccessInDev\n\n/**\n * This component will call `React.postpone` that throws the postponed error.\n */\ntype PostponeProps = {\n  reason: string\n  route: string\n}\nexport function Postpone({ reason, route }: PostponeProps): never {\n  const prerenderStore = workUnitAsyncStorage.getStore()\n  const dynamicTracking =\n    prerenderStore && prerenderStore.type === 'prerender-ppr'\n      ? prerenderStore.dynamicTracking\n      : null\n  postponeWithTracking(route, reason, dynamicTracking)\n}\n\nexport function postponeWithTracking(\n  route: string,\n  expression: string,\n  dynamicTracking: null | DynamicTrackingState\n): never {\n  assertPostpone()\n  if (dynamicTracking) {\n    dynamicTracking.dynamicAccesses.push({\n      // When we aren't debugging, we don't need to create another error for the\n      // stack trace.\n      stack: dynamicTracking.isDebugDynamicAccesses\n        ? new Error().stack\n        : undefined,\n      expression,\n    })\n  }\n\n  React.unstable_postpone(createPostponeReason(route, expression))\n}\n\nfunction createPostponeReason(route: string, expression: string) {\n  return (\n    `Route ${route} needs to bail out of prerendering at this point because it used ${expression}. ` +\n    `React throws this special object to indicate where. It should not be caught by ` +\n    `your own try/catch. Learn more: https://nextjs.org/docs/messages/ppr-caught-error`\n  )\n}\n\nexport function isDynamicPostpone(err: unknown) {\n  if (\n    typeof err === 'object' &&\n    err !== null &&\n    typeof (err as any).message === 'string'\n  ) {\n    return isDynamicPostponeReason((err as any).message)\n  }\n  return false\n}\n\nfunction isDynamicPostponeReason(reason: string) {\n  return (\n    reason.includes(\n      'needs to bail out of prerendering at this point because it used'\n    ) &&\n    reason.includes(\n      'Learn more: https://nextjs.org/docs/messages/ppr-caught-error'\n    )\n  )\n}\n\nif (isDynamicPostponeReason(createPostponeReason('%%%', '^^^')) === false) {\n  throw new Error(\n    'Invariant: isDynamicPostpone misidentified a postpone reason. This is a bug in Next.js'\n  )\n}\n\nconst NEXT_PRERENDER_INTERRUPTED = 'NEXT_PRERENDER_INTERRUPTED'\n\nfunction createPrerenderInterruptedError(message: string): Error {\n  const error = new Error(message)\n  ;(error as any).digest = NEXT_PRERENDER_INTERRUPTED\n  return error\n}\n\ntype DigestError = Error & {\n  digest: string\n}\n\nexport function isPrerenderInterruptedError(\n  error: unknown\n): error is DigestError {\n  return (\n    typeof error === 'object' &&\n    error !== null &&\n    (error as any).digest === NEXT_PRERENDER_INTERRUPTED &&\n    'name' in error &&\n    'message' in error &&\n    error instanceof Error\n  )\n}\n\nexport function accessedDynamicData(\n  dynamicAccesses: Array<DynamicAccess>\n): boolean {\n  return dynamicAccesses.length > 0\n}\n\nexport function consumeDynamicAccess(\n  serverDynamic: DynamicTrackingState,\n  clientDynamic: DynamicTrackingState\n): DynamicTrackingState['dynamicAccesses'] {\n  // We mutate because we only call this once we are no longer writing\n  // to the dynamicTrackingState and it's more efficient than creating a new\n  // array.\n  serverDynamic.dynamicAccesses.push(...clientDynamic.dynamicAccesses)\n  return serverDynamic.dynamicAccesses\n}\n\nexport function formatDynamicAPIAccesses(\n  dynamicAccesses: Array<DynamicAccess>\n): string[] {\n  return dynamicAccesses\n    .filter(\n      (access): access is Required<DynamicAccess> =>\n        typeof access.stack === 'string' && access.stack.length > 0\n    )\n    .map(({ expression, stack }) => {\n      stack = stack\n        .split('\\n')\n        // Remove the \"Error: \" prefix from the first line of the stack trace as\n        // well as the first 4 lines of the stack trace which is the distance\n        // from the user code and the `new Error().stack` call.\n        .slice(4)\n        .filter((line) => {\n          // Exclude Next.js internals from the stack trace.\n          if (line.includes('node_modules/next/')) {\n            return false\n          }\n\n          // Exclude anonymous functions from the stack trace.\n          if (line.includes(' (<anonymous>)')) {\n            return false\n          }\n\n          // Exclude Node.js internals from the stack trace.\n          if (line.includes(' (node:')) {\n            return false\n          }\n\n          return true\n        })\n        .join('\\n')\n      return `Dynamic API Usage Debug - ${expression}:\\n${stack}`\n    })\n}\n\nfunction assertPostpone() {\n  if (!hasPostpone) {\n    throw new Error(\n      `Invariant: React.unstable_postpone is not defined. This suggests the wrong version of React was loaded. This is a bug in Next.js`\n    )\n  }\n}\n\n/**\n * This is a bit of a hack to allow us to abort a render using a Postpone instance instead of an Error which changes React's\n * abort semantics slightly.\n */\nexport function createRenderInBrowserAbortSignal(): AbortSignal {\n  const controller = new AbortController()\n  controller.abort(new BailoutToCSRError('Render in Browser'))\n  return controller.signal\n}\n\n/**\n * In a prerender, we may end up with hanging Promises as inputs due them\n * stalling on connection() or because they're loading dynamic data. In that\n * case we need to abort the encoding of arguments since they'll never complete.\n */\nexport function createHangingInputAbortSignal(\n  workUnitStore: WorkUnitStore\n): AbortSignal | undefined {\n  switch (workUnitStore.type) {\n    case 'prerender':\n    case 'prerender-runtime':\n      const controller = new AbortController()\n\n      if (workUnitStore.cacheSignal) {\n        // If we have a cacheSignal it means we're in a prospective render. If\n        // the input we're waiting on is coming from another cache, we do want\n        // to wait for it so that we can resolve this cache entry too.\n        workUnitStore.cacheSignal.inputReady().then(() => {\n          controller.abort()\n        })\n      } else {\n        // Otherwise we're in the final render and we should already have all\n        // our caches filled.\n        // If the prerender uses stages, we have wait until the runtime stage,\n        // at which point all runtime inputs will be resolved.\n        // (otherwise, a runtime prerender might consider `cookies()` hanging\n        //  even though they'd resolve in the next task.)\n        //\n        // We might still be waiting on some microtasks so we\n        // wait one tick before giving up. When we give up, we still want to\n        // render the content of this cache as deeply as we can so that we can\n        // suspend as deeply as possible in the tree or not at all if we don't\n        // end up waiting for the input.\n        const runtimeStagePromise = getRuntimeStagePromise(workUnitStore)\n        if (runtimeStagePromise) {\n          runtimeStagePromise.then(() =>\n            scheduleOnNextTick(() => controller.abort())\n          )\n        } else {\n          scheduleOnNextTick(() => controller.abort())\n        }\n      }\n\n      return controller.signal\n    case 'prerender-client':\n    case 'prerender-ppr':\n    case 'prerender-legacy':\n    case 'request':\n    case 'cache':\n    case 'private-cache':\n    case 'unstable-cache':\n      return undefined\n    default:\n      workUnitStore satisfies never\n  }\n}\n\nexport function annotateDynamicAccess(\n  expression: string,\n  prerenderStore: PrerenderStoreModern\n) {\n  const dynamicTracking = prerenderStore.dynamicTracking\n  if (dynamicTracking) {\n    dynamicTracking.dynamicAccesses.push({\n      stack: dynamicTracking.isDebugDynamicAccesses\n        ? new Error().stack\n        : undefined,\n      expression,\n    })\n  }\n}\n\nexport function useDynamicRouteParams(expression: string) {\n  const workStore = workAsyncStorage.getStore()\n  const workUnitStore = workUnitAsyncStorage.getStore()\n  if (workStore && workUnitStore) {\n    switch (workUnitStore.type) {\n      case 'prerender-client':\n      case 'prerender': {\n        const fallbackParams = workUnitStore.fallbackRouteParams\n        if (fallbackParams && fallbackParams.size > 0) {\n          // We are in a prerender with cacheComponents semantics. We are going to\n          // hang here and never resolve. This will cause the currently\n          // rendering component to effectively be a dynamic hole.\n          React.use(\n            makeHangingPromise(\n              workUnitStore.renderSignal,\n              workStore.route,\n              expression\n            )\n          )\n        }\n        break\n      }\n      case 'prerender-ppr': {\n        const fallbackParams = workUnitStore.fallbackRouteParams\n        if (fallbackParams && fallbackParams.size > 0) {\n          return postponeWithTracking(\n            workStore.route,\n            expression,\n            workUnitStore.dynamicTracking\n          )\n        }\n        break\n      }\n      case 'prerender-runtime':\n        throw new InvariantError(\n          `\\`${expression}\\` was called during a runtime prerender. Next.js should be preventing ${expression} from being included in server components statically, but did not in this case.`\n        )\n      case 'cache':\n      case 'private-cache':\n        throw new InvariantError(\n          `\\`${expression}\\` was called inside a cache scope. Next.js should be preventing ${expression} from being included in server components statically, but did not in this case.`\n        )\n      case 'prerender-legacy':\n      case 'request':\n      case 'unstable-cache':\n        break\n      default:\n        workUnitStore satisfies never\n    }\n  }\n}\n\nconst hasSuspenseRegex = /\\n\\s+at Suspense \\(<anonymous>\\)/\n\n// Common implicit body tags that React will treat as body when placed directly in html\nconst bodyAndImplicitTags =\n  'body|div|main|section|article|aside|header|footer|nav|form|p|span|h1|h2|h3|h4|h5|h6'\n\n// Detects when RootLayoutBoundary (our framework marker component) appears\n// after Suspense in the component stack, indicating the root layout is wrapped\n// within a Suspense boundary. Ensures no body/html/implicit-body components are in between.\n//\n// Example matches:\n//   at Suspense (<anonymous>)\n//   at __next_root_layout_boundary__ (<anonymous>)\n//\n// Or with other components in between (but not body/html/implicit-body):\n//   at Suspense (<anonymous>)\n//   at SomeComponent (<anonymous>)\n//   at __next_root_layout_boundary__ (<anonymous>)\nconst hasSuspenseBeforeRootLayoutWithoutBodyOrImplicitBodyRegex = new RegExp(\n  `\\\\n\\\\s+at Suspense \\\\(<anonymous>\\\\)(?:(?!\\\\n\\\\s+at (?:${bodyAndImplicitTags}) \\\\(<anonymous>\\\\))[\\\\s\\\\S])*?\\\\n\\\\s+at ${ROOT_LAYOUT_BOUNDARY_NAME} \\\\([^\\\\n]*\\\\)`\n)\n\nconst hasMetadataRegex = new RegExp(\n  `\\\\n\\\\s+at ${METADATA_BOUNDARY_NAME}[\\\\n\\\\s]`\n)\nconst hasViewportRegex = new RegExp(\n  `\\\\n\\\\s+at ${VIEWPORT_BOUNDARY_NAME}[\\\\n\\\\s]`\n)\nconst hasOutletRegex = new RegExp(`\\\\n\\\\s+at ${OUTLET_BOUNDARY_NAME}[\\\\n\\\\s]`)\n\nexport function trackAllowedDynamicAccess(\n  workStore: WorkStore,\n  componentStack: string,\n  dynamicValidation: DynamicValidationState,\n  clientDynamic: DynamicTrackingState\n) {\n  if (hasOutletRegex.test(componentStack)) {\n    // We don't need to track that this is dynamic. It is only so when something else is also dynamic.\n    return\n  } else if (hasMetadataRegex.test(componentStack)) {\n    dynamicValidation.hasDynamicMetadata = true\n    return\n  } else if (hasViewportRegex.test(componentStack)) {\n    dynamicValidation.hasDynamicViewport = true\n    return\n  } else if (\n    hasSuspenseBeforeRootLayoutWithoutBodyOrImplicitBodyRegex.test(\n      componentStack\n    )\n  ) {\n    // For Suspense within body, the prelude wouldn't be empty so it wouldn't violate the empty static shells rule.\n    // But if you have Suspense above body, the prelude is empty but we allow that because having Suspense\n    // is an explicit signal from the user that they acknowledge the empty shell and want dynamic rendering.\n    dynamicValidation.hasAllowedDynamic = true\n    dynamicValidation.hasSuspenseAboveBody = true\n    return\n  } else if (hasSuspenseRegex.test(componentStack)) {\n    // this error had a Suspense boundary above it so we don't need to report it as a source\n    // of disallowed\n    dynamicValidation.hasAllowedDynamic = true\n    return\n  } else if (clientDynamic.syncDynamicErrorWithStack) {\n    // This task was the task that called the sync error.\n    dynamicValidation.dynamicErrors.push(\n      clientDynamic.syncDynamicErrorWithStack\n    )\n    return\n  } else {\n    const message = `Route \"${workStore.route}\": A component accessed data, headers, params, searchParams, or a short-lived cache without a Suspense boundary nor a \"use cache\" above it. See more info: https://nextjs.org/docs/messages/next-prerender-missing-suspense`\n    const error = createErrorWithComponentOrOwnerStack(message, componentStack)\n    dynamicValidation.dynamicErrors.push(error)\n    return\n  }\n}\n\n/**\n * In dev mode, we prefer using the owner stack, otherwise the provided\n * component stack is used.\n */\nfunction createErrorWithComponentOrOwnerStack(\n  message: string,\n  componentStack: string\n) {\n  const ownerStack =\n    process.env.NODE_ENV !== 'production' && React.captureOwnerStack\n      ? React.captureOwnerStack()\n      : null\n\n  const error = new Error(message)\n  error.stack = error.name + ': ' + message + (ownerStack ?? componentStack)\n  return error\n}\n\nexport enum PreludeState {\n  Full = 0,\n  Empty = 1,\n  Errored = 2,\n}\n\nexport function logDisallowedDynamicError(\n  workStore: WorkStore,\n  error: Error\n): void {\n  console.error(error)\n\n  if (!workStore.dev) {\n    if (workStore.hasReadableErrorStacks) {\n      console.error(\n        `To get a more detailed stack trace and pinpoint the issue, start the app in development mode by running \\`next dev\\`, then open \"${workStore.route}\" in your browser to investigate the error.`\n      )\n    } else {\n      console.error(`To get a more detailed stack trace and pinpoint the issue, try one of the following:\n  - Start the app in development mode by running \\`next dev\\`, then open \"${workStore.route}\" in your browser to investigate the error.\n  - Rerun the production build with \\`next build --debug-prerender\\` to generate better stack traces.`)\n    }\n  }\n}\n\nexport function throwIfDisallowedDynamic(\n  workStore: WorkStore,\n  prelude: PreludeState,\n  dynamicValidation: DynamicValidationState,\n  serverDynamic: DynamicTrackingState\n): void {\n  if (prelude !== PreludeState.Full) {\n    if (dynamicValidation.hasSuspenseAboveBody) {\n      // This route has opted into allowing fully dynamic rendering\n      // by including a Suspense boundary above the body. In this case\n      // a lack of a shell is not considered disallowed so we simply return\n      return\n    }\n\n    if (serverDynamic.syncDynamicErrorWithStack) {\n      // There is no shell and the server did something sync dynamic likely\n      // leading to an early termination of the prerender before the shell\n      // could be completed. We terminate the build/validating render.\n      logDisallowedDynamicError(\n        workStore,\n        serverDynamic.syncDynamicErrorWithStack\n      )\n      throw new StaticGenBailoutError()\n    }\n\n    // We didn't have any sync bailouts but there may be user code which\n    // blocked the root. We would have captured these during the prerender\n    // and can log them here and then terminate the build/validating render\n    const dynamicErrors = dynamicValidation.dynamicErrors\n    if (dynamicErrors.length > 0) {\n      for (let i = 0; i < dynamicErrors.length; i++) {\n        logDisallowedDynamicError(workStore, dynamicErrors[i])\n      }\n\n      throw new StaticGenBailoutError()\n    }\n\n    // If we got this far then the only other thing that could be blocking\n    // the root is dynamic Viewport. If this is dynamic then\n    // you need to opt into that by adding a Suspense boundary above the body\n    // to indicate your are ok with fully dynamic rendering.\n    if (dynamicValidation.hasDynamicViewport) {\n      console.error(\n        `Route \"${workStore.route}\" has a \\`generateViewport\\` that depends on Request data (\\`cookies()\\`, etc...) or uncached external data (\\`fetch(...)\\`, etc...) without explicitly allowing fully dynamic rendering. See more info here: https://nextjs.org/docs/messages/next-prerender-dynamic-viewport`\n      )\n      throw new StaticGenBailoutError()\n    }\n\n    if (prelude === PreludeState.Empty) {\n      // If we ever get this far then we messed up the tracking of invalid dynamic.\n      // We still adhere to the constraint that you must produce a shell but invite the\n      // user to report this as a bug in Next.js.\n      console.error(\n        `Route \"${workStore.route}\" did not produce a static shell and Next.js was unable to determine a reason. This is a bug in Next.js.`\n      )\n      throw new StaticGenBailoutError()\n    }\n  } else {\n    if (\n      dynamicValidation.hasAllowedDynamic === false &&\n      dynamicValidation.hasDynamicMetadata\n    ) {\n      console.error(\n        `Route \"${workStore.route}\" has a \\`generateMetadata\\` that depends on Request data (\\`cookies()\\`, etc...) or uncached external data (\\`fetch(...)\\`, etc...) when the rest of the route does not. See more info here: https://nextjs.org/docs/messages/next-prerender-dynamic-metadata`\n      )\n      throw new StaticGenBailoutError()\n    }\n  }\n}\n\nexport function delayUntilRuntimeStage<T>(\n  prerenderStore: PrerenderStoreModernRuntime,\n  result: Promise<T>\n): Promise<T> {\n  if (prerenderStore.runtimeStagePromise) {\n    return prerenderStore.runtimeStagePromise.then(() => result)\n  }\n  return result\n}\n","import { isHangingPromiseRejectionError } from '../../server/dynamic-rendering-utils'\nimport { isPostpone } from '../../server/lib/router-utils/is-postpone'\nimport { isBailoutToCSRError } from '../../shared/lib/lazy-dynamic/bailout-to-csr'\nimport { isNextRouterError } from './is-next-router-error'\nimport { isDynamicPostpone } from '../../server/app-render/dynamic-rendering'\nimport { isDynamicServerError } from './hooks-server-context'\n\nexport function unstable_rethrow(error: unknown): void {\n  if (\n    isNextRouterError(error) ||\n    isBailoutToCSRError(error) ||\n    isDynamicServerError(error) ||\n    isDynamicPostpone(error) ||\n    isPostpone(error) ||\n    isHangingPromiseRejectionError(error)\n  ) {\n    throw error\n  }\n\n  if (error instanceof Error && 'cause' in error) {\n    unstable_rethrow(error.cause)\n  }\n}\n","/**\n * This function should be used to rethrow internal Next.js errors so that they can be handled by the framework.\n * When wrapping an API that uses errors to interrupt control flow, you should use this function before you do any error handling.\n * This function will rethrow the error if it is a Next.js error so it can be handled, otherwise it will do nothing.\n *\n * Read more: [Next.js Docs: `unstable_rethrow`](https://nextjs.org/docs/app/api-reference/functions/unstable_rethrow)\n */\nexport const unstable_rethrow =\n  typeof window === 'undefined'\n    ? (\n        require('./unstable-rethrow.server') as typeof import('./unstable-rethrow.server')\n      ).unstable_rethrow\n    : (\n        require('./unstable-rethrow.browser') as typeof import('./unstable-rethrow.browser')\n      ).unstable_rethrow\n","/** @internal */\nclass ReadonlyURLSearchParamsError extends Error {\n  constructor() {\n    super(\n      'Method unavailable on `ReadonlyURLSearchParams`. Read more: https://nextjs.org/docs/app/api-reference/functions/use-search-params#updating-searchparams'\n    )\n  }\n}\n\nclass ReadonlyURLSearchParams extends URLSearchParams {\n  /** @deprecated Method unavailable on `ReadonlyURLSearchParams`. Read more: https://nextjs.org/docs/app/api-reference/functions/use-search-params#updating-searchparams */\n  append() {\n    throw new ReadonlyURLSearchParamsError()\n  }\n  /** @deprecated Method unavailable on `ReadonlyURLSearchParams`. Read more: https://nextjs.org/docs/app/api-reference/functions/use-search-params#updating-searchparams */\n  delete() {\n    throw new ReadonlyURLSearchParamsError()\n  }\n  /** @deprecated Method unavailable on `ReadonlyURLSearchParams`. Read more: https://nextjs.org/docs/app/api-reference/functions/use-search-params#updating-searchparams */\n  set() {\n    throw new ReadonlyURLSearchParamsError()\n  }\n  /** @deprecated Method unavailable on `ReadonlyURLSearchParams`. Read more: https://nextjs.org/docs/app/api-reference/functions/use-search-params#updating-searchparams */\n  sort() {\n    throw new ReadonlyURLSearchParamsError()\n  }\n}\n\nexport function unstable_isUnrecognizedActionError(): boolean {\n  throw new Error(\n    '`unstable_isUnrecognizedActionError` can only be used on the client.'\n  )\n}\n\nexport { redirect, permanentRedirect } from './redirect'\nexport { RedirectType } from './redirect-error'\nexport { notFound } from './not-found'\nexport { forbidden } from './forbidden'\nexport { unauthorized } from './unauthorized'\nexport { unstable_rethrow } from './unstable-rethrow'\nexport { ReadonlyURLSearchParams }\n","export * from '../client/components/navigation.react-server';\n\n//# sourceMappingURL=navigation.react-server.js.map","import type {\n  ArbitraryTypedObject,\n  PortableTextBlock,\n  PortableTextListItemBlock,\n  PortableTextSpan,\n  TypedObject,\n} from '@portabletext/types'\n\nimport type {ToolkitNestedPortableTextSpan, ToolkitPortableTextList, ToolkitTextNode} from './types'\n\n/**\n * Strict check to determine if node is a correctly formatted Portable Text span.\n *\n * @param node - Node to check\n * @returns True if valid Portable Text span, otherwise false\n */\nexport function isPortableTextSpan(\n  node: ArbitraryTypedObject | PortableTextSpan,\n): node is PortableTextSpan {\n  return (\n    node._type === 'span' &&\n    'text' in node &&\n    typeof node.text === 'string' &&\n    (typeof node.marks === 'undefined' ||\n      (Array.isArray(node.marks) && node.marks.every((mark) => typeof mark === 'string')))\n  )\n}\n\n/**\n * Strict check to determine if node is a correctly formatted Portable Text block.\n *\n * @param node - Node to check\n * @returns True if valid Portable Text block, otherwise false\n */\nexport function isPortableTextBlock(\n  node: PortableTextBlock | TypedObject,\n): node is PortableTextBlock {\n  return (\n    // A block doesn't _have_ to be named 'block' - to differentiate between\n    // allowed child types and marks, one might name them differently\n    typeof node._type === 'string' &&\n    // Toolkit-types like nested spans are @-prefixed\n    node._type[0] !== '@' &&\n    // `markDefs` isn't _required_ per say, but if it's there, it needs to be an array\n    (!('markDefs' in node) ||\n      !node.markDefs ||\n      (Array.isArray(node.markDefs) &&\n        // Every mark definition needs to have an `_key` to be mappable in child spans\n        node.markDefs.every((def) => typeof def._key === 'string'))) &&\n    // `children` is required and needs to be an array\n    'children' in node &&\n    Array.isArray(node.children) &&\n    // All children are objects with `_type` (usually spans, but can contain other stuff)\n    node.children.every((child) => typeof child === 'object' && '_type' in child)\n  )\n}\n\n/**\n * Strict check to determine if node is a correctly formatted portable list item block.\n *\n * @param block - Block to check\n * @returns True if valid Portable Text list item block, otherwise false\n */\nexport function isPortableTextListItemBlock(\n  block: PortableTextBlock | TypedObject,\n): block is PortableTextListItemBlock {\n  return (\n    isPortableTextBlock(block) &&\n    'listItem' in block &&\n    typeof block.listItem === 'string' &&\n    (typeof block.level === 'undefined' || typeof block.level === 'number')\n  )\n}\n\n/**\n * Loose check to determine if block is a toolkit list node.\n * Only checks `_type`, assumes correct structure.\n *\n * @param block - Block to check\n * @returns True if toolkit list, otherwise false\n */\nexport function isPortableTextToolkitList(\n  block: TypedObject | ToolkitPortableTextList,\n): block is ToolkitPortableTextList {\n  return block._type === '@list'\n}\n\n/**\n * Loose check to determine if span is a toolkit span node.\n * Only checks `_type`, assumes correct structure.\n *\n * @param span - Span to check\n * @returns True if toolkit span, otherwise false\n */\nexport function isPortableTextToolkitSpan(\n  span: TypedObject | ToolkitNestedPortableTextSpan,\n): span is ToolkitNestedPortableTextSpan {\n  return span._type === '@span'\n}\n\n/**\n * Loose check to determine if node is a toolkit text node.\n * Only checks `_type`, assumes correct structure.\n *\n * @param node - Node to check\n * @returns True if toolkit text node, otherwise false\n */\nexport function isPortableTextToolkitTextNode(\n  node: TypedObject | ToolkitTextNode,\n): node is ToolkitTextNode {\n  return node._type === '@text'\n}\n","export * from '../client/components/navigation.react-server'\n","import type {PortableTextListComponent, PortableTextListItemComponent} from '../types'\n\nexport const defaultLists: Record<'number' | 'bullet', PortableTextListComponent> = {\n  number: ({children}) => <ol>{children}</ol>,\n  bullet: ({children}) => <ul>{children}</ul>,\n}\n\nexport const DefaultListItem: PortableTextListItemComponent = ({children}) => <li>{children}</li>\n","import type {TypedObject} from '@portabletext/types'\n\nimport type {PortableTextMarkComponent} from '../types'\n\ninterface DefaultLink extends TypedObject {\n  _type: 'link'\n  href: string\n}\n\nconst link: PortableTextMarkComponent<DefaultLink> = ({children, value}) => (\n  <a href={value?.href}>{children}</a>\n)\n\nconst underlineStyle = {textDecoration: 'underline'}\n\nexport const defaultMarks: Record<string, PortableTextMarkComponent | undefined> = {\n  'em': ({children}) => <em>{children}</em>,\n  'strong': ({children}) => <strong>{children}</strong>,\n  'code': ({children}) => <code>{children}</code>,\n  'underline': ({children}) => <span style={underlineStyle}>{children}</span>,\n  'strike-through': ({children}) => <del>{children}</del>,\n  link,\n}\n","const getTemplate = (type: string, prop: string): string =>\n  `[@portabletext/react] Unknown ${type}, specify a component for it in the \\`components.${prop}\\` prop`\n\nexport const unknownTypeWarning = (typeName: string): string =>\n  getTemplate(`block type \"${typeName}\"`, 'types')\n\nexport const unknownMarkWarning = (markType: string): string =>\n  getTemplate(`mark type \"${markType}\"`, 'marks')\n\nexport const unknownBlockStyleWarning = (blockStyle: string): string =>\n  getTemplate(`block style \"${blockStyle}\"`, 'block')\n\nexport const unknownListStyleWarning = (listStyle: string): string =>\n  getTemplate(`list style \"${listStyle}\"`, 'list')\n\nexport const unknownListItemStyleWarning = (listStyle: string): string =>\n  getTemplate(`list item style \"${listStyle}\"`, 'listItem')\n\nexport function printWarning(message: string): void {\n  console.warn(message)\n}\n","import type {PortableTextReactComponents} from '../types'\nimport {unknownTypeWarning} from '../warnings'\n\nconst hidden = {display: 'none'}\n\nexport const DefaultUnknownType: PortableTextReactComponents['unknownType'] = ({\n  value,\n  isInline,\n}) => {\n  const warning = unknownTypeWarning(value._type)\n  return isInline ? <span style={hidden}>{warning}</span> : <div style={hidden}>{warning}</div>\n}\n\nexport const DefaultUnknownMark: PortableTextReactComponents['unknownMark'] = ({\n  markType,\n  children,\n}) => {\n  return <span className={`unknown__pt__mark__${markType}`}>{children}</span>\n}\n\nexport const DefaultUnknownBlockStyle: PortableTextReactComponents['unknownBlockStyle'] = ({\n  children,\n}) => {\n  return <p>{children}</p>\n}\n\nexport const DefaultUnknownList: PortableTextReactComponents['unknownList'] = ({children}) => {\n  return <ul>{children}</ul>\n}\n\nexport const DefaultUnknownListItem: PortableTextReactComponents['unknownListItem'] = ({\n  children,\n}) => {\n  return <li>{children}</li>\n}\n","import type {PortableTextSpan, TypedObject} from '@portabletext/types'\n\nimport {isPortableTextSpan} from './asserters'\n\nconst knownDecorators = ['strong', 'em', 'code', 'underline', 'strike-through']\n\n/**\n * Figures out the optimal order of marks, in order to minimize the amount of\n * nesting/repeated elements in environments such as HTML. For instance, a naive\n * implementation might render something like:\n *\n * ```html\n * <strong>This block contains </strong>\n * <strong><a href=\"https://some.url/\">a link</a></strong>\n * <strong> and some bolded text</strong>\n * ```\n *\n * ...whereas an optimal order would be:\n *\n * ```html\n * <strong>\n *   This block contains <a href=\"https://some.url/\">a link</a> and some bolded text\n * </strong>\n * ```\n *\n * This is particularly necessary for cases like links, where you don't want multiple\n * individual links for different segments of the link text, even if parts of it are\n * bolded/italicized.\n *\n * This function is meant to be used like: `block.children.map(sortMarksByOccurences)`,\n * and is used internally in {@link buildMarksTree | `buildMarksTree()`}.\n *\n * The marks are sorted in the following order:\n *\n *  1. Marks that are shared amongst the most adjacent siblings\n *  2. Non-default marks (links, custom metadata)\n *  3. Decorators (bold, emphasis, code etc), in a predefined, preferred order\n *\n * @param span - The current span to sort\n * @param index - The index of the current span within the block\n * @param blockChildren - All children of the block being sorted\n * @returns Array of decorators and annotations, sorted by \"most adjacent siblings\"\n */\nexport function sortMarksByOccurences(\n  span: PortableTextSpan | TypedObject,\n  index: number,\n  blockChildren: (PortableTextSpan | TypedObject)[],\n): string[] {\n  if (!isPortableTextSpan(span) || !span.marks) {\n    return []\n  }\n\n  if (!span.marks.length) {\n    return []\n  }\n\n  // Slicing because we'll be sorting with `sort()`, which mutates\n  const marks = span.marks.slice()\n  const occurences: Record<string, number> = {}\n  marks.forEach((mark) => {\n    occurences[mark] = 1\n\n    for (let siblingIndex = index + 1; siblingIndex < blockChildren.length; siblingIndex++) {\n      const sibling = blockChildren[siblingIndex]\n\n      if (\n        sibling &&\n        isPortableTextSpan(sibling) &&\n        Array.isArray(sibling.marks) &&\n        sibling.marks.indexOf(mark) !== -1\n      ) {\n        occurences[mark]++\n      } else {\n        break\n      }\n    }\n  })\n\n  return marks.sort((markA, markB) => sortMarks(occurences, markA, markB))\n}\n\nfunction sortMarks<U extends string, T extends Record<U, number>>(\n  occurences: T,\n  markA: U,\n  markB: U,\n): number {\n  const aOccurences = occurences[markA]\n  const bOccurences = occurences[markB]\n\n  if (aOccurences !== bOccurences) {\n    return bOccurences - aOccurences\n  }\n\n  const aKnownPos = knownDecorators.indexOf(markA)\n  const bKnownPos = knownDecorators.indexOf(markB)\n\n  // Sort known decorators last\n  if (aKnownPos !== bKnownPos) {\n    return aKnownPos - bKnownPos\n  }\n\n  // Sort other marks simply by key\n  return markA.localeCompare(markB)\n}\n","import type {PortableTextBlockStyle} from '@portabletext/types'\nimport type {JSX} from 'react'\n\nimport type {PortableTextBlockComponent, PortableTextReactComponents} from '../types'\nimport {DefaultListItem, defaultLists} from './list'\nimport {defaultMarks} from './marks'\nimport {\n  DefaultUnknownBlockStyle,\n  DefaultUnknownList,\n  DefaultUnknownListItem,\n  DefaultUnknownMark,\n  DefaultUnknownType,\n} from './unknown'\n\nexport const DefaultHardBreak = (): JSX.Element => <br />\n\nexport const defaultBlockStyles: Record<\n  PortableTextBlockStyle,\n  PortableTextBlockComponent | undefined\n> = {\n  normal: ({children}) => <p>{children}</p>,\n  blockquote: ({children}) => <blockquote>{children}</blockquote>,\n  h1: ({children}) => <h1>{children}</h1>,\n  h2: ({children}) => <h2>{children}</h2>,\n  h3: ({children}) => <h3>{children}</h3>,\n  h4: ({children}) => <h4>{children}</h4>,\n  h5: ({children}) => <h5>{children}</h5>,\n  h6: ({children}) => <h6>{children}</h6>,\n}\n\nexport const defaultComponents: PortableTextReactComponents = {\n  types: {},\n\n  block: defaultBlockStyles,\n  marks: defaultMarks,\n  list: defaultLists,\n  listItem: DefaultListItem,\n  hardBreak: DefaultHardBreak,\n\n  unknownType: DefaultUnknownType,\n  unknownMark: DefaultUnknownMark,\n  unknownList: DefaultUnknownList,\n  unknownListItem: DefaultUnknownListItem,\n  unknownBlockStyle: DefaultUnknownBlockStyle,\n}\n","import type {\n  ArbitraryTypedObject,\n  PortableTextBlock,\n  PortableTextMarkDefinition,\n} from '@portabletext/types'\n\nimport {isPortableTextSpan} from './asserters'\nimport {sortMarksByOccurences} from './sortMarksByOccurences'\nimport type {ToolkitNestedPortableTextSpan, ToolkitTextNode} from './types'\n\n/**\n * Takes a Portable Text block and returns a nested tree of nodes optimized for rendering\n * in HTML-like environments where you want marks/annotations to be nested inside of eachother.\n * For instance, a naive span-by-span rendering might yield:\n *\n * ```html\n * <strong>This block contains </strong>\n * <strong><a href=\"https://some.url/\">a link</a></strong>\n * <strong> and some bolded and </strong>\n * <em><strong>italicized text</strong></em>\n * ```\n *\n * ...whereas an optimal order would be:\n *\n * ```html\n * <strong>\n *   This block contains <a href=\"https://some.url/\">a link</a>\n *   and some bolded and <em>italicized text</em>\n * </strong>\n * ```\n *\n * Note that since \"native\" Portable Text spans cannot be nested,\n * this function returns an array of \"toolkit specific\" types:\n * {@link ToolkitTextNode | `@text`} and {@link ToolkitNestedPortableTextSpan | `@span` }.\n *\n * The toolkit-specific type can hold both types, as well as any arbitrary inline objects,\n * creating an actual tree.\n *\n * @param block - The Portable Text block to create a tree of nodes from\n * @returns Array of (potentially) nested spans, text nodes and/or arbitrary inline objects\n */\nexport function buildMarksTree<M extends PortableTextMarkDefinition = PortableTextMarkDefinition>(\n  block: PortableTextBlock<M>,\n): (ToolkitNestedPortableTextSpan<M> | ToolkitTextNode | ArbitraryTypedObject)[] {\n  const {children} = block\n  const markDefs = block.markDefs ?? []\n  if (!children || !children.length) {\n    return []\n  }\n\n  const sortedMarks = children.map(sortMarksByOccurences)\n\n  const rootNode: ToolkitNestedPortableTextSpan<M> = {\n    _type: '@span',\n    children: [],\n    markType: '<unknown>',\n  }\n\n  let nodeStack: ToolkitNestedPortableTextSpan<M>[] = [rootNode]\n\n  for (let i = 0; i < children.length; i++) {\n    const span = children[i]\n    if (!span) {\n      continue\n    }\n\n    const marksNeeded = sortedMarks[i] || []\n    let pos = 1\n\n    // Start at position one. Root is always plain and should never be removed\n    if (nodeStack.length > 1) {\n      for (pos; pos < nodeStack.length; pos++) {\n        const mark = nodeStack[pos]?.markKey || ''\n        const index = marksNeeded.indexOf(mark)\n\n        if (index === -1) {\n          break\n        }\n\n        marksNeeded.splice(index, 1)\n      }\n    }\n\n    // Keep from beginning to first miss\n    nodeStack = nodeStack.slice(0, pos)\n\n    // Add needed nodes\n    let currentNode = nodeStack[nodeStack.length - 1]\n    if (!currentNode) {\n      continue\n    }\n\n    for (const markKey of marksNeeded) {\n      const markDef = markDefs?.find((def) => def._key === markKey)\n      const markType = markDef ? markDef._type : markKey\n      const node: ToolkitNestedPortableTextSpan<M> = {\n        _type: '@span',\n        _key: span._key,\n        children: [],\n        markDef,\n        markType,\n        markKey,\n      }\n\n      currentNode.children.push(node)\n      nodeStack.push(node)\n      currentNode = node\n    }\n\n    // Split at newlines to make individual line chunks, but keep newline\n    // characters as individual elements in the array. We use these characters\n    // in the span serializer to trigger hard-break rendering\n    if (isPortableTextSpan(span)) {\n      const lines = span.text.split('\\n')\n      for (let line = lines.length; line-- > 1; ) {\n        lines.splice(line, 0, '\\n')\n      }\n\n      currentNode.children = currentNode.children.concat(\n        lines.map((text) => ({_type: '@text', text})),\n      )\n    } else {\n      // This is some other inline object, not a text span\n      currentNode.children = currentNode.children.concat(span)\n    }\n  }\n\n  return rootNode.children\n}\n","import type {PortableTextComponents, PortableTextReactComponents} from '../types'\n\nexport function mergeComponents(\n  parent: PortableTextReactComponents,\n  overrides: PortableTextComponents,\n): PortableTextReactComponents {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  const {block, list, listItem, marks, types, ...rest} = overrides\n  // @todo figure out how to not `as ...` these\n  return {\n    ...parent,\n    block: mergeDeeply(parent, overrides, 'block') as PortableTextReactComponents['block'],\n    list: mergeDeeply(parent, overrides, 'list') as PortableTextReactComponents['list'],\n    listItem: mergeDeeply(parent, overrides, 'listItem') as PortableTextReactComponents['listItem'],\n    marks: mergeDeeply(parent, overrides, 'marks') as PortableTextReactComponents['marks'],\n    types: mergeDeeply(parent, overrides, 'types') as PortableTextReactComponents['types'],\n    ...rest,\n  }\n}\n\nfunction mergeDeeply(\n  parent: PortableTextReactComponents,\n  overrides: PortableTextComponents,\n  key: 'block' | 'list' | 'listItem' | 'marks' | 'types',\n): PortableTextReactComponents[typeof key] {\n  const override = overrides[key]\n  const parentVal = parent[key]\n\n  if (typeof override === 'function') {\n    return override\n  }\n\n  if (override && typeof parentVal === 'function') {\n    return override\n  }\n\n  if (override) {\n    return {...parentVal, ...override} as PortableTextReactComponents[typeof key]\n  }\n\n  return parentVal\n}\n","import type {ToolkitNestedPortableTextSpan, ToolkitTextNode} from '@portabletext/toolkit'\nimport {\n  buildMarksTree,\n  isPortableTextBlock,\n  isPortableTextListItemBlock,\n  isPortableTextToolkitList,\n  isPortableTextToolkitSpan,\n  isPortableTextToolkitTextNode,\n  LIST_NEST_MODE_HTML,\n  nestLists,\n  spanToPlainText,\n} from '@portabletext/toolkit'\nimport type {\n  PortableTextBlock,\n  PortableTextListItemBlock,\n  PortableTextMarkDefinition,\n  PortableTextSpan,\n  TypedObject,\n} from '@portabletext/types'\nimport {type JSX, type ReactNode, useMemo} from 'react'\n\nimport {defaultComponents} from './components/defaults'\nimport {mergeComponents} from './components/merge'\nimport type {\n  MissingComponentHandler,\n  NodeRenderer,\n  PortableTextProps,\n  PortableTextReactComponents,\n  ReactPortableTextList,\n  Serializable,\n  SerializedBlock,\n} from './types'\nimport {\n  printWarning,\n  unknownBlockStyleWarning,\n  unknownListItemStyleWarning,\n  unknownListStyleWarning,\n  unknownMarkWarning,\n  unknownTypeWarning,\n} from './warnings'\n\nexport function PortableText<B extends TypedObject = PortableTextBlock>({\n  value: input,\n  components: componentOverrides,\n  listNestingMode,\n  onMissingComponent: missingComponentHandler = printWarning,\n}: PortableTextProps<B>): JSX.Element {\n  const handleMissingComponent = missingComponentHandler || noop\n  const blocks = Array.isArray(input) ? input : [input]\n  const nested = nestLists(blocks, listNestingMode || LIST_NEST_MODE_HTML)\n\n  const components = useMemo(() => {\n    return componentOverrides\n      ? mergeComponents(defaultComponents, componentOverrides)\n      : defaultComponents\n  }, [componentOverrides])\n\n  const renderNode = useMemo(\n    () => getNodeRenderer(components, handleMissingComponent),\n    [components, handleMissingComponent],\n  )\n  const rendered = nested.map((node, index) =>\n    renderNode({node: node, index, isInline: false, renderNode}),\n  )\n\n  return <>{rendered}</>\n}\n\nconst getNodeRenderer = (\n  components: PortableTextReactComponents,\n  handleMissingComponent: MissingComponentHandler,\n): NodeRenderer => {\n  function renderNode<N extends TypedObject>(options: Serializable<N>): ReactNode {\n    const {node, index, isInline} = options\n    const key = node._key || `node-${index}`\n\n    if (isPortableTextToolkitList(node)) {\n      return renderList(node, index, key)\n    }\n\n    if (isPortableTextListItemBlock(node)) {\n      return renderListItem(node, index, key)\n    }\n\n    if (isPortableTextToolkitSpan(node)) {\n      return renderSpan(node, index, key)\n    }\n\n    if (hasCustomComponentForNode(node)) {\n      return renderCustomBlock(node, index, key, isInline)\n    }\n\n    if (isPortableTextBlock(node)) {\n      return renderBlock(node, index, key, isInline)\n    }\n\n    if (isPortableTextToolkitTextNode(node)) {\n      return renderText(node, key)\n    }\n\n    return renderUnknownType(node, index, key, isInline)\n  }\n\n  function hasCustomComponentForNode(node: TypedObject): boolean {\n    return node._type in components.types\n  }\n\n  /* eslint-disable react/jsx-no-bind */\n  function renderListItem(\n    node: PortableTextListItemBlock<PortableTextMarkDefinition, PortableTextSpan>,\n    index: number,\n    key: string,\n  ) {\n    const tree = serializeBlock({node, index, isInline: false, renderNode})\n    const renderer = components.listItem\n    const handler = typeof renderer === 'function' ? renderer : renderer[node.listItem]\n    const Li = handler || components.unknownListItem\n\n    if (Li === components.unknownListItem) {\n      const style = node.listItem || 'bullet'\n      handleMissingComponent(unknownListItemStyleWarning(style), {\n        type: style,\n        nodeType: 'listItemStyle',\n      })\n    }\n\n    let children = tree.children\n    if (node.style && node.style !== 'normal') {\n      // Wrap any other style in whatever the block serializer says to use\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      const {listItem, ...blockNode} = node\n      children = renderNode({node: blockNode, index, isInline: false, renderNode})\n    }\n\n    return (\n      <Li key={key} value={node} index={index} isInline={false} renderNode={renderNode}>\n        {children}\n      </Li>\n    )\n  }\n\n  function renderList(node: ReactPortableTextList, index: number, key: string) {\n    const children = node.children.map((child, childIndex) =>\n      renderNode({\n        node: child._key ? child : {...child, _key: `li-${index}-${childIndex}`},\n        index: childIndex,\n        isInline: false,\n        renderNode,\n      }),\n    )\n\n    const component = components.list\n    const handler = typeof component === 'function' ? component : component[node.listItem]\n    const List = handler || components.unknownList\n\n    if (List === components.unknownList) {\n      const style = node.listItem || 'bullet'\n      handleMissingComponent(unknownListStyleWarning(style), {nodeType: 'listStyle', type: style})\n    }\n\n    return (\n      <List key={key} value={node} index={index} isInline={false} renderNode={renderNode}>\n        {children}\n      </List>\n    )\n  }\n\n  function renderSpan(node: ToolkitNestedPortableTextSpan, _index: number, key: string) {\n    const {markDef, markType, markKey} = node\n    const Span = components.marks[markType] || components.unknownMark\n    const children = node.children.map((child, childIndex) =>\n      renderNode({node: child, index: childIndex, isInline: true, renderNode}),\n    )\n\n    if (Span === components.unknownMark) {\n      handleMissingComponent(unknownMarkWarning(markType), {nodeType: 'mark', type: markType})\n    }\n\n    return (\n      <Span\n        key={key}\n        text={spanToPlainText(node)}\n        value={markDef}\n        markType={markType}\n        markKey={markKey}\n        renderNode={renderNode}\n      >\n        {children}\n      </Span>\n    )\n  }\n\n  function renderBlock(node: PortableTextBlock, index: number, key: string, isInline: boolean) {\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    const {_key, ...props} = serializeBlock({node, index, isInline, renderNode})\n    const style = props.node.style || 'normal'\n    const handler =\n      typeof components.block === 'function' ? components.block : components.block[style]\n    const Block = handler || components.unknownBlockStyle\n\n    if (Block === components.unknownBlockStyle) {\n      handleMissingComponent(unknownBlockStyleWarning(style), {\n        nodeType: 'blockStyle',\n        type: style,\n      })\n    }\n\n    return <Block key={key} {...props} value={props.node} renderNode={renderNode} />\n  }\n\n  function renderText(node: ToolkitTextNode, key: string) {\n    if (node.text === '\\n') {\n      const HardBreak = components.hardBreak\n      return HardBreak ? <HardBreak key={key} /> : '\\n'\n    }\n\n    return node.text\n  }\n\n  function renderUnknownType(node: TypedObject, index: number, key: string, isInline: boolean) {\n    const nodeOptions = {\n      value: node,\n      isInline,\n      index,\n      renderNode,\n    }\n\n    handleMissingComponent(unknownTypeWarning(node._type), {nodeType: 'block', type: node._type})\n\n    const UnknownType = components.unknownType\n    return <UnknownType key={key} {...nodeOptions} />\n  }\n\n  function renderCustomBlock(node: TypedObject, index: number, key: string, isInline: boolean) {\n    const nodeOptions = {\n      value: node,\n      isInline,\n      index,\n      renderNode,\n    }\n\n    const Node = components.types[node._type]\n    return Node ? <Node key={key} {...nodeOptions} /> : null\n  }\n  /* eslint-enable react/jsx-no-bind */\n\n  return renderNode\n}\n\nfunction serializeBlock(options: Serializable<PortableTextBlock>): SerializedBlock {\n  const {node, index, isInline, renderNode} = options\n  const tree = buildMarksTree(node)\n  const children = tree.map((child, i) =>\n    renderNode({node: child, isInline: true, index: i, renderNode}),\n  )\n\n  return {\n    _key: node._key || `block-${index}`,\n    children,\n    index,\n    isInline,\n    node,\n  }\n}\n\nfunction noop() {\n  // Intentional noop\n}\n","import type {PortableTextBlock, PortableTextListItemBlock, TypedObject} from '@portabletext/types'\n\nimport {\n  isPortableTextListItemBlock,\n  isPortableTextSpan,\n  isPortableTextToolkitList,\n} from './asserters'\nimport type {\n  ToolkitListNestMode,\n  ToolkitPortableTextDirectList,\n  ToolkitPortableTextHtmlList,\n  ToolkitPortableTextList,\n  ToolkitPortableTextListItem,\n} from './types'\n\nexport type ToolkitNestListsOutputNode<T> =\n  | T\n  | ToolkitPortableTextHtmlList\n  | ToolkitPortableTextDirectList\n\n/**\n * Takes an array of blocks and returns an array of nodes optimized for rendering in HTML-like\n * environment, where lists are nested inside of eachother instead of appearing \"flat\" as in\n * native Portable Text data structures.\n *\n * Note that the list node is not a native Portable Text node type, and thus is represented\n * using the {@link ToolkitPortableTextList | `@list`} type name (`{_type: '@list'}`).\n *\n * The nesting can be configured in two modes:\n *\n * - `direct`: deeper list nodes will appear as a direct child of the parent list\n * - `html`, deeper list nodes will appear as a child of the last _list item_ in the parent list\n *\n * When using `direct`, all list nodes will be of type {@link ToolkitPortableTextDirectList},\n * while with `html` they will be of type {@link ToolkitPortableTextHtmlList}\n *\n * These modes are available as {@link LIST_NEST_MODE_HTML} and {@link LIST_NEST_MODE_DIRECT}.\n *\n * @param blocks - Array of Portable Text blocks and other arbitrary types\n * @param mode - Mode to use for nesting, `direct` or `html`\n * @returns Array of potentially nested nodes optimized for rendering\n */\nexport function nestLists<T extends TypedObject = PortableTextBlock | TypedObject>(\n  blocks: T[],\n  mode: 'direct',\n): (T | ToolkitPortableTextDirectList)[]\nexport function nestLists<T extends TypedObject = PortableTextBlock | TypedObject>(\n  blocks: T[],\n  mode: 'html',\n): (T | ToolkitPortableTextHtmlList)[]\nexport function nestLists<T extends TypedObject = PortableTextBlock | TypedObject>(\n  blocks: T[],\n  mode: 'direct' | 'html',\n): (T | ToolkitPortableTextHtmlList | ToolkitPortableTextDirectList)[]\nexport function nestLists<T extends TypedObject = PortableTextBlock | TypedObject>(\n  blocks: T[],\n  mode: ToolkitListNestMode,\n): ToolkitNestListsOutputNode<T>[] {\n  const tree: ToolkitNestListsOutputNode<T>[] = []\n  let currentList: ToolkitPortableTextList | undefined\n\n  for (let i = 0; i < blocks.length; i++) {\n    const block = blocks[i]\n    if (!block) {\n      continue\n    }\n\n    if (!isPortableTextListItemBlock(block)) {\n      tree.push(block)\n      currentList = undefined\n      continue\n    }\n\n    // Start of a new list?\n    if (!currentList) {\n      currentList = listFromBlock(block, i, mode)\n      tree.push(currentList)\n      continue\n    }\n\n    // New list item within same list?\n    if (blockMatchesList(block, currentList)) {\n      currentList.children.push(block)\n      continue\n    }\n\n    // Different list props, are we going deeper?\n    if ((block.level || 1) > currentList.level) {\n      const newList = listFromBlock(block, i, mode)\n\n      if (mode === 'html') {\n        // Because HTML is kinda weird, nested lists needs to be nested within list items.\n        // So while you would think that we could populate the parent list with a new sub-list,\n        // we actually have to target the last list element (child) of the parent.\n        // However, at this point we need to be very careful - simply pushing to the list of children\n        // will mutate the input, and we don't want to blindly clone the entire tree.\n\n        // Clone the last child while adding our new list as the last child of it\n        const lastListItem = currentList.children[\n          currentList.children.length - 1\n        ] as ToolkitPortableTextListItem\n\n        const newLastChild: ToolkitPortableTextListItem = {\n          ...lastListItem,\n          children: [...lastListItem.children, newList],\n        }\n\n        // Swap the last child\n        currentList.children[currentList.children.length - 1] = newLastChild\n      } else {\n        ;(currentList as ToolkitPortableTextDirectList).children.push(\n          newList as ToolkitPortableTextDirectList,\n        )\n      }\n\n      // Set the newly created, deeper list as the current\n      currentList = newList\n      continue\n    }\n\n    // Different list props, are we going back up the tree?\n    if ((block.level || 1) < currentList.level) {\n      // Current list has ended, and we need to hook up with a parent of the same level and type\n      const matchingBranch = tree[tree.length - 1]\n      const match = matchingBranch && findListMatching(matchingBranch, block)\n      if (match) {\n        currentList = match\n        currentList.children.push(block)\n        continue\n      }\n\n      // Similar parent can't be found, assume new list\n      currentList = listFromBlock(block, i, mode)\n      tree.push(currentList)\n      continue\n    }\n\n    // Different list props, different list style?\n    if (block.listItem !== currentList.listItem) {\n      const matchingBranch = tree[tree.length - 1]\n      const match = matchingBranch && findListMatching(matchingBranch, {level: block.level || 1})\n      if (match && match.listItem === block.listItem) {\n        currentList = match\n        currentList.children.push(block)\n        continue\n      } else {\n        currentList = listFromBlock(block, i, mode)\n        tree.push(currentList)\n        continue\n      }\n    }\n\n    // eslint-disable-next-line no-console\n    console.warn('Unknown state encountered for block', block)\n    tree.push(block)\n  }\n\n  return tree\n}\n\nfunction blockMatchesList(block: PortableTextBlock, list: ToolkitPortableTextList) {\n  return (block.level || 1) === list.level && block.listItem === list.listItem\n}\n\nfunction listFromBlock(\n  block: PortableTextListItemBlock,\n  index: number,\n  mode: ToolkitListNestMode,\n): ToolkitPortableTextList {\n  return {\n    _type: '@list',\n    _key: `${block._key || `${index}`}-parent`,\n    mode,\n    level: block.level || 1,\n    listItem: block.listItem,\n    children: [block],\n  }\n}\n\nfunction findListMatching<T extends TypedObject | PortableTextBlock>(\n  rootNode: T,\n  matching: Partial<PortableTextListItemBlock>,\n): ToolkitPortableTextList | undefined {\n  const level = matching.level || 1\n  const style = matching.listItem || 'normal'\n  const filterOnType = typeof matching.listItem === 'string'\n  if (\n    isPortableTextToolkitList(rootNode) &&\n    (rootNode.level || 1) === level &&\n    filterOnType &&\n    (rootNode.listItem || 'normal') === style\n  ) {\n    return rootNode\n  }\n\n  if (!('children' in rootNode)) {\n    return undefined\n  }\n\n  const node = rootNode.children[rootNode.children.length - 1]\n  return node && !isPortableTextSpan(node) ? findListMatching(node, matching) : undefined\n}\n","import {isPortableTextToolkitSpan, isPortableTextToolkitTextNode} from './asserters'\nimport type {ToolkitNestedPortableTextSpan} from './types'\n\n/**\n * Returns the plain-text representation of a\n * {@link ToolkitNestedPortableTextSpan | toolkit-specific Portable Text span}.\n *\n * Useful if you have a subset of nested nodes and want the text from just those,\n * instead of for the entire Portable Text block.\n *\n * @param span - Span node to get text from (Portable Text toolkit specific type)\n * @returns The plain-text version of the span\n */\nexport function spanToPlainText(span: ToolkitNestedPortableTextSpan): string {\n  let text = ''\n  span.children.forEach((current) => {\n    if (isPortableTextToolkitTextNode(current)) {\n      text += current.text\n    } else if (isPortableTextToolkitSpan(current)) {\n      text += spanToPlainText(current)\n    }\n  })\n  return text\n}\n","import type {ArbitraryTypedObject, PortableTextBlock} from '@portabletext/types'\n\nimport {isPortableTextBlock, isPortableTextSpan} from './asserters'\n\nconst leadingSpace = /^\\s/\nconst trailingSpace = /\\s$/\n\n/**\n * Takes a Portable Text block (or an array of them) and returns the text value\n * of all the Portable Text span nodes. Adds whitespace when encountering inline,\n * non-span nodes to ensure text flow is optimal.\n *\n * Note that this only accounts for regular Portable Text blocks - any text inside\n * custom content types are not included in the output.\n *\n * @param block - Single block or an array of blocks to extract text from\n * @returns The plain-text content of the blocks\n */\nexport function toPlainText(\n  block: PortableTextBlock | ArbitraryTypedObject[] | PortableTextBlock[],\n): string {\n  const blocks = Array.isArray(block) ? block : [block]\n  let text = ''\n\n  blocks.forEach((current, index) => {\n    if (!isPortableTextBlock(current)) {\n      return\n    }\n\n    let pad = false\n    current.children.forEach((span) => {\n      if (isPortableTextSpan(span)) {\n        // If the previous element was a non-span, and we have no natural whitespace\n        // between the previous and the next span, insert it to give the spans some\n        // room to breathe. However, don't do so if this is the first span.\n        text += pad && text && !trailingSpace.test(text) && !leadingSpace.test(span.text) ? ' ' : ''\n        text += span.text\n        pad = false\n      } else {\n        pad = true\n      }\n    })\n\n    if (index !== blocks.length - 1) {\n      text += '\\n\\n'\n    }\n  })\n\n  return text\n}\n","import type {\n  ArbitraryTypedObject,\n  PortableTextListItemBlock,\n  PortableTextMarkDefinition,\n  PortableTextSpan,\n} from '@portabletext/types'\n\n/**\n * List nesting mode for HTML, see the {@link nestLists | `nestLists()` function}\n */\nexport const LIST_NEST_MODE_HTML = 'html'\n\n/**\n * List nesting mode for direct, nested lists, see the {@link nestLists | `nestLists()` function}\n */\nexport const LIST_NEST_MODE_DIRECT = 'direct'\n\n/**\n * List nesting mode, see the {@link nestLists | `nestLists()` function}\n */\nexport type ToolkitListNestMode = 'html' | 'direct'\n\n/**\n * Toolkit-specific type representing a nested list\n *\n * See the `nestLists()` function for more info\n */\nexport type ToolkitPortableTextList = ToolkitPortableTextHtmlList | ToolkitPortableTextDirectList\n\n/**\n * Toolkit-specific type representing a nested list in HTML mode, where deeper lists are nested\n * inside of the _list items_, eg `<ul><li>Some text<ul><li>Deeper</li></ul></li></ul>`\n */\nexport interface ToolkitPortableTextHtmlList {\n  /**\n   * Type name, prefixed with `@` to signal that this is a toolkit-specific node.\n   */\n  _type: '@list'\n\n  /**\n   * Unique key for this list (within its parent)\n   */\n  _key: string\n\n  /**\n   * List mode, signaling that list nodes will appear as children of the _list items_\n   */\n  mode: 'html'\n\n  /**\n   * Level/depth of this list node (starts at `1`)\n   */\n  level: number\n\n  /**\n   * Style of this list item (`bullet`, `number` are common values, but can be customized)\n   */\n  listItem: string\n\n  /**\n   * Child nodes of this list - toolkit-specific list items which can themselves hold deeper lists\n   */\n  children: ToolkitPortableTextListItem[]\n}\n\n/**\n * Toolkit-specific type representing a nested list in \"direct\" mode, where deeper lists are nested\n * inside of the lists children, alongside other blocks.\n */\nexport interface ToolkitPortableTextDirectList {\n  /**\n   * Type name, prefixed with `@` to signal that this is a toolkit-specific node.\n   */\n  _type: '@list'\n\n  /**\n   * Unique key for this list (within its parent)\n   */\n  _key: string\n\n  /**\n   * List mode, signaling that list nodes can appear as direct children\n   */\n  mode: 'direct'\n\n  /**\n   * Level/depth of this list node (starts at `1`)\n   */\n  level: number\n\n  /**\n   * Style of this list item (`bullet`, `number` are common values, but can be customized)\n   */\n  listItem: string\n\n  /**\n   * Child nodes of this list - either portable text list items, or another, deeper list\n   */\n  children: (PortableTextListItemBlock | ToolkitPortableTextDirectList)[]\n}\n\n/**\n * Toolkit-specific type representing a list item block, but where the children can be another list\n */\nexport interface ToolkitPortableTextListItem\n  extends PortableTextListItemBlock<\n    PortableTextMarkDefinition,\n    PortableTextSpan | ToolkitPortableTextList\n  > {}\n\n/**\n * Toolkit-specific type representing a text node, used when nesting spans.\n *\n * See the {@link buildMarksTree | `buildMarksTree()` function}\n */\nexport interface ToolkitTextNode {\n  /**\n   * Type name, prefixed with `@` to signal that this is a toolkit-specific node.\n   */\n  _type: '@text'\n\n  /**\n   * The actual string value of the text node\n   */\n  text: string\n}\n\n/**\n * Toolkit-specific type representing a portable text span that can hold other spans.\n * In this type, each span only has a single mark, instead of an array of them.\n */\nexport interface ToolkitNestedPortableTextSpan<\n  M extends PortableTextMarkDefinition = PortableTextMarkDefinition,\n> {\n  /**\n   * Type name, prefixed with `@` to signal that this is a toolkit-specific node.\n   */\n  _type: '@span'\n\n  /**\n   * Unique key for this span\n   */\n  _key?: string\n\n  /**\n   * Holds the value (definition) of the mark in the case of annotations.\n   * `undefined` if the mark is a decorator (strong, em or similar).\n   */\n  markDef?: M\n\n  /**\n   * The key of the mark definition (in the case of annotations).\n   * `undefined` if the mark is a decorator (strong, em or similar).\n   */\n  markKey?: string\n\n  /**\n   * Type of the mark. For annotations, this is the `_type` property of the value.\n   * For decorators, it will hold the name of the decorator (strong, em or similar).\n   */\n  markType: string\n\n  /**\n   * Child nodes of this span. Can be toolkit-specific text nodes, nested spans\n   * or any inline object type.\n   */\n  children: (\n    | ToolkitTextNode\n    | ToolkitNestedPortableTextSpan<PortableTextMarkDefinition>\n    | ArbitraryTypedObject\n  )[]\n}\n"],"names":["RedirectStatusCode","REDIRECT_ERROR_CODE","RedirectType","isRedirectError","error","digest","split","errorCode","type","destination","slice","join","status","at","statusCode","Number","isNaN","getRedirectError","getRedirectStatusCodeFromError","getRedirectTypeFromError","getURLFromRedirectError","permanentRedirect","redirect","actionAsyncStorage","window","require","undefined","url","TemporaryRedirect","Error","getStore","isAction","push","replace","PermanentRedirect","HTTPAccessErrorStatus","HTTP_ERROR_FALLBACK_ERROR_CODE","getAccessFallbackErrorTypeByStatus","getAccessFallbackHTTPStatus","isHTTPAccessFallbackError","NOT_FOUND","FORBIDDEN","UNAUTHORIZED","ALLOWED_CODES","Set","Object","values","prefix","httpStatus","has","notFound","DIGEST","forbidden","process","env","__NEXT_EXPERIMENTAL_AUTH_INTERRUPTS","unauthorized","isHangingPromiseRejectionError","makeDevtoolsIOAwarePromise","makeHangingPromise","err","HANGING_PROMISE_REJECTION","HangingPromiseRejectionError","constructor","route","expression","abortListenersBySignal","WeakMap","signal","aborted","Promise","reject","hangingPromise","_","boundRejection","bind","currentListeners","get","listeners","set","addEventListener","i","length","once","catch","ignoreReject","underlying","resolve","setTimeout","isPostpone","REACT_POSTPONE_TYPE","Symbol","for","$$typeof","BailoutToCSRError","isBailoutToCSRError","BAILOUT_TO_CSR","reason","isNextRouterError","DynamicServerError","isDynamicServerError","DYNAMIC_ERROR_CODE","description","StaticGenBailoutError","isStaticGenBailoutError","NEXT_STATIC_GEN_BAILOUT","code","METADATA_BOUNDARY_NAME","OUTLET_BOUNDARY_NAME","ROOT_LAYOUT_BOUNDARY_NAME","VIEWPORT_BOUNDARY_NAME","atLeastOneTask","scheduleImmediate","scheduleOnNextTick","waitAtLeastOneReactRenderTask","cb","then","NEXT_RUNTIME","nextTick","setImmediate","r","InvariantError","message","options","endsWith","name","Postpone","PreludeState","abortAndThrowOnSynchronousRequestDataAccess","abortOnSynchronousPlatformIOAccess","accessedDynamicData","annotateDynamicAccess","consumeDynamicAccess","createDynamicTrackingState","createDynamicValidationState","createHangingInputAbortSignal","createRenderInBrowserAbortSignal","delayUntilRuntimeStage","formatDynamicAPIAccesses","getFirstDynamicReason","isDynamicPostpone","isPrerenderInterruptedError","logDisallowedDynamicError","markCurrentScopeAsDynamic","postponeWithTracking","throwIfDisallowedDynamic","throwToInterruptStaticGeneration","trackAllowedDynamicAccess","trackDynamicDataInDynamicRender","trackSynchronousPlatformIOAccessInDev","trackSynchronousRequestDataAccessInDev","useDynamicRouteParams","warnOnSyncDynamicError","hasPostpone","React","unstable_postpone","isDebugDynamicAccesses","dynamicAccesses","syncDynamicErrorWithStack","hasSuspenseAboveBody","hasDynamicMetadata","hasDynamicViewport","hasAllowedDynamic","dynamicErrors","trackingState","store","workUnitStore","forceDynamic","forceStatic","dynamicShouldError","dynamicTracking","revalidate","dynamicUsageDescription","dynamicUsageStack","stack","NODE_ENV","usedDynamic","prerenderStore","abortOnSynchronousDynamicDataAccess","createPrerenderInterruptedError","controller","abort","errorWithStack","requestStore","prerenderPhase","prerenderSignal","console","workUnitAsyncStorage","assertPostpone","createPostponeReason","isDynamicPostponeReason","includes","NEXT_PRERENDER_INTERRUPTED","serverDynamic","clientDynamic","filter","access","map","line","AbortController","cacheSignal","inputReady","runtimeStagePromise","getRuntimeStagePromise","workStore","workAsyncStorage","fallbackParams","fallbackRouteParams","size","use","renderSignal","hasSuspenseRegex","bodyAndImplicitTags","hasSuspenseBeforeRootLayoutWithoutBodyOrImplicitBodyRegex","RegExp","hasMetadataRegex","hasViewportRegex","hasOutletRegex","componentStack","dynamicValidation","test","createErrorWithComponentOrOwnerStack","ownerStack","captureOwnerStack","dev","hasReadableErrorStacks","prelude","result","unstable_rethrow","cause","ReadonlyURLSearchParams","unstable_isUnrecognizedActionError","ReadonlyURLSearchParamsError","URLSearchParams","append","delete","sort"],"mappings":"sHAAYA,qBAAAA,qCAAAA,KAAL,IAAKA,EAAAA,SAAAA,CAAAA,SAAAA,WAAAA,gHAAAA,mYCECC,mBAAmB,CAAA,kBAAnBA,GAEDC,YAAY,CAAA,kBAAZA,GAgBIC,eAAe,CAAA,kBAAfA,aApBmB,CAAA,CAAA,IAAA,GAEtBF,EAAsB,gBAE5B,IAAKC,EAAAA,SAAAA,CAAAA,GAAAA,WAAAA,6BAAAA,OAgBL,SAASC,EAAgBC,CAAc,EAC5C,GACE,AAAiB,iBAAVA,GACPA,AAAU,UACV,CAAE,CAAA,WAAYA,CAAAA,CAAI,EACM,UAAxB,AACA,OADOA,EAAMC,MAAM,CAEnB,OAAO,EAGT,IAAMA,EAASD,EAAMC,MAAM,CAACC,KAAK,CAAC,KAC5B,CAACC,EAAWC,EAAK,CAAGH,EACpBI,EAAcJ,EAAOK,KAAK,CAAC,EAAG,CAAC,GAAGC,IAAI,CAAC,KAGvCG,EAAaC,OAFJV,AAEWO,EAFJC,EAAE,CAAC,CAAC,IAI1B,OACEN,IAAcN,IACJ,YAATO,GAA+B,IAA/BA,KAAsBA,CAAS,CAAK,EACd,UAAvB,OAAOC,GACP,CAACO,MAAMF,IACPA,KAAcd,EAAAA,kBAElB,AAFoC,6XC3BpBiB,gBAAgB,CAAA,kBAAhBA,GA6EAC,8BAA8B,CAAA,kBAA9BA,GARAC,wBAAwB,CAAA,kBAAxBA,GARAC,uBAAuB,CAAA,kBAAvBA,GAhBAC,iBAAiB,CAAA,kBAAjBA,GAvBAC,QAAQ,CAAA,kBAARA,aArCmB,CAAA,CAAA,IAAA,OAM5B,CAAA,CAAA,IAAA,GAEDC,EAGEE,EAAQ,CAAA,CAAA,IAAA,GACRF,QAHN,OAAOC,GAGiB,CAGnB,EAFDE,KAJc,EAMJT,EACdU,CAAW,CACXnB,CAAkB,CAClBM,CAAqE,EAArEA,KAAAA,IAAAA,IAAAA,EAAiCd,EAAAA,kBAAkB,CAAC4B,iBAAAA,AAAiB,EAErE,IAAMxB,EAAQ,OAAA,cAA8B,CAA9B,AAAIyB,MAAM5B,EAAAA,mBAAmB,EAA7B,oBAAA,OAAA,mBAAA,gBAAA,CAA6B,GAE3C,OADAG,EAAMC,MAAM,CAAMJ,EAAAA,mBAAmB,CAAC,IAAGO,EAAK,IAAGmB,EAAI,IAAGb,EAAW,IAC5DV,CACT,CAcO,SAASkB,EAEdK,CAAW,CACXnB,CAAmB,IAFnB,EAISe,CAIT,OAJAf,OAAAA,GAAAA,EAASe,CAAAA,IAJkB,EAIlBA,CAAAA,EAAAA,AAA4B,GAA5BA,IAAAA,EAAAA,EAAoBO,QAAQ,EAAA,CAAA,CAAA,KAAA,EAA5BP,EAAgCQ,QAAQ,EAC7C7B,EAAAA,YAAY,CAAC8B,IAAI,CACjB9B,EAAAA,YAAY,CAAC+B,OAAAA,AAAO,EAElBhB,EAAiBU,EAAKnB,EAAMR,EAAAA,kBAAkB,CAAC4B,iBAAiB,CACxE,CAaO,SAASP,EAEdM,CAAW,CACXnB,CAAyC,EAEzC,MAFAA,KAFA,AAEAA,IAAAA,IAAAA,EAAqBN,EAAAA,YAAY,CAAC+B,EAFP,KAEc,AAAPA,EAE5BhB,EAAiBU,EAAKnB,EAAMR,EAAAA,kBAAkB,CAACkC,iBAAiB,CACxE,CAUO,SAASd,EAAwBhB,CAAc,QACpD,AAAKD,CAAAA,EAAAA,CAAD,CAACA,eAAAA,AAAe,EAACC,GAIdA,EAAMC,GAJgB,GAIV,CAACC,KAAK,CAAC,KAAKI,KAAK,CAAC,EAAG,CAAC,GAAGC,IAAI,CAAC,KAJb,IAKtC,CAEO,SAASQ,EAAyBf,CAAoB,EAC3D,GAAI,CAACD,CAAAA,EAAAA,EAAAA,eAAAA,AAAe,EAACC,GACnB,KAD2B,CACrB,OAAA,cAAiC,CAAjC,AAAIyB,MAAM,wBAAV,oBAAA,OAAA,kBAAA,iBAAA,CAAgC,GAGxC,OAAOzB,EAAMC,MAAM,CAACC,KAAK,CAAC,IAAK,EAAE,CAAC,EAAE,AACtC,CAEO,SAASY,EAA+Bd,CAAoB,EACjE,GAAI,CAACD,CAAAA,EAAAA,EAAAA,eAAAA,AAAe,EAACC,GACnB,KAD2B,CACrB,OAAA,cAAiC,CAAjC,AAAIyB,MAAM,wBAAV,oBAAA,OAAA,kBAAA,iBAAA,CAAgC,GAGxC,OAAOd,OAAOX,EAAMC,MAAM,CAACC,KAAK,CAAC,KAAKO,EAAE,CAAC,CAAC,GAC5C,6XClGasB,qBAAqB,CAAA,kBAArBA,GAQAC,8BAA8B,CAAA,kBAA9BA,GAuCGC,kCAAkC,CAAA,kBAAlCA,GAPAC,2BAA2B,CAAA,kBAA3BA,GAnBAC,yBAAyB,CAAA,kBAAzBA,KArBT,IAAMJ,EAAwB,CACnCK,UAAW,IACXC,UAAW,IACXC,aAAc,GAChB,EAEMC,EAAgB,IAAIC,IAAIC,OAAOC,MAAM,CAACX,IAE/BC,EAAiC,2BAavC,SAASG,EACdnC,CAAc,EAEd,GACmB,UAAjB,OAAOA,GACG,OAAVA,GACA,CAAE,CAAA,WAAYA,CAAAA,CAAI,EACM,UACxB,AADA,OAAOA,EAAMC,MAAM,CAEnB,OAAO,EAET,GAAM,CAAC0C,EAAQC,EAAW,CAAG5C,EAAMC,MAAM,CAACC,KAAK,CAAC,KAEhD,OACEyC,IAAWX,GACXO,EAAcM,GAAG,CAAClC,OAAOiC,GAE7B,CAEO,SAASV,EACdlC,CAA8B,EAG9B,OAAOW,OAAOiC,AADK5C,EAAMC,MAAM,CAACC,KAAK,CAAC,IAAI,CAAC,EAAE,CAE/C,CAEO,SAAS+B,EACdzB,CAAc,EAEd,OAAQA,GACN,KAAK,IACH,MAAO,cACT,MAAK,IACH,MAAO,WACT,MAAK,IACH,MAAO,WACT,SACE,MACJ,CACF,+TCtCgBsC,WAAAA,qCAAAA,KAFhB,IAAMC,EAAU,GAAEf,EAjBX,CAAA,CAAA,IAAA,GAiBWA,8BAA8B,CAAC,OAE1C,SAASc,IAEd,IAAM9C,EAAQ,OAAA,cAAiB,CAAbyB,AAAJ,MAAUsB,GAAV,oBAAA,OAAA,mBAAA,eAAA,EAAgB,EAG9B,OAFE/C,EAAkCC,MAAM,CAAG8C,EAEvC/C,CACR,sPCPO,SAASgD,IAEZ,MAAM,OAAA,cAEL,CAFK,AAAIvB,MACP,+GADG,oBAAA,OAAA,mBAAA,eAAA,EAEN,EAOJ,0EAXgBuB,YAAAA,qCAAAA,KAFEhB,EAhBX,CAAA,CAAA,IAAA,GAgBWA,8BAA8B,GAAC,mPCG1C,SAASoB,IAEZ,MAAM,OAAA,cAEL,CAFK,AAAI3B,MACP,+GADG,oBAAA,OAAA,mBAAA,gBAAA,CAEN,EAOJ,0EAXgB2B,eAAAA,qCAAAA,KAFEpB,EAjBX,CAAA,CAAA,IAAA,GAiBWA,8BAA8B,GAAC,mPCpB1C,SAASqB,EACdG,CAAY,QAEO,AAAnB,UAAI,OAAOA,GAA4B,OAARA,CAAgB,CAAE,CAAA,WAAYA,GAAE,AAIxDA,EAAIvD,CAJwD,KAIlD,GAAKwD,CACxB,wIARgBJ,8BAA8B,CAAA,kBAA9BA,GA2EAC,0BAA0B,CAAA,kBAA1BA,GAxCAC,kBAAkB,CAAA,kBAAlBA,KAzBhB,IAAME,EAA4B,2BAElC,OAAMC,UAAqCjC,MAGzCkC,YACkBC,CAAa,CACbC,CAAkB,CAClC,CACA,KAAK,CACH,CAAC,qBAAqB,EAAEA,EAAW,qGAAqG,EAAEA,EAAW,8KAA8K,EAAED,EAAM,EAAE,CAAC,EAAA,IAAA,CAJhUA,KAAAA,CAAAA,EAAAA,IAAAA,CACAC,UAAAA,CAAAA,EAAAA,IAAAA,CAJF5D,MAAAA,CAASwD,CASzB,CACF,CAGA,IAAMK,EAAyB,IAAIC,QAS5B,SAASR,EACdS,CAAmB,CACnBJ,CAAa,CACbC,CAAkB,EAElB,GAAIG,EAAOC,OAAO,CAChB,CADkB,MACXC,QAAQC,MAAM,CAAC,IAAIT,EAA6BE,EAAOC,GACzD,EACL,IAAMO,EAAiB,IAAIF,QAAW,CAACG,EAAGF,KACxC,IAAMG,EAAiBH,EAAOI,IAAI,CAChC,KACA,IAAIb,EAA6BE,EAAOC,IAEtCW,EAAmBV,EAAuBW,GAAG,CAACT,GAClD,GAAIQ,EACFA,EAAiB5C,IAAI,CAAC0C,OACjB,CACL,CAHoB,GAGdI,EAAY,CAACJ,EAAe,CAClCR,EAAuBa,GAAG,CAACX,EAAQU,GACnCV,EAAOY,gBAAgB,CACrB,QACA,KACE,IAAK,IAAIC,EAAI,EAAGA,EAAIH,EAAUI,MAAM,CAAED,IAAK,AACzCH,CAAS,CAACG,EAAE,EAEhB,EACA,CAAEE,MAAM,CAAK,EAEjB,CACF,GAKA,OADAX,EAAeY,KAAK,CAACC,GACdb,CACT,CACF,CAEA,SAASa,IAAgB,CAElB,SAAS3B,EAA8B4B,CAAa,EAGzD,OAAO,IAAIhB,QAAW,AAACiB,IAErBC,WAAW,KACTD,EAAQD,EACV,EAAG,EACL,EACF,yGClFgBG,aAAAA,qCAAAA,KAFhB,IAAMC,EAA8BC,OAAOC,GAAG,CAAC,kBAExC,SAASH,EAAWrF,CAAU,EACnC,MACE,AAAiB,iBAAVA,GACPA,AAAU,UACVA,EAAMyF,QAAQ,GAAKH,CAEvB,uKCJaI,iBAAiB,CAAA,kBAAjBA,GASGC,mBAAmB,CAAA,kBAAnBA,KAZhB,IAAMC,EAAiB,kCAGhB,OAAMF,UAA0BjE,MAGrCkC,YAA4BkC,CAAc,CAAE,CAC1C,KAAK,CAAE,sCAAqCA,GAAAA,IAAAA,CADlBA,MAAAA,CAAAA,EAAAA,IAAAA,CAFZ5F,MAAAA,CAAS2F,CAIzB,CACF,CAGO,SAASD,EAAoBnC,CAAY,QAC3B,AAAnB,UAAI,OAAOA,GAA4B,OAARA,CAAgB,CAAE,CAAA,WAAYA,GAAE,AAIxDA,EAAIvD,CAJwD,KAIlD,GAAK2F,CACxB,yGCRgBE,oBAAAA,qCAAAA,aART,CAAA,CAAA,IAAA,OAC6C,CAAA,CAAA,IAAA,GAO7C,SAASA,EACd9F,CAAc,EAEd,MAAOD,CAAAA,EAAAA,EAAAA,eAAAA,AAAe,EAACC,IAAUmC,CAAAA,EAAAA,EAAAA,yBAAAA,AAAyB,EAACnC,EAC7D,6XCba+F,kBAAkB,CAAA,kBAAlBA,GAQGC,oBAAoB,CAAA,kBAApBA,KAVhB,IAAMC,EAAqB,sBAEpB,OAAMF,UAA2BtE,MAGtCkC,YAA4BuC,CAAmB,CAAE,CAC/C,KAAK,CAAE,yBAAwBA,GAAAA,IAAAA,CADLA,WAAAA,CAAAA,EAAAA,IAAAA,CAF5BjG,MAAAA,CAAoCgG,CAIpC,CACF,CAEO,SAASD,EAAqBxC,CAAY,QAC/C,AACiB,UAAf,OAAOA,GACC,OAARA,CACA,CAAE,CAAA,WAAYA,GAAE,AACM,UAAtB,AACA,OADOA,EAAIvD,MAAM,EAKZuD,EAAIvD,MAAM,GAAKgG,CACxB,6XCnBaE,qBAAqB,CAAA,kBAArBA,GAIGC,uBAAuB,CAAA,kBAAvBA,KANhB,IAAMC,EAA0B,yBAEzB,OAAMF,UAA8B1E,wBAApC,KAAA,IAAA,GAAA,IAAA,CACW6E,IAAAA,CAAOD,EACzB,CAEO,SAASD,EACdpG,CAAc,QAEd,AAAqB,UAAjB,OAAOA,GAAgC,OAAVA,CAAkB,CAAE,CAAA,SAAUA,GAIxDA,EAAMsG,AAJsD,GAAI,CAItD,GAAKD,CACxB,6XCdaE,sBAAsB,CAAA,kBAAtBA,GAEAC,oBAAoB,CAAA,kBAApBA,GACAC,yBAAyB,CAAA,kBAAzBA,GAFAC,sBAAsB,CAAA,kBAAtBA,KADN,IAAMH,EAAyB,6BACzBG,EAAyB,6BACzBF,EAAuB,2BACvBC,EAA4B,qMCyCzBE,cAAc,CAAA,kBAAdA,GAbHC,iBAAiB,CAAA,kBAAjBA,GAtBAC,kBAAkB,CAAA,kBAAlBA,GAgDGC,6BAA6B,CAAA,kBAA7BA,KAhDT,IAAMD,EAAqB,AAACE,IAOjC7C,QAAQiB,OAAO,GAAG6B,IAAI,CAAC,KAInB/D,QAAQiE,QAAQ,CAACH,EAErB,EACF,EAQaH,EAAoB,AAACG,IAI9BI,aAAaJ,EAEjB,EAOO,SAASJ,IACd,OAAO,IAAIzC,QAAc,AAACiB,GAAYyB,EAAkBzB,GAC1D,CAWO,SAAS2B,IAIZ,OAAO,IAAI5C,QAAQ,AAACkD,GAAMD,aAAaC,GAE3C,yGC/DaC,iBAAAA,qCAAAA,IAAN,OAAMA,UAAuB5F,MAClCkC,YAAY2D,CAAe,CAAEC,CAAsB,CAAE,CACnD,KAAK,CACF,cAAaD,EAAAA,CAAQE,QAAQ,CAAC,KAAOF,EAAUA,EAAU,GAAA,CAAE,CAAE,6BAC9DC,GAEF,IAAI,CAACE,IAAI,CAAG,gBACd,CACF,gCCYC,OAAA,cAAA,CAAA,EAAA,aAAA,kGA6VeC,QAAQ,CAAA,kBAARA,GA4XJC,YAAY,CAAA,kBAAZA,GApbIC,2CAA2C,CAAA,kBAA3CA,GArCAC,kCAAkC,CAAA,kBAAlCA,GAuLAC,mBAAmB,CAAA,kBAAnBA,GAkIAC,qBAAqB,CAAA,kBAArBA,GA5HAC,oBAAoB,CAAA,kBAApBA,GArXAC,0BAA0B,CAAA,kBAA1BA,GAUAC,4BAA4B,CAAA,kBAA5BA,GAmbAC,6BAA6B,CAAA,kBAA7BA,GAXAC,gCAAgC,CAAA,kBAAhCA,GA8TAC,sBAAsB,CAAA,kBAAtBA,GAhXAC,wBAAwB,CAAA,kBAAxBA,GA5WAC,qBAAqB,CAAA,kBAArBA,GAsSAC,iBAAiB,CAAA,kBAAjBA,GAwCAC,2BAA2B,CAAA,kBAA3BA,GAqTAC,yBAAyB,CAAA,kBAAzBA,GAtnBAC,yBAAyB,CAAA,kBAAzBA,GA6PAC,oBAAoB,CAAA,kBAApBA,GA4YAC,wBAAwB,CAAA,kBAAxBA,GA/jBAC,gCAAgC,CAAA,kBAAhCA,GAueAC,yBAAyB,CAAA,kBAAzBA,GA9cAC,+BAA+B,CAAA,kBAA/BA,GAuEAC,qCAAqC,CAAA,kBAArCA,GAgEHC,sCAAsC,CAAA,kBAAtCA,GAqPGC,qBAAqB,CAAA,kBAArBA,GA9PAC,sBAAsB,CAAA,kBAAtBA,+DA9TE,CAAA,CAAA,IAAA,QAEiB,CAAA,CAAA,IAAA,OACG,CAAA,CAAA,IAAA,OAI/B,CAAA,CAAA,IAAA,OAC0B,CAAA,CAAA,IAAA,OACE,CAAA,CAAA,IAAA,OAM5B,CAAA,CAAA,IAAA,OAC4B,CAAA,CAAA,IAAA,OACD,CAAA,CAAA,IAAA,OACH,CAAA,CAAA,IAAA,GAEzBC,EAAiD,YAAnC,OAAOC,EAAAA,OAAK,CAACC,iBAAiB,CAwC3C,SAAStB,EACduB,CAA2C,EAE3C,MAAO,wBACLA,EACAC,gBAAiB,EAAE,CACnBC,0BAA2B,IAC7B,CACF,CAEO,SAASxB,IACd,MAAO,CACLyB,sBAAsB,EACtBC,oBAAoB,EACpBC,oBAAoB,EACpBC,mBAAmB,EACnBC,cAAe,EAAE,AACnB,CACF,CAEO,SAASxB,EACdyB,CAAmC,MAE5BA,EAAP,OAAuC,AAAvC,OAAOA,EAAAA,EAAcP,eAAe,CAAC,EAAA,AAAE,EAAA,KAAA,EAAhCO,EAAkCnG,UAAU,AACrD,CASO,SAAS8E,EACdsB,CAAgB,CAChBC,CAAuE,CACvErG,CAAkB,EAElB,GAAIqG,EACF,OAAQA,EAAc9J,IADL,AACS,EACxB,IAAK,QACL,IAAK,iBAML,IAAK,gBADH,MAUJ,CAMF,IAAI6J,EAAME,YAAY,GAAIF,EAAMG,WAAW,EAAE,AAE7C,GAAIH,EAAMI,kBAAkB,CAC1B,CAD4B,KACtB,OAAA,cAEL,CAFK,IAAIlE,EAAAA,qBAAqB,CAC7B,CAAC,MAAM,EAAE8D,EAAMrG,KAAK,CAAC,8EAA8E,EAAEC,EAAW,4HAA4H,CAAC,EADzO,oBAAA,OAAA,mBAAA,gBAAA,CAEN,GAGF,GAAIqG,EACF,OAAQA,EAAc9J,IADL,AACS,EACxB,IAAK,gBACH,OAAOwI,EACLqB,EAAMrG,KAAK,CACXC,EACAqG,EAAcI,eAAe,CAEjC,KAAK,mBACHJ,EAAcK,UAAU,CAAG,EAI3B,IAAM/G,EAAM,OAAA,cAEX,CAFW,IAAIuC,EAAAA,kBAAkB,CAChC,CAAC,MAAM,EAAEkE,EAAMrG,KAAK,CAAC,iDAAiD,EAAEC,EAAW,2EAA2E,CAAC,EADrJ,oBAAA,OAAA,mBAAA,gBAAA,CAEZ,EAIA,OAHAoG,EAAMO,uBAAuB,CAAG3G,EAChCoG,EAAMQ,iBAAiB,CAAGjH,EAAIkH,KAAK,CAE7BlH,CAQV,EAEJ,CAQO,SAASsF,EACdjF,CAAkB,CAClBoG,CAAgB,CAChBY,CAAoC,EAGpC,IAAMrH,EAAM,OAAA,cAEX,CAFW,IAAIuC,EAAAA,kBAAkB,CAChC,CAAC,MAAM,EAAEkE,EAAMrG,KAAK,CAAC,mDAAmD,EAAEC,EAAW,6EAA6E,CAAC,EADzJ,oBAAA,OAAA,kBAAA,iBAAA,CAEZ,EAOA,OALAgH,EAAeN,UAAU,CAAG,EAE5BN,EAAMO,uBAAuB,CAAG3G,EAChCoG,EAAMQ,iBAAiB,CAAGjH,EAAIkH,KAAK,CAE7BlH,CACR,CASO,SAASwF,EAAgCkB,CAA4B,EAC1E,OAAQA,EAAc9J,IAAI,EACxB,IAAK,QACL,IAAK,iBAML,IAAK,gBADH,MAiBJ,CACF,CAEA,SAAS0K,EACPlH,CAAa,CACbC,CAAkB,CAClBgH,CAAoC,EAIpC,IAAM7K,EAAQ+K,EAFC,CAAC,MAAM,EAAEnH,EAAM,mBAEgBiC,8CAFiD,EAAEhC,EAAW,CAAC,CAAC,EAI9GgH,EAAeG,UAAU,CAACC,KAAK,CAACjL,GAEhC,IAAMsK,EAAkBO,EAAeP,eAAe,CAClDA,GACFA,EAAgBb,YADG,GACY,CAAC7H,IAAI,CAAC,CAGnC8I,MAAOJ,EAAgBd,sBAAsB,CACzC,AAAI/H,QAAQiJ,KAAK,CACjBpJ,kBACJuC,CACF,EAEJ,CAEO,SAASgE,EACdjE,CAAa,CACbC,CAAkB,CAClBqH,CAAqB,CACrBL,CAAoC,EAEpC,IAAMP,EAAkBO,EAAeP,eAAe,CACtDQ,EAAoClH,EAAOC,EAAYgH,GAKnDP,GACgD,MAAM,CAApDA,EAAgBZ,KADD,oBAC0B,EAC3CY,GAAgBZ,yBAAyB,CAAGwB,CAAAA,CAGlD,CAEO,SAASjC,EACdkC,CAA0B,EAI1BA,EAAaC,cAAc,EAAG,CAChC,CAYO,SAASxD,EACdhE,CAAa,CACbC,CAAkB,CAClBqH,CAAqB,CACrBL,CAAoC,EAGpC,IAAgC,IAA5BQ,AADoBR,EAAeG,UAAU,CAAChH,MAAM,CACpCC,OAAO,CAAY,CAMrC6G,EAAoClH,EAAOC,EAAYgH,GAKvD,IAAMP,EAAkBO,EAAeP,eAAe,CAClDA,GACgD,MAAM,CAApDA,EAAgBZ,KADD,oBAC0B,GAC3CY,EAAgBZ,yBAAyB,CAAGwB,CAAAA,CAGlD,CACA,MAAMH,EACJ,CAAC,MAAM,EAAEnH,EAAM,iEAAiE,EAAEC,EAAW,CAAC,CAAC,CAEnG,CASO,SAASuF,EAAuBkB,CAAqC,EACtEA,EAAgBZ,yBAAyB,EAG3C4B,AAH6C,QAGrCtL,KAAK,CAACsK,EAAgBZ,yBAAyB,CAE3D,CAGO,IAAMR,EACXD,EASK,SAASvB,EAAS,QAAE7B,CAAM,OAAEjC,CAAK,CAAiB,EACvD,IAAMiH,EAAiBU,EAAAA,oBAAoB,CAAC7J,QAAQ,GAKpDkH,EAAqBhF,EAAOiC,EAH1BgF,GAA0C,GAGRP,eAHhBO,EAAezK,IAAI,CACjCyK,EAAeP,eAAe,CAC9B,KAER,CAEO,SAAS1B,EACdhF,CAAa,CACbC,CAAkB,CAClByG,CAA4C,EAE5CkB,CAmIF,SAASA,EACP,GAAI,CAACnC,EACH,MAAM,KADU,EACV,cAEL,CAFK,AAAI5H,MACR,CAAC,gIAAgI,CAAC,EAD9H,oBAAA,OAAA,kBAAA,iBAAA,CAEN,GAEJ,IAxIM6I,GACFA,EAAgBb,YADG,GACY,CAAC7H,IAAI,CAAC,CAGnC8I,MAAOJ,EAAgBd,sBAAsB,CACzC,AAAI/H,QAAQiJ,KAAK,MACjBpJ,aACJuC,CACF,GAGFyF,EAAAA,OAAK,CAACC,iBAAiB,CAACkC,EAAqB7H,EAAOC,GACtD,CAEA,SAAS4H,EAAqB7H,CAAa,CAAEC,CAAkB,EAC7D,MACE,CAAC,MAAM,EAAED,EAAM,iEAAiE,EAAEC,EAAW,kKAAE,CAAC,AAIpG,CAEO,EALH,CAAC,MAKW2E,EAAkBhF,CAAY,QAC5C,AACiB,UAAf,OAAOA,GACC,OAARA,GACgC,AAAhC,UACA,OADQA,EAAY8D,OAAO,EAEpBoE,EAAyBlI,EAAY8D,AAXoC,CAAC,GACjF,CAAC,EAUkD,CAGvD,CAEA,SAASoE,EAAwB7F,CAAc,EAC7C,OACEA,EAAO8F,QAAQ,CACb,6CAlBgF,CAAC,sBAoBnF9F,EAAO8F,QAAQ,CACb,gEAGN,CAEA,GAAID,AAAgE,OAAxCD,AAA+C,EAA1B,MAAO,QACtD,MAAM,OAAA,cAEL,CAFK,AAAIhK,MACR,0FADI,oBAAA,OAAA,mBAAA,gBAAA,CAEN,GAGF,IAAMmK,EAA6B,6BAEnC,SAASb,EAAgCzD,CAAe,EACtD,IAAMtH,EAAQ,OAAA,cAAkB,CAAlB,AAAIyB,MAAM6F,GAAV,oBAAA,OAAA,mBAAA,eAAA,EAAiB,GAE/B,OADEtH,EAAcC,MAAM,CAAG2L,EAClB5L,CACT,CAMO,SAASyI,EACdzI,CAAc,EAEd,MACmB,UAAjB,OAAOA,GACPA,AAAU,UACTA,EAAcC,MAAM,GAAK2L,GAC1B,SAAU5L,GACV,YAAaA,GACbA,aAAiByB,KAErB,CAEO,SAASqG,EACd2B,CAAqC,EAErC,OAAOA,EAAgB3E,MAAM,CAAG,CAClC,CAEO,SAASkD,EACd6D,CAAmC,CACnCC,CAAmC,EAMnC,OADAD,EAAcpC,eAAe,CAAC7H,IAAI,IAAIkK,EAAcrC,eAAe,EAC5DoC,EAAcpC,eAAe,AACtC,CAEO,SAASnB,EACdmB,CAAqC,EAErC,OAAOA,EACJsC,MAAM,CACL,AAACC,GACyB,UAAxB,OAAOA,EAAOtB,KAAK,EAAiBsB,EAAOtB,KAAK,CAAC5F,MAAM,CAAG,GAE7DmH,GAAG,CAAC,CAAC,YAAEpI,CAAU,OAAE6G,CAAK,CAAE,IACzBA,EAAQA,EACLxK,KAAK,CAAC,MACP,AAGCI,KAAK,CAAC,GACNyL,MAAM,CAAEG,AAAD,KAEFA,EAAKP,QAAQ,CAAC,uBAAuB,AAKrCO,EAAKP,QAAQ,CAAC,MAXoD,aAWjC,AAKjCO,EAAKP,QAAQ,CAAC,YAAY,CAM/BpL,IAAI,CAAC,MACD,CAAC,0BAA0B,EAAEsD,EAAW;AAAG,EAAE6G,EAAAA,CAAO,EAEjE,CAcO,SAAStC,IACd,IAAM4C,EAAa,IAAImB,gBAEvB,OADAnB,EAAWC,KAAK,CAAC,OAAA,cAA0C,CAA1C,IAAIvF,EAAAA,iBAAiB,CAAC,qBAAtB,oBAAA,OAAA,mBAAA,gBAAA,CAAyC,IACnDsF,EAAWhH,MAAM,AAC1B,CAOO,SAASmE,EACd+B,CAA4B,EAE5B,OAAQA,EAAc9J,IAAI,EACxB,IAAK,YACL,IAAK,oBACH,IAAM4K,EAAa,IAAImB,gBAEvB,GAAIjC,EAAckC,WAAW,CAI3BlC,CAJ6B,CAIfkC,WAAW,CAACC,UAAU,GAAGrF,IAAI,CAAC,KAC1CgE,EAAWC,KAAK,EAClB,OACK,CAaL,IAAMqB,EAAsBC,CAAAA,EAAAA,EAAAA,sBAAAA,AAAsB,EAACrC,GAC/CoC,EACFA,EAAoBtF,IAAI,CAAC,IACvBH,CAAAA,EAAAA,EAAAA,GAFqB,eAErBA,AAAkB,EAAC,IAAMmE,EAAWC,KAAK,KAG3CpE,CAAAA,EAAAA,EAAAA,kBAAkB,AAAlBA,EAAmB,IAAMmE,EAAWC,KAAK,GAE7C,CAEA,OAAOD,EAAWhH,MAAM,AAC1B,KAAK,mBACL,IAAK,gBACL,IAAK,mBACL,IAAK,UACL,IAAK,QACL,IAAK,gBACL,IAAK,iBACH,MAGJ,CAHW1C,AAIb,CAEO,SAASyG,EACdlE,CAAkB,CAClBgH,CAAoC,EAEpC,IAAMP,EAAkBO,EAAeP,eAAe,CAClDA,GACFA,EAAgBb,YADG,GACY,CAAC7H,IAAI,CAAC,CACnC8I,MAAOJ,EAAgBd,sBAAsB,CACzC,AAAI/H,QAAQiJ,KAAK,MACjBpJ,aACJuC,CACF,EAEJ,CAEO,SAASsF,EAAsBtF,CAAkB,EACtD,IAAM2I,EAAYC,EAAAA,gBAAgB,CAAC/K,QAAQ,GACrCwI,EAAgBqB,EAAAA,oBAAoB,CAAC7J,QAAQ,GACnD,GAAI8K,GAAatC,EACf,OAAQA,EAAc9J,IADQ,AACJ,EACxB,IAAK,mBACL,IAAK,YAAa,CAChB,IAAMsM,EAAiBxC,EAAcyC,mBAAmB,CACpDD,GAAkBA,EAAeE,IAAI,CAAG,GAI1CtD,AAJ6C,EAI7CA,OAAK,CAACuD,GAAG,CACPtJ,CAAAA,EAAAA,EAAAA,kBAAAA,AAAkB,EAChB2G,EAAc4C,YAAY,CAC1BN,EAAU5I,KAAK,CACfC,IAIN,KACF,CACA,IAAK,gBAAiB,CACpB,IAAM6I,EAAiBxC,EAAcyC,mBAAmB,CACxD,GAAID,GAAkBA,EAAeE,IAAI,CAAG,EAC1C,CAD6C,MACtChE,EACL4D,EAAU5I,KAAK,CACfC,EACAqG,EAAcI,eAAe,EAGjC,KACF,CACA,IAAK,oBACH,MAAM,OAAA,cAEL,CAFK,IAAIjD,EAAAA,cAAc,CACtB,CAAC,EAAE,EAAExD,EAAW,uEAAuE,EAAEA,EAAW,+EAA+E,CAAC,EADhL,oBAAA,OAAA,mBAAA,gBAAA,CAEN,EACF,KAAK,QACL,IAAK,gBACH,MAAM,OAAA,cAEL,CAFK,IAAIwD,EAAAA,cAAc,CACtB,CAAC,EAAE,EAAExD,EAAW,iEAAiE,EAAEA,EAAW,+EAA+E,CAAC,EAD1K,oBAAA,OAAA,mBAAA,eAAA,EAEN,EAOJ,CAEJ,CAEA,IAAMkJ,EAAmB,mCAkBnBE,EAA4D,AAAIC,OACpE,CAAC,uDAAuD,EAAEF,oBAAoB,yCAAyC,+DAAEvG,EAAAA,yBAAyB,CAAC,cAAc,CAAC,EAG9J0G,EAAmB,AAAID,OAC3B,CAAC,UAAU,EAAE3G,EAAAA,sBAAsB,CAAC,QAAQ,CAAC,EAEzC6G,EAAmB,AAAIF,OAC3B,CAAC,UAAU,EAAExG,EAAAA,sBAAsB,CAAC,QAAQ,CAAC,EAEzC2G,EAAiB,AAAIH,OAAO,CAAC,UAAU,EAAE1G,EAAAA,oBAAoB,CAAC,QAAQ,CAAC,EAEtE,SAASuC,EACdyD,CAAoB,CACpBc,CAAsB,CACtBC,CAAyC,CACzCzB,CAAmC,EAEnC,IAAIuB,EAAeG,IAAI,CAACF,IAGjB,GAAIH,EAAiBK,IAAI,CAACF,GAHQ,AAGS,CAChDC,EAAkB3D,kBAAkB,EAAG,EACvC,MACF,CAAO,GAAIwD,EAAiBI,IAAI,CAACF,GAAiB,CAChDC,EAAkB1D,kBAAkB,EAAG,EACvC,MACF,CAAO,GACLoD,EAA0DO,IAAI,CAC5DF,GAEF,CAIAC,EAAkBzD,iBAAiB,CAAG,GACtCyD,EAAkB5D,oBAAoB,EAAG,EACzC,MACF,MAAO,GAAIoD,EAAiBS,IAAI,CAACF,GAAiB,CAGhDC,EAAkBzD,iBAAiB,EAAG,EACtC,MACF,KAMO,CANA,GAAIgC,EAAcpC,yBAAyB,CAAE,YAElD6D,EAAkBxD,aAAa,CAACnI,IAAI,CAClCkK,EAAcpC,yBAAyB,EAKzC,IAAM1J,EAAQyN,AAUlB,SAASA,AACPnG,CAAe,CACfgG,CAAsB,EAOtB,IAAMtN,EAAQ,OAAA,UAnBuCsH,IAmBrB,CAAlB,AAAI7F,MAAM6F,GAAV,oBAAA,OAAA,mBAAA,gBAAA,CAAiB,GAE/B,OADAtH,EAAM0K,KAAK,CAAG1K,EAAMyH,IAAI,CAAG,KAAOH,EAAyBgG,EACpDtN,CACT,EAvBoB,CAAC,EAqB0B0N,CAAAA,IArBnB,CAqB8C,CArB5ClB,EAAU5I,KAAK,CAAC,2NAA2N,CAAC,CAC1M0J,eAC5DC,EAAkBxD,aAAa,CAACnI,IAAI,CAAC5B,EAEvC,EACF,CAoBO,IAAK2H,EAAAA,SAAAA,CAAAA,GAAAA,WAAAA,4DAAAA,OAML,SAASe,EACd8D,CAAoB,CACpBxM,CAAY,EAEZsL,QAAQtL,KAAK,CAACA,GAETwM,EAAUoB,GAAG,EAAE,CACdpB,EAAUqB,sBAAsB,CAClCvC,CADoC,OAC5BtL,KAAK,CACX,CAAC,iIAAiI,EAAEwM,EAAU5I,KAAK,CAAC,2CAA2C,CAAC,EAGlM0H,QAAQtL,KAAK,CAAC,CAAC;0EACqD,EAAEwM,EAAU5I,KAAK,CAAC;qGACS,CAAC,EAGtG,CAEO,SAASiF,EACd2D,CAAoB,CACpBsB,CAAqB,CACrBP,CAAyC,CACzC1B,CAAmC,EAEnC,GAAIiC,IAAAA,EAA+B,CACjC,GAAIP,EAAkB5D,oBAAoB,CAIxC,CAJ0C,MAO5C,GAAIkC,EAAcnC,yBAAyB,CAQzC,CAR2C,KAI3ChB,EACE8D,EACAX,EAAcnC,yBAAyB,EAEnC,IAAIvD,EAAAA,qBAAqB,CAMjC,IAAM4D,EAAgBwD,EAAkBxD,aAAa,CACrD,GAAIA,EAAcjF,MAAM,CAAG,EAAG,CAC5B,IAAK,IAAID,EAAI,EAAGA,EAAIkF,EAAcjF,MAAM,CAAED,IAAK,AAC7C6D,EAA0B8D,EAAWzC,CAAa,CAAClF,EAAE,CAGvD,OAAM,IAAIsB,EAAAA,qBAAqB,AACjC,CAMA,GAAIoH,EAAkB1D,kBAAkB,CAItC,CAJwC,KACxCyB,QAAQtL,KAAK,CACX,CAAC,OAAO,EAAEwM,EAAU5I,KAAK,CAAC,8QAA8Q,CAAC,EAErS,IAAIuC,EAAAA,qBAAqB,CAGjC,GAAI2H,GAAgC,CAAhCA,EAOF,MAHAxC,QAAQtL,KAAK,CACX,CAAC,OAAO,EAAEwM,EAAU5I,KAAK,CAAC,wGAAwG,CAAC,EAE/H,IAAIuC,EAAAA,qBAAqB,AAEnC,MACE,CADK,GAEqC,IAAxCoH,EAAkBzD,iBAAiB,EACnCyD,EAAkB3D,kBAAkB,CAKpC,CAJA,KACA0B,QAAQtL,KAAK,CACX,CAAC,OAAO,EAAEwM,EAAU5I,KAAK,CAAC,8PAA8P,CAAC,EAErR,IAAIuC,EAAAA,qBAAqB,AAGrC,CAEO,SAASkC,EACdwC,CAA2C,CAC3CkD,CAAkB,SAEdlD,AAAJ,EAAmByB,mBAAmB,CAC7BzB,CAD+B,CAChByB,mBAAmB,CAACtF,IAAI,CAAC,IAAM+G,GAEhDA,CACT,yGC70BgBC,mBAAAA,qCAAAA,AAAT,SAASA,EAAiBhO,CAAc,EAC7C,GACE8F,CAAAA,EAAAA,EAAAA,iBAAiB,AAAjBA,EAAkB9F,IAClB2F,CAAAA,EAAAA,EAAAA,mBAAAA,AAAmB,EAAC3F,IACpBgG,CAAAA,EAAAA,EAAAA,oBAAAA,AAAoB,EAAChG,IACrBwI,CAAAA,EAAAA,EAAAA,iBAAAA,AAAiB,EAACxI,IAClBqF,CAAAA,EAAAA,EAAAA,UAAAA,AAAU,EAACrF,IACXqD,CAAAA,EAAAA,EAAAA,8BAAAA,AAA8B,EAACrD,GAE/B,KADA,CACMA,EAGJA,aAAiByB,OAAS,UAAWzB,GACvCgO,EAAiBhO,EAD6B,AACvBiO,KAAK,CAEhC,aAtB+C,CAAA,CAAA,IAAA,OACpB,CAAA,CAAA,IAAA,OACS,CAAA,CAAA,IAAA,OACF,CAAA,CAAA,IAAA,OACA,CAAA,CAAA,IAAA,OACG,CAAA,CAAA,IAAA,uPCCpC,OAAA,cAAA,CAAA,EAAA,aAAA,oCACYD,mBAAAA,qCAAAA,KAAN,IAAMA,EAGL3M,EAAQ,CAAA,CAAA,IAAA,GACR2M,MAHN,OAAO5M,GAGe,GAEhBC,KALY,GAKJ,8BACR2M,gBAAgB,6LCdV,OAAA,cAAA,CAAA,EAAA,aAAA,kGAwCLE,uBAAuB,CAAA,kBAAvBA,GALApO,YAAY,CAAA,kBAAZA,EAAAA,YAAY,EAEZkD,SAAS,CAAA,kBAATA,EAAAA,SAAS,EADTF,QAAQ,CAAA,kBAARA,EAAAA,QAAQ,EAFE7B,iBAAiB,CAAA,kBAAjBA,EAAAA,iBAAiB,EAA3BC,QAAQ,CAAA,kBAARA,EAAAA,QAAQ,EAIRkC,YAAY,CAAA,kBAAZA,EAAAA,YAAY,EAVL+K,kCAAkC,CAAA,kBAAlCA,GAWPH,gBAAgB,CAAA,kBAAhBA,EAAAA,gBAAgB,YALmB,CAAA,CAAA,IAAA,OACf,CAAA,CAAA,IAAA,OACJ,CAAA,CAAA,IAAA,OACC,CAAA,CAAA,IAAA,OACG,CAAA,CAAA,IAAA,OACI,CAAA,CAAA,IAAA,CAtCjC,OAAMI,UAAqC3M,MACzCkC,aAAc,CACZ,KAAK,CACH,0JAEJ,CACF,CAEA,MAAMuK,UAAgCG,gBAEpCC,QAAS,CACP,MAAM,IAAIF,CACZ,CAEAG,QAAS,CACP,MAAM,IAAIH,CACZ,CAEAzJ,KAAM,CACJ,MAAM,IAAIyJ,CACZ,CAEAI,MAAO,CACL,MAAM,IAAIJ,CACZ,CACF,CAEO,SAASD,IACd,MAAM,OAAA,cAEL,CAFK,AAAI1M,MACR,wEADI,oBAAA,OAAA,mBAAA,gBAAA,CAEN,EACF,mQChCA,EAAA,CAAA,CAAA,QAEA,mDAAmD,OCcnC,EACd,CAAA,ECjBY,ADkBc,AAC1B,MACiB,SAAf,EAAK,KAAA,EACL,GCrBwD,MDqB9C,GACW,UAArB,EAAqB,KAAd,EAAK,IAAA,GACX,OAAO,EAAK,KAAA,CAAU,KACpB,MAAM,OAAA,CAAQ,EAAK,KAAK,GAAK,EAAK,KAAA,CAAM,KAAA,CAAO,AAAD,GAA0B,UAAhB,OAAO,EAAiB,CAAA,UAUvE,EACd,CAAA,EAC2B,MAIH,UAAtB,EAAsB,KAAf,EAAK,KAAA,EAEM,MAAlB,EAAA,KAAA,CAAW,CAAC,CAAA,GAEX,CAAA,CAAE,aAAA,CAAA,CAAc,EACf,CAAC,EAAK,QAAA,EAAA,MACC,OAAA,CAAQ,EAAK,QAAQ,GAE1B,EAF0B,AAE1B,QAAA,CAAc,KAAA,CAAM,AAAC,GAAQ,AAAoB,iBAAb,EAAI,IAAA,CAAS,CAAQ,EAE7D,aAAc,GAAA,MACR,OAAA,CAAQ,EAAK,CALW,OAKH,GAE3B,EAF2B,AAEtB,QAAA,CAAS,KAAA,CAAM,AAAC,GAAiB,UAAP,OAAO,GAAsB,UAAW,cAWzE,CAAA,EACoC,OAElC,EAAoB,IACpB,CADyB,YACX,GACY,UAA1B,EAA0B,KAAnB,EAAM,QAAA,GACZ,OAAO,EAAM,KAAA,CAAU,KAAe,AAAuB,iBAAhB,EAAM,KAAA,AAAU,CAAA,UAWlD,EACd,CAAA,QAEuB,UAAhB,EAAM,KAAA,CAUR,SAAS,EACd,CAAA,EACuC,MACjB,UAAf,EAAK,KAAA,UAUE,EACd,CAAA,EACyB,MACH,UAAf,EAAK,KAAA,OM1GU,UAAW,KAAM,OAAQ,YAAa,iBAAgB,UAuC9D,EACd,CAAA,CACA,CAAA,CACA,CAAA,EACU,IACL,EAAA,IAA4B,CAAC,EAAK,KAAA,GAIlC,EAAK,KAAA,CAAM,MAAA,CAJuB,MAC9B,CAAA,CAAA,KAQH,EAAQ,EAAK,KAAA,CAAA,KAAA,GACb,EAAqC,CAAA,WACrC,OAAA,CAAQ,MACD,EAAI,CAAI,UAEV,EAAe,EAAQ,EAAG,EAAe,EAAc,MAAA,CAAQ,IAAgB,KAChF,EAAU,CAAA,CAAc,EAAY,IAGxC,GACA,EAAA,IAAA,MACM,OAAA,CAAQ,EAAQ,KAAK,GACK,AAAhC,CAAgC,MAAxB,KAAA,CAAM,OAAA,CAAQ,GAAU,CAAN,AAAM,CAAA,EAAA,aAMpC,IAGK,EAAM,IAAA,CAAK,CAAC,EAAO,IAAU,CAGtC,SAAS,AACP,CAAA,CACA,CAAA,CACA,CAAA,EACQ,IACF,EAAc,CAAA,CAAW,EAAK,CAC9B,EAAc,AADgB,CAChB,CAAW,EAAK,GAAA,CAEhC,IAAgB,EAAA,OACX,EAAc,MAGjB,EAAY,EAAgB,OAAA,CAAQ,GACpC,EADyC,AAC7B,EAAgB,OAAA,CAAQ,KAAK,KAG3C,IAAc,EACT,EAAY,EAId,EAAM,aAAA,CAAc,KAAK,AAxBc,EAAY,EAAO,KAAK,CAAC,OKsFhE,EACP,CAAA,CACA,CAAA,CACA,CAAA,QAEO,CACL,MAAO,QACP,KAAM,CAAA,EAAG,EAAM,IAAA,EAAQ,CAAA,EAAG,EAAK,CAAE,CAAA,CAAF,MAAE,CAAA,MACjC,EACA,MAAO,EAAM,KAAA,EAAS,aACN,QAAA,CAChB,SAAU,CAAC,EAAK,WAIX,EACP,CAAA,CACA,CAAA,EACqC,IAC/B,EAAQ,EAAS,KAAA,EAAS,EAC1B,EAAQ,EAAS,QAAA,EAAY,SAC7B,EAA4C,UAA7B,OAAO,EAAS,QAAA,IAEnC,EAA0B,IAAA,CACzB,EAAS,KAAA,EAAS,CAAA,IAAO,GAC1B,GAAA,CACC,EAAS,QAAA,EAAY,QAAA,CAAA,GAAc,EAAA,OAE7B,KAGL,CAAA,CAAE,aAAc,CAAA,CAAA,CAAA,OAIpB,IAAM,EAAA,EAAA,QAAA,CAAyB,EAAS,ED0DL,MC1DK,CAAS,MAAA,CAAS,CAAC,CAAA,QACpD,GAAQ,CAAC,EAAmB,GAAQ,CAAJ,CAAqB,EAAM,GAAY,KAAA,AAAJ,mBTtMrE,ICWD,EAAiB,ADXV,CCWW,eAAgB,WAAA,ECblC,CDeO,CCfO,CAAC,EAAc,IACjC,CAAA,8BAAA,EAAiC,EAAI,EAAA,+CAAA,EAAoD,EAAI,EAAA,KAAA,CAAA,CAElF,EAAqB,AAAC,GACjC,EAAY,CAAA,YAAA,EAAe,EAAQ,CAAA,CAAA,CAAK,GAAL,IAAY,EAc1C,CAZM,QAYG,EAAa,CAAA,EAAuB,AAClD,QAAQ,AAbwB,CAAC,GAazB,CAAK,EACf,CCjBA,IDgBsB,AChBhB,EAAS,CAAC,QAAS,MAAA,EE2BZ,CFzBA,CEyBiD,CAC5D,MAAO,CAAA,EAEP,MAdE,CACF,AAaO,OAbC,CAAC,CDiCA,SCjCC,CAAA,CAAA,GAAc,CAAA,EAAA,EAAA,GAAA,EAAC,GAAD,CAAC,UAAG,CAAA,CAAS,EACrC,WAAY,CAAC,UAAC,CAAA,CAAA,GAAc,ADoCH,CAAA,EAAA,EAAA,GAAA,ECpCI,aAAA,UAAY,CAAA,CAAS,EAClD,GAAI,CAAC,UAAC,CAAA,CAAA,GAAc,ADqCI,CAAA,EAAA,EAAA,GAAA,CAAA,CCrCH,KAAA,UAAI,CAAA,CAAS,EAClC,GAAI,CAAC,UAAC,CAAA,CAAA,GAAc,CAAA,EAAA,EAAA,GAAA,EAAC,GAAD,EAAC,CAAI,UAAA,CAAS,EAClC,GAAI,CAAC,CAAC,UAAA,CAAA,GAAc,CAAA,EAAA,EAAA,GAAA,EAAC,KAAA,UAAI,IACzB,GAAI,CAAC,UAAC,CAAA,CAAA,GAAc,CAAA,EAAA,EAAA,GAAA,EAAC,IDsCyB,CAAA,UCtCrB,CAAA,CAAS,EAClC,GAAI,CAAC,UAAC,CAAA,CAAA,GAAc,CAAA,EAAA,EAAA,GAAA,EAAC,GAAD,ADyCY,EAAA,UCzCP,IACzB,GAAI,CAAC,UAAC,CAAA,CAAA,GAAc,CAAA,EAAA,EAAA,GAAA,EAAC,GAAD,EAAC,UAAI,CAAA,CAAS,CACpC,EAME,CD0CC,KH7DgF,CACjF,AIkBO,GJlBD,CAAC,UAAC,CAAA,CAAA,GAAc,CAAA,EAAA,EAAA,GAAA,EAAC,GAAD,EAAC,UAAI,CAAA,CAAS,EACpC,OAAU,CAAC,UAAC,CAAA,CAAA,GAAc,CAAA,EAAA,EAAA,GAAA,EAAC,SAAA,UAAQ,IACnC,KAAQ,CAAC,UAAC,CAAA,CAAA,GAAc,CAAA,EAAA,EAAA,GAAA,EAAC,OAAA,UAAM,IAC/B,AH6B+D,UG7BlD,CAAC,UAAC,CAAA,CAAA,GAAc,CAAA,EAAA,EAAA,GAAA,EAAC,OAAA,CAAK,MAAO,EAAiB,UAAA,CAAS,EACpE,iBAAkB,CAAC,CAAC,UAAA,CAAA,GAAc,CAAA,EAAA,EAAA,GAAA,EAAC,MAAA,UAAK,IACxC,KAZmD,CAAC,UAAC,CAAA,OAAU,CAAA,CAAA,GAC/D,CAAA,EAAA,EAAA,GAAA,EAAC,GAAD,CAAC,CAAE,KAAM,MAAA,EAAA,KAAA,EAAA,EAAO,IAAA,UAAO,CAAA,CAAS,GIyBhC,KLjCkF,CAClF,AKgCM,OLhCE,CAAC,UAAC,CAAA,CAAA,GAAc,CAAA,EAAA,EAAA,GAAA,EAAC,GAAD,EAAC,UAAI,CAAA,CAAS,EACtC,OAAQ,CAAC,UAAC,CAAA,CAAA,GAAc,CAAA,EAAA,EAAA,GAAA,EAAC,GAAD,EAAC,UAAI,CAAA,CAAS,GKgCtC,CL7BW,QAAiD,CAAC,AK6BnD,UL7BoD,CAAA,CAAA,GAAc,CAAA,EAAA,EAAA,GAAA,EAAC,GAAD,EAAC,UAAI,CAAA,CAAS,GCEtF,SIK0B,CAuBnB,GAvBsC,CAAA,EAAA,EAAA,GAAA,EAAC,GAAD,EAAC,CAAA,CAAG,GAE1C,WFXiE,CEkC/D,AFlCgE,OAC7E,CAAA,UACA,CAAA,CAAA,IAEA,IAAM,EAAU,EAAmB,EAAM,KAAK,EAC9C,OAAO,EAAW,CAAA,EAAA,EAAA,GAAA,CAAA,CAAC,OAAA,CAAK,IAAN,EAAa,EAAS,SAAA,CAAA,CAAQ,EAAU,CAAA,CAAA,CAAA,EAAA,GAAA,EAAC,KAAD,CAAC,CAAI,MAAO,EAAS,SAAA,CAAA,CAAQ,GE8BvF,CF3BW,WAAiE,CE2B/D,AF3BgE,UAC7E,CAAA,UACA,CAAA,CACF,GACS,CAAA,EAAA,EAAA,GAAA,EAAC,GAAD,IAAC,CAAK,UAAW,CAAA,mBAAA,EAAsB,ECb8B,CAAA,CDajB,IAAL,MAAK,CAAS,EEwBpE,CFrBW,WAMiE,CAAC,AEehE,UFfiE,CAAA,CAAA,GACvE,CAAA,EAAA,EAAA,GAAA,EAAC,GAAD,EAAC,UAAI,CAAA,CAAS,EEerB,CFZW,eAAyE,CAAC,AEYpE,UFXjB,CAAA,CACF,GACS,CAAA,EAAA,EAAA,GAAA,EAAC,KAAA,CAAI,UAAA,CAAS,EEUrB,CA7BW,iBFM6E,CAAC,AEuBtE,UFtBnB,CAAA,CACF,GACS,CAAA,EAAA,EAAA,GAAA,EAAC,IAAA,ACyBoB,UDzBjB,CAAA,CAAS,GAGT,AINb,SAAS,EACP,CAAA,CACA,CAAA,CACA,CAAA,EACyC,AACzC,IAAM,EAAW,CAAA,CAAU,EAAG,CACxB,AADwB,EACZ,CAAA,CAAO,EAAG,CAAA,AAM5B,MAJwB,YAApB,OAAO,GAIP,CDkCoC,EClCH,YAArB,OAAO,EACd,EAGL,EACK,CAAC,GAAG,CAAA,CAAW,GAAG,CAAA,EAGpB,ECCF,SAAS,EAAwD,CACtE,MAAO,CAAA,CACP,WAAY,CAAA,iBACZ,CAAA,CACA,mBAAoB,EAA0B,CAAA,CAChD,EAAsC,AACpC,IAAM,EAAyB,GAA2B,EAEpD,EAAS,EADT,OCMQ,AACd,CDNyB,ACMzB,CAAA,CAAA,MAII,EADE,EAAwC,CAAA,CAAA,SAGrC,EAAI,EAAG,EAAI,EAAO,MAAA,CAAQ,IAAK,KAChC,EAAQ,CAAA,CAAO,CAAC,CAAA,MAKtB,YAAI,CAAC,EAA4B,GAAQ,EAAH,CAC/B,IAAA,CAAA,GACL,EAAc,KAAA,UAEhB,IAGI,CAAC,EAAa,GACF,EAAc,EAAO,EAAG,GACtC,CAD0C,CACrC,IAAA,CAAK,WAAW,AAEvB,IAkFsB,CA/ElB,CAAA,EA+E4C,CAA1B,CA/EM,GAgFtB,EAAM,KAAA,GAAS,CAAA,GAAO,EAAK,KAAA,EAAA,EAAe,QAAA,GAAa,EDqEd,ACrEmB,QAAA,CAhFxB,GAC5B,QAAA,CAAS,IAAA,CAAK,GAC1B,EAD+B,MAEjC,KAGK,EAAM,KAAA,GAAS,CAAA,CAAK,EAAY,KAAA,CAAO,KACpC,EAAU,EAAc,EAAO,EAAG,IAAI,EAExC,AAAS,WAAQ,KAQb,EAAe,EAAY,QAAA,CAC/B,EAAY,QAAA,CAAS,MAAA,CAAS,CAChC,CAAA,CAEM,EAA4C,CAChD,GAAG,CAAA,CACH,SAAU,CAAC,GAAG,EAAa,QAAA,CAAU,EAAO,IAIlC,CAJkC,OAIlC,CAAS,EAAY,QAAA,CAAS,MAAA,CAAS,CAAC,CAAA,CAAI,SAER,QAAA,CAAS,IAAA,CACvD,KAKU,UAEhB,OAGW,KAAA,GAAS,CAAA,CAAK,EAAY,KAAA,CAAO,CDuE+C,ICrEnF,EAAA,CAAA,CAAsB,EAAK,MAAA,CAAS,CAAC,CAAA,CAAA,EAC7B,GAAkB,EAAiB,EAAgB,GACjE,GAAI,EAAO,CAET,GADc,CAAA,EACF,QAAA,CAAS,IAAA,CAAK,KAAK,SAKnB,EAAc,EAAO,EAAG,GACtC,CAD0C,CACrC,IAAA,CAAK,WAAW,AAEvB,IAGI,EAAM,QAAA,GAAa,EAAY,QAAA,CAAU,KACrC,EAAiB,CAAA,CAAK,EAAK,MAAA,CAAS,CAAC,CAAA,CACrC,EAAQ,GAAkB,EAAiB,EAAgB,CAAC,MAAO,EAAM,KAAA,EAAS,CAAA,CAAE,KACtF,GAAS,EAAM,QAAA,GAAa,EAAM,QAAA,CAAA,CAEpC,GADc,CAAA,EACF,QAAA,CAAS,IAAA,CAAK,KAAK,MAEjC,GACgB,EAAc,EADvB,AAC8B,EAAG,GACtC,CAD0C,CACrC,IAAA,CAAK,WAAW,SAMjB,IAAA,CAAK,sCAAuC,GACpD,EADyD,AACpD,IAAA,CAAK,EAAK,CACjB,EADiB,MAGV,GD7GQ,MAAM,OAAA,CAAQ,GAAS,EAAJ,AAAY,CAAC,EAAK,CACnB,EADmB,CItCnB,QJyC3B,AIpCK,EJoCL,CAAA,EAAa,EAAA,CAFiC,MAEjC,EAAQ,IAClB,EACH,EItC6B,GJkCoC,ID/CzD,AACd,CAAA,CACA,CAAA,EAGA,AAF6B,GAEvB,OAAC,CAAA,MAAO,CAAA,UAAM,CAAA,CAAU,OAAA,OAAO,CAAA,CAAO,GAAG,EAAA,CAAQ,CDsCpB,CCpCnC,MAAO,CACL,GAAG,CAAA,CACH,MAAO,EAAY,EAAQ,EAAW,OAAO,EAC7C,KDsCoD,ACtC9C,EAAY,EAAQ,EAAW,MAAM,aACrB,EAAQ,EAAW,UAAU,EACnD,MAAO,EAAY,EAAQ,EAAW,OAAO,EAC7C,MAAO,EAAY,EAAQ,EAAW,OAAO,EAC7C,GAAG,CAAA,CAEP,ECmCwB,EAAmB,GACnC,EACH,CAAC,EAAmB,EAEjB,EAAA,CAAA,EAAa,EAAA,CAJwC,MAIxC,AAFG,EAGpB,IAAM,EAAA,EAA4B,GAClC,CAAC,EAAY,EAAsB,EAE/B,EAAW,EAAO,GAAA,CAAI,CAAC,EAAM,CAHuB,GAIxD,EAAW,MAAC,QAAY,EAAO,SAAU,CAAA,aAAO,CAAA,CAAW,GAG7D,MAAA,CAAA,EAAA,EAAA,GAAA,EAAA,EAAA,QAAA,CAAA,CAAU,SAAA,CAAA,CAAS,CACrB,CAEA,IAAM,EAAkB,CACtB,EACA,IAEA,SAAS,EAAkC,CAAA,EAAqC,AAC9E,GAAA,CAAO,KAFQ,CAER,OAAM,CAAA,CAAO,UAAA,CAAA,CAAY,EAC1B,EAAM,EAAK,IAAA,EAAQ,CAAA,KAAA,EAAQ,EAAK,CAAA,CAEtC,CAFsC,MAElC,EAA0B,GACrB,AAgEX,CAjEoC,QAiE3B,AAAW,CAAA,CAA6B,CAAA,CAAe,CAAA,EAAa,AAC3E,IAAM,EAAW,EAAK,QAAA,CAAS,GAAA,CAAI,CAAC,EAAO,IACzC,EAAW,CACT,KAAM,EAAM,IAAA,CAAO,EAAQ,CAAC,GAAG,CAAA,CAAO,KAAM,CAAA,GAAA,EAAM,EAAK,CAAA,EAAA,AAAI,EAAU,CAAA,EACrE,KADqE,CAC9D,EACP,SAAU,CAAA,CAEZ,CAAC,EChFc,CDmFX,EAAY,EAAW,IAAA,CAEvB,EADU,AACV,CAD+B,mBAAd,EAA2B,EAAY,CAAA,CAAU,EAAK,SAAQ,GAC7D,EAAW,WAAA,CAEnC,GAAI,IAAS,EAAW,WAAA,CAAa,CACnC,IAAM,EAAQ,EAAK,QAAA,EAAY,SAC/B,ENhJJ,EAAY,CAAA,YAAA,EAAe,AMgJwB,ENhJf,CAAA,CAAA,AMgJT,CNhJc,AMgJe,INhJpB,EAAW,EMgJY,CN9IhD,AM8IiD,SAAU,YAAa,KAAM,CAAA,CAAM,CAC7F,CN/IuC,AMiJvC,CNjJwC,KMkJtC,CAAA,EAAA,EAAA,GAAA,EAAC,EAAA,CAAe,CAAhB,KChFqC,ADgFd,QAAM,EAAc,SAAU,CAAA,aAAO,WACzD,CAAA,EADQ,EAIf,CAFI,CAtFkB,EAAM,EAAO,GAAG,AAGhC,EAA4B,GACvB,AA2BX,CA5BsC,QA4B7B,AACP,CAAA,CACA,CAAA,CACA,CAAA,EACA,IACM,EAAO,EAAe,MAAC,QAAM,EAAO,SAAU,CAAA,aAAO,CAAA,CAAW,EAChE,EAAW,EAAW,QAAA,CAEtB,EAAA,CADU,AAAoB,mBAAb,EAA0B,EAAW,CAAA,CAAS,EAAK,SAAQ,GAC5D,EAAW,eAAA,CAEjC,GAAA,IAAW,EAAW,eAAA,CAAiB,CACrC,IAAM,EAAQ,EAAK,QAAA,EAAY,WNvGnC,EAAY,CAAA,iBAAA,CMwGe,CNxGK,AMwGuB,ENxGd,CAAA,CAAA,CMwGmB,ANxGd,IAAL,MAAe,EMwGO,CACzD,KAAM,EACN,SAAU,eAAA,CACX,CFJ6C,AEKhD,CAEA,IAAI,EAAW,EAAK,QAAA,IAChB,EAAK,KAAA,EAAwB,WAAf,EAAK,KAAA,CAAoB,IAGnC,UAAC,CAAA,CAAU,GAAG,EAAA,CAAa,EACjC,EAAW,EAAW,CADF,AACG,KAAM,EAAW,QAAO,SAAU,CAAA,CAAiB,CAAC,CAC7E,CAEA,MACE,CAAA,EAAA,EAAA,GAAA,EAAC,EC9E4B,CD8Ef,MAAO,QAAM,EAAc,SAAU,CAAA,aAAO,WACvD,CAAA,EADM,GAET,CAxDsB,EAAM,EAAO,GAAG,AAGpC,EAA0B,GACrB,CADyB,QAmF3B,AAAW,CAAA,CAAqC,CAAA,CAAgB,CAAA,EAAa,AACpF,GAAM,SAAC,CAAA,UAAS,CAAA,SAAU,CAAA,CAAA,CAAW,EAC/B,EAAO,EAAW,KAAA,CAAM,EAAQ,EAAK,EAAW,EAAhB,SAAgB,CAChD,EAAW,EAAK,QAAA,CAAS,GAAA,CAAI,CAAC,EAAO,IACzC,EAAW,CAAC,KAAM,EAAO,MAAO,EAAY,SAAU,CAAA,CAAgB,CAAC,GAGzE,OAAI,IAAS,EAAW,WAAA,EACtB,ENxKJ,EAAY,CAAA,WAAA,EAAc,AMwKoB,ENxKZ,CAAA,CAAA,CAAK,AMwKZ,GNxKO,AMwKoB,INxKR,EMwKW,CNtK9C,AMsK+C,SAAU,OAAQ,KAAM,CAAA,CAAS,EAIvF,CAAA,CN1KkC,CAAC,AM0KnC,EAAA,GAAA,EAAC,EAAA,CAEC,CAFF,IEtKC,AFwKO,SExKE,EAAgB,CAAA,EAA6C,IACvE,EAAO,UACX,EAAK,QAAA,CAAS,OAAA,CAAQ,AAAC,MACa,GAChC,GAF+B,AAEvB,CAD+B,CACvB,IAAA,CACP,EAA0B,KACnC,EAD0C,CAClC,EAAgB,EAAO,AADW,CAG9C,AAFmC,CAElC,EACM,GF+JqB,GACtB,CAD0B,KACnB,WACP,UACA,aACA,WAEC,CAAA,EAPI,CCrEH,CD+ER,EAzGsB,EAAM,EAAO,GAAG,AAGhC,AAA0B,AAgBvB,EAAK,EAhBsB,GAgBtB,IAAS,EAAW,KAAA,CAfvB,AAgJX,SAAS,AAAkB,CAAA,CAAmB,CAAA,CAAe,CCjEpC,CDiEiD,CAAA,EAAmB,AAC3F,IAOM,EAAO,AAPP,EAOkB,KAAA,CAAM,EAAK,IAPf,CAOoB,CAAA,QACjC,ECnES,CAAA,EAAA,EDmEF,ACnEE,EAAA,CAAA,EDmED,EAAA,CAPb,MAAO,WACP,QACA,aACA,CAIgC,EAAT,GAAsB,AAAK,IACtD,EA1J6B,EAAM,EAAO,EAAK,GAGzC,EAAoB,GAoG1B,AAnGW,AAJ4C,CAGzB,QAoGrB,AAAY,CAAA,CAAyB,CAAA,CAAe,CAAA,CAAa,CAAA,EAExE,GAAM,MAAC,CAAA,CAAM,GAAG,EAAA,CAAS,EAAe,CAAxB,KAAyB,QAAM,WAAO,aAAU,CAAA,CAAW,EACrE,EAAQ,EAAM,IAAA,CAAK,KAAA,EAAS,ICvEsC,KD0ElE,EAAA,AADJ,CAA4B,mBAArB,EAAW,KAAA,CAAuB,EAAW,KAAA,CAAQ,EAAW,KAAA,CAAM,EAAK,GAC3D,EAAW,iBAAA,QAEhC,IAAU,EAAW,iBAAA,EACvB,EN/LJ,EAAY,CAAA,aAAA,EAAgB,AM+LwB,EN/Ld,CM+LX,AN/LW,CAAA,CAAK,AM+Lc,KN/LnB,EAAY,EM+LU,CACtD,AN9LK,SM8LK,aACV,IN/L+B,CAAC,AM+L1B,CAAA,CACP,EAGI,CAAA,EAAA,EAAA,GAAA,EAAC,EAAA,CAAiB,CAAlB,EAAqB,CAAA,CAAO,MAAO,EAAM,IAAA,YAAM,CAAA,EAAnC,EACrB,CADgF,CAlHzD,EAAM,EAAO,EAAK,GAGnC,EAA8B,GACzB,AAJsC,AAqHjD,CAlHwC,QAkH/B,AAAW,CAAA,CAAuB,CAAA,EAAa,AACtD,GAAI,EAAK,IAAA,GAAS,CAAA;AAAA,CAAA,CAAM,CACtB,IAAM,EAAY,EAAW,SAAA,CAC7B,OAAO,EAAY,CAAA,EAAA,EAAA,GAAA,EAAA,AAAC,EAAA,CAAA,EAAe,GAAK,AAAK,CAAA;AAAA,CAAA,AAC/C,CAEA,OAAO,EAAK,IACd,AADc,EAvHQ,EAAM,GAGnB,AAHsB,AA0H/B,SAAS,AAAkB,CAAA,CAAmB,CAAA,CAAe,CAAA,CAAa,CAAA,EAAmB,AAQ3F,EAAuB,EAAmB,EAAK,KAAK,EAAG,CAAC,SAAU,QAAS,KAAM,EAAK,KAAA,CAAM,EAE5F,IAAM,EAAc,EAAW,WAAA,CAC/B,MAAO,CAAA,EAAA,EAAA,GAAA,EAAC,EAAA,CATN,MAAO,mBAEP,aACA,CAMgC,EAAT,EAC3B,EAnI2B,EAAM,EAAO,EAAK,EAC7C,EAoJF,IArJuD,KAqJ9C,EAAe,CAAA,EACtB,GAAM,MAAC,CAAA,OAAM,CAAA,UAAO,CAAA,YAAU,CC/DM,CD+DN,CAAc,EAEtC,EADO,AChEuB,UHjJpC,AADc,CACd,EAC+E,AA3CjF,IAAA,iBA4CS,CAAA,EACD,EAAW,EAAA,QAAA,EAAA,EAAkB,IAC/B,CAAC,GAAY,CAAC,EAAS,MAAA,CAAA,MAClB,CAAA,CAAA,KAGH,EAAc,EAAA,GAAA,CAAa,GAE3B,EAA6C,OAC1C,mBACG,UACA,WAAA,EAGR,EAAgD,CAAC,EAAQ,MAAA,GAEpD,EAAI,EAAG,EAAI,EAAS,MAAA,CAAQ,IAAK,KAClC,EAAO,CAAA,CAAS,CAAC,CAAA,IACnB,CAAA,EAAA,aAIE,EAAc,CAAA,CAAY,CAAC,CAAA,EAAA,EAAK,CAClC,EAAM,KAGN,EAAU,MAAA,CAAS,EAAA,IAChB,CAAK,EAAM,EAAU,MAAA,CAAQ,IAAO,QAC1B,OAAA,EAAA,CAAA,CAAU,EAAG,EAAb,KAAA,EAAA,EAAgB,OAAA,GAAW,GAClC,EAAQ,EAAY,OAAA,CAAQ,IAAI,EAExB,CAAA,IAAV,EAAU,QAIF,MAAA,CAAO,EAAO,CAAC,CAC7B,KAOE,EAAc,GAHN,EAAA,KAAA,CAAgB,EAAG,EAAA,CAGb,CAAU,EAAU,KE5BH,CF4BG,CAAS,CAAC,CAAA,IAC3C,EAIL,SAAW,KAAW,EAAa,KAC3B,EAAU,MAAA,EAAA,KAAA,EAAA,EAAU,IAAA,CAAK,AAAC,GAAQ,EAAI,IAAA,GAAS,GAC/C,EAAW,EADoC,AAC1B,EAAQ,KAAA,CAAQ,EACrC,EAAyC,CAC7C,MAAO,QACP,KAAM,EAAK,IAAA,CACX,SAAU,CAAA,CAAA,SACV,qBAEA,CAAA,IAGU,QAAA,CAAS,IAAA,CAAK,GAAA,EAChB,IAAA,CAAK,GACf,CADmB,CACL,CAChB,IAKI,EAAmB,GAAO,CAAH,IACnB,EAAQ,EAAK,IAAA,CAAA,KAAA,CAAW;CAAI,UACzB,EAAO,EAAM,MAAA,CAAQ,KAAS,GAAA,EAC/B,MAAA,CAAO,EAAM,EAAG,CAAA;CAAI,IAGhB,QAAA,CAAW,EAAY,QAAA,CAAS,MAAA,CAC1C,EAAM,GAAA,CAAK,AAAD,IAAW,CAAC,EAAX,IAAkB,aAAS,EAAA,CAAA,CAAM,CAEhD,MAAA,EAEc,QAAA,CAAW,EAAY,QAAA,CAAS,MAAA,CAAO,GAEvD,CAF2D,OAIpD,EAAS,QAAA,GE4HY,GACN,CADU,EACV,CAAI,CAAC,EAAO,IAChC,EAAW,CAAC,KAAM,EAAO,SAAU,CAAA,EAAM,MAAO,aAAG,CAAA,CAAW,GAGhE,MAAO,CACL,KAAM,EAAK,IAAA,EAAQ,CAAA,MAAA,EAAS,EAAA,CAAK,UACjC,QACA,WACA,OACA,CAAA,CAEJ,CAEA,SAAS,IAET,GAFgB","ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35]}