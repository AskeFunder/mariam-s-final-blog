{"version":3,"sources":["turbopack:///[project]/Desktop/Vue/Ionic/mariam-s-final-blog/node_modules/sanity/src/structure/panes/list/ListPaneContent.tsx","turbopack:///[project]/Desktop/Vue/Ionic/mariam-s-final-blog/node_modules/sanity/src/structure/panes/list/ListPaneHeader.tsx","turbopack:///[project]/Desktop/Vue/Ionic/mariam-s-final-blog/node_modules/sanity/src/structure/panes/list/ListPane.tsx"],"sourcesContent":["import {Box, Text} from '@sanity/ui'\nimport {useCallback} from 'react'\nimport {\n  CommandList,\n  type CommandListItemContext,\n  type GeneralPreviewLayoutKey,\n  useGetI18nText,\n  useI18nText,\n} from 'sanity'\nimport {styled} from 'styled-components'\n\nimport {PaneContent, PaneItem, usePaneLayout} from '../../components'\nimport {type PaneListItem, type PaneListItemDivider} from '../../types'\n\ninterface ListPaneContentProps {\n  childItemId?: string\n  isActive?: boolean\n  items: (PaneListItem<unknown> | PaneListItemDivider)[] | undefined\n  layout?: GeneralPreviewLayoutKey\n  showIcons: boolean\n  title: string\n}\n\nconst DividerContainer = styled(Box)`\n  display: flex;\n  align-items: center;\n  gap: 1rem;\n  margin: 0.75rem 0 0.25rem 0;\n`\n\nconst Divider = styled.hr`\n  flex: 1;\n  background-color: var(--card-border-color);\n  height: 1px;\n  margin: 0;\n  border: none;\n`\n\nconst DividerTitle = styled(Text)`\n  padding-bottom: 0.75rem;\n  padding-left: 0.5rem;\n  padding-right: 0.5rem;\n`\n\ninterface DividerItemProps {\n  item: PaneListItemDivider\n}\n\nfunction DividerItem({item}: DividerItemProps) {\n  const {title: dividerTitle} = useI18nText(item)\n  return (\n    <DividerContainer>\n      <DividerTitle weight=\"semibold\" muted size={1}>\n        {dividerTitle}\n      </DividerTitle>\n\n      <Divider />\n    </DividerContainer>\n  )\n}\n\n/**\n * @internal\n */\nexport function ListPaneContent(props: ListPaneContentProps) {\n  const {childItemId, items, isActive, layout, showIcons, title} = props\n  const {collapsed: layoutCollapsed} = usePaneLayout()\n  const getI18nText = useGetI18nText(\n    items?.filter(\n      (item): item is Exclude<typeof item, {type: 'divider'}> => item.type !== 'divider',\n    ),\n  )\n\n  const getItemDisabled = useCallback(\n    (itemIndex: number) => {\n      return items?.find((_, i) => i === itemIndex)?.type === 'divider'\n    },\n    [items],\n  )\n\n  const shouldShowIconForItem = useCallback(\n    (item: PaneListItem): boolean => {\n      const itemShowIcon = item.displayOptions?.showIcon\n\n      // Specific true/false on item should have precedence over list setting\n      if (typeof itemShowIcon !== 'undefined') {\n        return itemShowIcon !== false // Boolean(item.icon)\n      }\n\n      // If no item setting is defined, defer to the pane settings\n      return showIcons !== false // Boolean(item.icon)\n    },\n    [showIcons],\n  )\n\n  const renderItem = useCallback(\n    (item: PaneListItem<unknown> | PaneListItemDivider, ctx: CommandListItemContext) => {\n      const {virtualIndex: itemIndex} = ctx\n\n      if (item.type === 'divider') {\n        return (\n          <Box key={`divider-${itemIndex}`} marginBottom={1}>\n            {item.title ? <DividerItem item={item} /> : <Divider />}\n          </Box>\n        )\n      }\n\n      const pressed = !isActive && childItemId === item.id\n      const selected = isActive && childItemId === item.id\n      // If this is a document list item, pass on the ID and type,\n      // otherwise leave it undefined to use the passed title and gang\n      const value =\n        item._id && item.schemaType\n          ? {_id: item._id, _type: item.schemaType.name, title: item.title}\n          : undefined\n\n      return (\n        <PaneItem\n          key={item.id}\n          icon={shouldShowIconForItem(item) ? item.icon : false}\n          id={item.id}\n          layout={layout}\n          marginBottom={1}\n          pressed={pressed}\n          schemaType={item.schemaType}\n          selected={selected}\n          title={getI18nText(item).title}\n          value={value}\n        />\n      )\n    },\n    [childItemId, getI18nText, isActive, layout, shouldShowIconForItem],\n  )\n\n  return (\n    <PaneContent overflow={layoutCollapsed ? 'hidden' : 'auto'}>\n      {items && items.length > 0 && (\n        <CommandList\n          activeItemDataAttr=\"data-hovered\"\n          ariaLabel={title}\n          canReceiveFocus\n          getItemDisabled={getItemDisabled}\n          itemHeight={51}\n          items={items}\n          onlyShowSelectionWhenActive\n          paddingBottom={1}\n          paddingX={3}\n          renderItem={renderItem}\n          wrapAround={false}\n        />\n      )}\n    </PaneContent>\n  )\n}\n","import {ArrowLeftIcon} from '@sanity/icons'\n\nimport {Button} from '../../../ui-components'\nimport {BackLink, PaneHeader, PaneHeaderActions, usePane} from '../../components'\nimport {type PaneMenuItem, type PaneMenuItemGroup} from '../../types'\nimport {useStructureTool} from '../../useStructureTool'\n\ninterface ListPaneHeaderProps {\n  index: number\n  menuItems?: PaneMenuItem[]\n  menuItemGroups?: PaneMenuItemGroup[]\n  title: string\n}\n\nexport const ListPaneHeader = ({index, menuItems, menuItemGroups, title}: ListPaneHeaderProps) => {\n  const {features} = useStructureTool()\n  const {collapsed, isLast} = usePane()\n  // Prevent focus if this is the last (non-collapsed) pane.\n  const tabIndex = isLast && !collapsed ? -1 : 0\n\n  return (\n    <PaneHeader\n      actions={<PaneHeaderActions menuItems={menuItems} menuItemGroups={menuItemGroups} />}\n      backButton={\n        features.backButton &&\n        index > 0 && (\n          <Button\n            as={BackLink}\n            data-as=\"a\"\n            icon={ArrowLeftIcon}\n            mode=\"bleed\"\n            tooltipProps={{content: 'Back'}}\n          />\n        )\n      }\n      tabIndex={tabIndex}\n      title={title}\n    />\n  )\n}\n","import {Card, Code} from '@sanity/ui'\nimport {useI18nText} from 'sanity'\n\nimport {Pane} from '../../components'\nimport {_DEBUG} from '../../constants'\nimport {type BaseStructureToolPaneProps} from '../types'\nimport {ListPaneContent} from './ListPaneContent'\nimport {ListPaneHeader} from './ListPaneHeader'\n\ntype ListPaneProps = BaseStructureToolPaneProps<'list'>\n\n/**\n * @internal\n */\nexport function ListPane(props: ListPaneProps) {\n  const {childItemId, index, isActive, isSelected, pane, paneKey} = props\n\n  const {defaultLayout, displayOptions, items, menuItems, menuItemGroups} = pane\n  const showIcons = displayOptions?.showIcons !== false\n  const {title} = useI18nText(pane)\n\n  return (\n    <Pane\n      currentMaxWidth={350}\n      data-testid=\"structure-tool-list-pane\"\n      data-ui=\"ListPane\"\n      id={paneKey}\n      maxWidth={640}\n      minWidth={320}\n      selected={isSelected}\n    >\n      {_DEBUG && (\n        <Card padding={4} tone=\"transparent\">\n          <Code>{pane.source || '(none)'}</Code>\n        </Card>\n      )}\n\n      <ListPaneHeader\n        index={index}\n        menuItems={menuItems}\n        menuItemGroups={menuItemGroups}\n        title={title}\n      />\n\n      <ListPaneContent\n        key={paneKey}\n        childItemId={childItemId}\n        isActive={isActive}\n        items={items}\n        layout={defaultLayout}\n        showIcons={showIcons}\n        title={title}\n      />\n    </Pane>\n  )\n}\n"],"names":["DividerContainer","styled","Box","Divider","hr","DividerTitle","Text","DividerItem","t0","$","_c","item","title","dividerTitle","useI18nText","t1","t2","Symbol","for","t3","ListPaneContent","props","childItemId","items","isActive","layout","showIcons","collapsed","layoutCollapsed","usePaneLayout","filter","_temp","getI18nText","useGetI18nText","itemIndex","find","_","i","type","getItemDisabled","item_0","itemShowIcon","displayOptions","showIcon","shouldShowIconForItem","item_1","ctx","virtualIndex","itemIndex_0","pressed","id","selected","value","_id","schemaType","_type","name","undefined","icon","renderItem","t4","t5","length","t6","ListPaneHeader","index","menuItems","menuItemGroups","features","useStructureTool","isLast","usePane","tabIndex","backButton","BackLink","ArrowLeftIcon","content","ListPane","isSelected","pane","paneKey","defaultLayout","source","_DEBUG"],"mappings":"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"}